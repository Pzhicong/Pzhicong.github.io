{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/新建文本文档.txt","path":"新建文本文档.txt","modified":1,"renderable":0},{"_id":"source/README.MD","path":"README.MD","modified":1,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/blog-logo-backup.jpg","path":"images/blog-logo-backup.jpg","modified":1,"renderable":0},{"_id":"source/images/height.png","path":"images/height.png","modified":1,"renderable":0},{"_id":"source/images/伪元素.png","path":"images/伪元素.png","modified":1,"renderable":0},{"_id":"source/images/伪类.png","path":"images/伪类.png","modified":1,"renderable":0},{"_id":"source/images/rect.jpg","path":"images/rect.jpg","modified":1,"renderable":0},{"_id":"source/images/blog-logo.jpg","path":"images/blog-logo.jpg","modified":1,"renderable":0},{"_id":"source/images/svn/clean.png","path":"images/svn/clean.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/新建文本文档.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1528772801228},{"_id":"source/README.MD","hash":"2e05bfb200686c8987220edb374abb9e04b43fb3","modified":1528772801175},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1524623437020},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1524623437020},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1527055109664},{"_id":"source/CNAME","hash":"baedc0ad6ff785c2ecb712035f0dde19a4356571","modified":1528772801173},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1524623437023},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1524623437021},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1524623437024},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1524623437024},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1524623437024},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1524623437024},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1524623437026},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1524623437025},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1524623437025},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1524623437062},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1524623437026},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1524623437027},{"_id":"themes/next/_config.yml","hash":"9e08163fa129bbd8447b4a1e9a4137170c80ff7a","modified":1524729708242},{"_id":"source/_posts/helloword.md","hash":"a56fa83a1378276c1c83fec5c66b39b9cab84e04","modified":1528793601897},{"_id":"source/_posts/jsCssDomBlock.md","hash":"347758456daf2da576c75fee8962375195fefb99","modified":1529402814310},{"_id":"source/about/index.md","hash":"a09f026b875e45ebac343a4fbbdbc096cb82a7bc","modified":1528772801202},{"_id":"source/_posts/dywebsite.md","hash":"cc773b902bc4caef3eaed9da1be31a6f81a52add","modified":1528772801181},{"_id":"source/_posts/aboutcss.md","hash":"b4ffb0db71c3ff909c21a73badecc50ca043fdf7","modified":1528772801178},{"_id":"source/_posts/marginover.md","hash":"b27256496d6d33dba16857ed81b8cc1dd63db41c","modified":1528772801194},{"_id":"source/images/blog-logo-backup.jpg","hash":"61e60ddea57433fa507e88bea52d7894fa2496b1","modified":1528772801206},{"_id":"source/_posts/lazyload.md","hash":"69076f929cf1473c9f46baf088388194fbbb6636","modified":1528772801192},{"_id":"source/images/height.png","hash":"794c4f5c3c53f32907e68343b8aeed52d5e0ea3f","modified":1528772801209},{"_id":"source/images/伪元素.png","hash":"4bf8d5a22c6f7e04b411189206a5a2f19b48b17b","modified":1528772801217},{"_id":"source/images/伪类.png","hash":"6faccbb8988a09c67e024ce5e5d5fc89ff104ff8","modified":1528772801219},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1524623436982},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1524623436986},{"_id":"source/images/rect.jpg","hash":"7d3a056df1b39fa3ed854263a3839fcb55f71423","modified":1528772801211},{"_id":"themes/next/.git/index","hash":"eb0e697c717455312e37465c55c221206722e4cf","modified":1528782431859},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1524623436978},{"_id":"source/tags/index.md","hash":"d7d592ee3b5e5651b38096b599c74aaa2eab44e0","modified":1528772801226},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1524623364469},{"_id":"source/mine/index.md","hash":"dec65b4ac5636173baf75391aaa9bc6e51cb3efa","modified":1528772801223},{"_id":"source/_posts/svn.md","hash":"8dd06408d228274f3c9f8396034ebf30e2201632","modified":1528772801196},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1524623437023},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1524623437022},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1524623437022},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1524623437022},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1524623437028},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1524623437028},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1524623437028},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1524623437027},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1524623437029},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1524623437030},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1524623437030},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1524623437030},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1524623437031},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1524623437031},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1524623437031},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1524623437031},{"_id":"themes/next/languages/zh-Hans.yml","hash":"0dcfc2652948a902bb42596b8fc01459bd13a837","modified":1524639004213},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1524623437032},{"_id":"source/images/blog-logo.jpg","hash":"73b9b960b426706b7a19688d9cc322e7f30a007f","modified":1528793767233},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1524623437032},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1524623437060},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1524623437060},{"_id":"themes/next/layout/_layout.swig","hash":"419ebd43102023f1dea64257500fa4193233ba7e","modified":1524641451912},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1524623437061},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1524623437060},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1524623437060},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1524623437062},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1524623437063},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1524623437029},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1524623437061},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1524623437200},{"_id":"source/_posts/website.md","hash":"53a2d8970debc12c4003b37008556e9379fb114b","modified":1528772801199},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1524623437201},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1524623437061},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1524623437200},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437116},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1524623364470},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1524623364469},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1524623364470},{"_id":"source/images/svn/clean.png","hash":"40f1a8a78dbe66ead0efbc060aa8c4664b2bf2d4","modified":1528772801215},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1524623364471},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1524623364471},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1524623364473},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1524623364471},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1524623364472},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1524623437033},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1524623364472},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1524623437034},{"_id":"themes/next/.git/logs/HEAD","hash":"eade5832568976ddfe7e4c7031e38951fadc95ca","modified":1524623436984},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1524623437033},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1524623364472},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1524623437034},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1524623437036},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1524623437035},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1524623437036},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1524623437035},{"_id":"themes/next/layout/_partials/footer.swig","hash":"393e4973b958f497978b838daaea7019787ae7b5","modified":1524642325720},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1524623437037},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1524623437039},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1524623437039},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1524623437039},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1524623437037},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1524623437039},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1524623437043},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1524623437055},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1524623437043},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1524623437055},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1524623437056},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1524623437046},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1524623437055},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1524623437057},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1524623437056},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1524623437117},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1524623437115},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1524623437117},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1524623437116},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1524623437118},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1524623437118},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1524623437118},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1524623437056},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1524623437119},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1524623437119},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1524623437119},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1524623437120},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1524623437120},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1524623437121},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1524623437120},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1524623437121},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1524623437122},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1524623437064},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1524623437064},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1524623437063},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1524623437065},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1524623437065},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1524623437066},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1524623437122},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1524623437067},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1524623437066},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1524623437121},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1524623437064},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1524623437122},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437044},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437045},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437102},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437102},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437103},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437113},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524623437115},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1524623436983},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1524623437038},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1524623437040},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1524623437038},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1524623437041},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1524623437040},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1524623437042},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1524623437041},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1524623437044},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1524623437045},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1524623437042},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1524623437047},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1524623437044},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1524623437041},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1524623437048},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1524623437048},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1524623437047},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1524623437048},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1524623437049},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1524623437047},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1524623437049},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1524623437049},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1524623437050},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1524623437050},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1524623437050},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1524623437050},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1524623437052},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1524623437052},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1524623437053},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1524623437053},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1524623437053},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1524623437054},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1524623437054},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1524623437054},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1524623437058},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1524623437051},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1524623437059},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1524623437101},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1524623437102},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1524623437058},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1524623437103},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1524623437059},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1524623437103},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1524623437112},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1524623437113},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1524623437114},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1524623437114},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1524623437124},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1524623437123},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1524623437123},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1524641380878},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1524623437124},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1524623437125},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1524623437125},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1524623437126},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1524623437126},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1524623437134},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1524623437127},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1524623437125},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1524623437127},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1524623437145},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1524623437145},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1524623437152},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1524623437152},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1524623437144},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1524623437153},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1524623437153},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1524623437155},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1524623437155},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1524623437137},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1524623437156},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1524623437156},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1524623437156},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1524623437173},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1524623437175},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1524623437174},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1524623437173},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1524623437175},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1524623437175},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1524623437177},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1524623437178},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1524623437179},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1524623437178},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1524623437177},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1524623437180},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1524623437179},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1524623437180},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1524623437180},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1524623437180},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1524623437181},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1524623437181},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1524623437181},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1524623437182},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1524623437182},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1524623437182},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1524623437172},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1524623437182},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1524623437183},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1524623437184},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1524623437184},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1524623437194},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1524623437195},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1524623437198},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1524623437199},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1524623437199},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1524623437173},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"eade5832568976ddfe7e4c7031e38951fadc95ca","modified":1524623436984},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1524623436979},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1524623437057},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1524623437057},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1524623437067},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1524623437068},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1524623437069},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1524623437069},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1524623437068},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1524623437075},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1524623437091},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1524623437099},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1524623437100},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1524623437099},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1524623437100},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1524623437101},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1524623437101},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1524623437105},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1524623437105},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1524623437105},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1524623437106},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1524623437106},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1524623437106},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1524623437104},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1524623437104},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1524623437098},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1524623437110},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1524623437110},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1524623437111},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1524623437112},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1524623437112},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1524623437108},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1524623437108},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1524623437109},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1524623437108},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1524623437109},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1524623437111},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1524623437126},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1524623437131},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1524623437133},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1524623437145},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1524623437146},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1524623437147},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1524623437146},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1524623437134},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1524623437147},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1524623437148},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1524623437150},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1524623437151},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1524623437152},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1524623437160},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1524623437154},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1524623437157},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1524623437157},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1524623437154},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1524623437189},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1524623437194},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1524623437132},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1524623437197},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1524623437171},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1524623437171},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"eade5832568976ddfe7e4c7031e38951fadc95ca","modified":1524623436981},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1524623437070},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1524623437069},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1524623437070},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1524623437070},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1524623437071},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1524623437071},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1524623437072},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1524623437072},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1524623437073},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1524623437074},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1524623437074},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1524623437075},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1524623437075},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1524623437073},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1524623437077},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1524623437076},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1524623437077},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1524623437076},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1524623437078},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1524623437077},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1524623437077},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1524623437078},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1524623437078},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1524623437079},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1524623437079},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1524623437087},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1524623437079},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1524623437088},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"ad6306abb92013cc821ee2b53b123251c0f2d69d","modified":1524641585967},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1524623437079},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1524623437087},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1524623437089},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1524623437089},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1524623437089},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1524623437090},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1524623437089},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1524623437090},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1524623437090},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1524623437092},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1524623437093},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1524623437093},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1524623437092},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1524623437091},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1524623437091},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1524623437093},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1524623437094},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1524623437094},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1524623437095},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1524623437093},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1524623437095},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1524623437095},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1524623437096},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1524623437096},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1524623437097},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1524623437097},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1524623437097},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1524623437097},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1524623437107},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1524623437107},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1524623437110},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1524623437096},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1524623437129},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1524623437128},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1524623437129},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1524623437148},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1524623437148},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1524623437130},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1524623437130},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1524623437150},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1524623437164},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1524623437170},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1524623437162},{"_id":"themes/next/.git/objects/pack/pack-4a376867f92a55cc1eff78dd206b449049df8e30.idx","hash":"5d82e4a6963dfe724c3089c59327e82e9d35f246","modified":1524623436805},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1524623437149},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1524623437150},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1524623437149},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1524623437137},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1524623437168},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1524623437188},{"_id":"themes/next/.git/objects/pack/pack-4a376867f92a55cc1eff78dd206b449049df8e30.pack","hash":"9b960c80f1ec4d36aa534a86efe48883d7046fb8","modified":1524623436810}],"Category":[{"name":"Blog","_id":"cjiliy7vu000480wgpb2top4a"}],"Data":[],"Page":[{"title":"小程序商城","date":"2018-04-25T03:06:03.000Z","_content":"# 微信小程序商城\n微信小程序商城，微信小程序微店，长期维护版本，欢迎大家踊跃提交贡献代码；\n\n## 参与开发\n\n更多项目请关注 [https://github.com/EastWorld](https://github.com/EastWorld)。\n\n- 产品设计 & UI [@blackjeffer](https://github.com/orgs/EastWorld/people/blackjeffer)\n- 小程序开发 [@jiulonggithub](https://github.com/orgs/EastWorld/people/jiulonggithub)\n- 接口及后台支持 [@gooking](https://github.com/gooking)\n\n期待您的加入~ ,欢迎大家踊跃提交代码。\n\n开发问题欢迎一起交流 ： QQ交流群：479413914\n\n## 扫码体验\n\n<p>\n<img src=\"https://cdn.it120.cc/apifactory/2017/09/15/487409738ebb80c44eda01c46d59b20c.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n<img src=\"https://cdn.it120.cc/apifactory/2018/04/04/570e9a77dbc9cacda176e98a4f2778c5.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n<img src=\"https://cdn.it120.cc/apifactory/2018/04/01/b7b8f5a0fcfc72454ade8510ab929717.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n<img src=\"https://cdn.it120.cc/apifactory/2018/04/19/fbf88e05686b6d9c7c5d5476c7b798d1.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n</p>\n\n## 最新功能\n\n- 新增商品砍价功能，扫码上面第一个二维码，第一个商品详情可体验砍价；\n- 分享商品给好友，好友下单后可获得积分、现金返现；\n- 可修改订单默认30分钟未支付被关闭的时间；\n\n## 使用说明\n\n> [申请商城后台账号](https://www.it120.cc/info/wxapp/115)\n>\n> 选择使用商城模块\n> > 在 API 列表中选择使用以下API模块：\n>\n> > >系统参数设置： 用于配置商城名称；\n>\n> > > 小程序用户注册接口：实现用户注册；\n>\n> > > 小程序登录接口：实现用户自动登录；\n>\n> > > App Banner管理接口: 设置商城首页轮播图片\n>\n> > > 在线支付接口：完成小程序在线支付；\n>\n> > > 商品类别接口；\n>\n> > > 商城商品管理接口；\n>\n> > > 商城订单管理接口；\n>\n> > > 用户收货地址接口；\n>\n> > > 优惠券接口；\n>\n> > > 平台公告模块\n>\n> > > 积分模块【签到送积分】\n>\n> 修改源码中  app.js 文件\n> > > globalData:{\n>  userInfo:null,\n>  subDomain:\"mall\"\n>}\n> >\n> > > subDomain 中的 mall 为上面您注册开通的域名\n>\n> [设置小程序合法服务器域名](https://www.it120.cc/info/wxapp/116)\n>\n> 重启您的小程序开发工具，完成\n\n## 常见问题\n\n- [如何修改小程序商城的标题？](https://www.it120.cc/info/faq/778)\n- [“无法登录”的错误？](https://www.it120.cc/info/faq/391)\n- [小程序提示“无法登录”的错误？](https://www.it120.cc/info/faq/392)\n- [如何发布自己的商品？](https://www.it120.cc/info/faq/436)\n- [如何给Banner增加链接，点击打开某个商品？](https://www.it120.cc/info/faq/437)\n- [获取我的accesstoken，以便我在其他系统使用](https://www.it120.cc/info/faq/763)\n- 工厂后台设置 appid、secret、微信支付商户号和秘钥时候的 token 怎么填？\n>  不要填！\n>\n>  不要填！\n>\n>  不要填！\n>\n> 重要的事情说三遍，这个小程序用不到，是给服务号使用的，所以大家空着不要填\n- 微信支付时候，提示 50000 错误，不能获取到预支付id\n>  这个错误是无法获取到微信支付的预支付信息\n> - 可能是你没有在后台配置您的微信支付商户号和秘钥，或者配置错误\n>\n> - 可能是你配置的微信支付不是当前小程序申请的（微信支付目前无法跨小程序调用）\n>\n> - 确保微信开发工具上面登录的 APPID 和你在后台配置的 APPID 是同一个\n- 能否帮我免费添加功能？\n> 可以！\n>\n> <img src=\"https://cdn.it120.cc/apifactory/2017/07/29/18ae9b8aaedcd747fc5f1c3fa8bc0fe4.png\" width=\"300px\">\n>\n> - 点击页面顶部的 Star ，关注后，项目有最新动态 github 会提醒您，不错过重要更新；\n> - 点击页面顶部的 Fork， 将您需要增加的功能完成 小程序 端界面的调整，然后在 github  上请求将您的代码合并到 EastWorld；\n> - 您的代码合并请求审核通过后，我们将会为您完善配套的后台功能；\n> - 开源项目离不开您的支持和代码共享，我们一起把 EastWorld 项目长期维护下去；\n- [如何使用在线客服功能？](https://www.it120.cc/info/faq/867)\n- 下单的时候没有地方填写收货地址？\n> 1、添加一个“物流模板”，只有需要快递的商品才会提示用户填写收货地址\n>\n> 2、发布商品的时候，选择刚才添加的“物流模板”\n>\n> 3、重新下单，将会需要用户输入收货地址\n- 后台设置appid和secret的时候提示不正确？\n> 1、请确认您填写的appid和secret是否正确\n>\n> 2、输入的时候确保没有空格（复制的时候可能会多复制了空格）\n>\n> 3、在微信后台设置服务器IP地址白名单（106.14.43.122）\n- 如何使用退款功能？\n> 1、后台支持针对订单指定退款多少金额；\n>\n> 2、可选择退款至用户可用余额或者按照用户支付原路退还第三方或者银行卡；\n>\n> 3、如果选用原路退还，需要在商户号和秘钥设置的地方上传您的微信支付证书文件（PK12格式文件）\n- 如何设置满多少包邮？\n> 1、后台系统设置 --> 系统参数，增加系统参数；\n>\n> 2、参数名 free_shipping_for_purchases （注意不要有空格）\n>\n> 3、参数值填写您希望的买满金额即可\n- [“规格与尺寸”怎么玩](https://www.it120.cc/info/faq/1208)\n- [如何设置用户提现手续费](https://www.it120.cc/info/faq/1589)\n- [商品如何显示视频？](https://www.it120.cc/info/faq/1802)\n- [货到付款、积分赠送规则设置](https://www.it120.cc/notice/22)\n- [小程序如何使用“模板消息”给用户推送消息](https://www.it120.cc/info/faq/2823)\n- 如何修改或者关闭订单超过30分钟未付款自动关闭？\n> 1、创建订单接口增加 expireMinutes 参数；\n>\n> 2、代表多少分钟未支付自动关闭本订单，传0不自动关闭订单；\n\n\n## 如何升级到最新版\n\n- 小程序程序的修改和您后台的数据是独立的，所以不用担心您会丢失数据\n- 先把你开发工具下的现有版本程序备份\n- 下载最新版的程序，直接覆盖您本地的程序\n- 用开发工具修改域名 mall 为你自己的域名\n- 开发工具里面上传代码提交微信审核\n- 审核通过后，小程序后台去发布新版本即可\n- 用户无需重新扫码，关闭小程序重新打开就是新版本了","source":"about/index.md","raw":"---\ntitle: 小程序商城\ndate: 2018-04-25 11:06:03\n# type: \"tags\"\n---\n# 微信小程序商城\n微信小程序商城，微信小程序微店，长期维护版本，欢迎大家踊跃提交贡献代码；\n\n## 参与开发\n\n更多项目请关注 [https://github.com/EastWorld](https://github.com/EastWorld)。\n\n- 产品设计 & UI [@blackjeffer](https://github.com/orgs/EastWorld/people/blackjeffer)\n- 小程序开发 [@jiulonggithub](https://github.com/orgs/EastWorld/people/jiulonggithub)\n- 接口及后台支持 [@gooking](https://github.com/gooking)\n\n期待您的加入~ ,欢迎大家踊跃提交代码。\n\n开发问题欢迎一起交流 ： QQ交流群：479413914\n\n## 扫码体验\n\n<p>\n<img src=\"https://cdn.it120.cc/apifactory/2017/09/15/487409738ebb80c44eda01c46d59b20c.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n<img src=\"https://cdn.it120.cc/apifactory/2018/04/04/570e9a77dbc9cacda176e98a4f2778c5.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n<img src=\"https://cdn.it120.cc/apifactory/2018/04/01/b7b8f5a0fcfc72454ade8510ab929717.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n<img src=\"https://cdn.it120.cc/apifactory/2018/04/19/fbf88e05686b6d9c7c5d5476c7b798d1.jpg\" width=\"100px\" style=\"display:inline-block!important;\">\n</p>\n\n## 最新功能\n\n- 新增商品砍价功能，扫码上面第一个二维码，第一个商品详情可体验砍价；\n- 分享商品给好友，好友下单后可获得积分、现金返现；\n- 可修改订单默认30分钟未支付被关闭的时间；\n\n## 使用说明\n\n> [申请商城后台账号](https://www.it120.cc/info/wxapp/115)\n>\n> 选择使用商城模块\n> > 在 API 列表中选择使用以下API模块：\n>\n> > >系统参数设置： 用于配置商城名称；\n>\n> > > 小程序用户注册接口：实现用户注册；\n>\n> > > 小程序登录接口：实现用户自动登录；\n>\n> > > App Banner管理接口: 设置商城首页轮播图片\n>\n> > > 在线支付接口：完成小程序在线支付；\n>\n> > > 商品类别接口；\n>\n> > > 商城商品管理接口；\n>\n> > > 商城订单管理接口；\n>\n> > > 用户收货地址接口；\n>\n> > > 优惠券接口；\n>\n> > > 平台公告模块\n>\n> > > 积分模块【签到送积分】\n>\n> 修改源码中  app.js 文件\n> > > globalData:{\n>  userInfo:null,\n>  subDomain:\"mall\"\n>}\n> >\n> > > subDomain 中的 mall 为上面您注册开通的域名\n>\n> [设置小程序合法服务器域名](https://www.it120.cc/info/wxapp/116)\n>\n> 重启您的小程序开发工具，完成\n\n## 常见问题\n\n- [如何修改小程序商城的标题？](https://www.it120.cc/info/faq/778)\n- [“无法登录”的错误？](https://www.it120.cc/info/faq/391)\n- [小程序提示“无法登录”的错误？](https://www.it120.cc/info/faq/392)\n- [如何发布自己的商品？](https://www.it120.cc/info/faq/436)\n- [如何给Banner增加链接，点击打开某个商品？](https://www.it120.cc/info/faq/437)\n- [获取我的accesstoken，以便我在其他系统使用](https://www.it120.cc/info/faq/763)\n- 工厂后台设置 appid、secret、微信支付商户号和秘钥时候的 token 怎么填？\n>  不要填！\n>\n>  不要填！\n>\n>  不要填！\n>\n> 重要的事情说三遍，这个小程序用不到，是给服务号使用的，所以大家空着不要填\n- 微信支付时候，提示 50000 错误，不能获取到预支付id\n>  这个错误是无法获取到微信支付的预支付信息\n> - 可能是你没有在后台配置您的微信支付商户号和秘钥，或者配置错误\n>\n> - 可能是你配置的微信支付不是当前小程序申请的（微信支付目前无法跨小程序调用）\n>\n> - 确保微信开发工具上面登录的 APPID 和你在后台配置的 APPID 是同一个\n- 能否帮我免费添加功能？\n> 可以！\n>\n> <img src=\"https://cdn.it120.cc/apifactory/2017/07/29/18ae9b8aaedcd747fc5f1c3fa8bc0fe4.png\" width=\"300px\">\n>\n> - 点击页面顶部的 Star ，关注后，项目有最新动态 github 会提醒您，不错过重要更新；\n> - 点击页面顶部的 Fork， 将您需要增加的功能完成 小程序 端界面的调整，然后在 github  上请求将您的代码合并到 EastWorld；\n> - 您的代码合并请求审核通过后，我们将会为您完善配套的后台功能；\n> - 开源项目离不开您的支持和代码共享，我们一起把 EastWorld 项目长期维护下去；\n- [如何使用在线客服功能？](https://www.it120.cc/info/faq/867)\n- 下单的时候没有地方填写收货地址？\n> 1、添加一个“物流模板”，只有需要快递的商品才会提示用户填写收货地址\n>\n> 2、发布商品的时候，选择刚才添加的“物流模板”\n>\n> 3、重新下单，将会需要用户输入收货地址\n- 后台设置appid和secret的时候提示不正确？\n> 1、请确认您填写的appid和secret是否正确\n>\n> 2、输入的时候确保没有空格（复制的时候可能会多复制了空格）\n>\n> 3、在微信后台设置服务器IP地址白名单（106.14.43.122）\n- 如何使用退款功能？\n> 1、后台支持针对订单指定退款多少金额；\n>\n> 2、可选择退款至用户可用余额或者按照用户支付原路退还第三方或者银行卡；\n>\n> 3、如果选用原路退还，需要在商户号和秘钥设置的地方上传您的微信支付证书文件（PK12格式文件）\n- 如何设置满多少包邮？\n> 1、后台系统设置 --> 系统参数，增加系统参数；\n>\n> 2、参数名 free_shipping_for_purchases （注意不要有空格）\n>\n> 3、参数值填写您希望的买满金额即可\n- [“规格与尺寸”怎么玩](https://www.it120.cc/info/faq/1208)\n- [如何设置用户提现手续费](https://www.it120.cc/info/faq/1589)\n- [商品如何显示视频？](https://www.it120.cc/info/faq/1802)\n- [货到付款、积分赠送规则设置](https://www.it120.cc/notice/22)\n- [小程序如何使用“模板消息”给用户推送消息](https://www.it120.cc/info/faq/2823)\n- 如何修改或者关闭订单超过30分钟未付款自动关闭？\n> 1、创建订单接口增加 expireMinutes 参数；\n>\n> 2、代表多少分钟未支付自动关闭本订单，传0不自动关闭订单；\n\n\n## 如何升级到最新版\n\n- 小程序程序的修改和您后台的数据是独立的，所以不用担心您会丢失数据\n- 先把你开发工具下的现有版本程序备份\n- 下载最新版的程序，直接覆盖您本地的程序\n- 用开发工具修改域名 mall 为你自己的域名\n- 开发工具里面上传代码提交微信审核\n- 审核通过后，小程序后台去发布新版本即可\n- 用户无需重新扫码，关闭小程序重新打开就是新版本了","updated":"2018-06-12T03:06:41.202Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjiliy7vo000180wggb7dq3qb","content":"<h1 id=\"微信小程序商城\"><a href=\"#微信小程序商城\" class=\"headerlink\" title=\"微信小程序商城\"></a>微信小程序商城</h1><p>微信小程序商城，微信小程序微店，长期维护版本，欢迎大家踊跃提交贡献代码；</p>\n<h2 id=\"参与开发\"><a href=\"#参与开发\" class=\"headerlink\" title=\"参与开发\"></a>参与开发</h2><p>更多项目请关注 <a href=\"https://github.com/EastWorld\" target=\"_blank\" rel=\"noopener\">https://github.com/EastWorld</a>。</p>\n<ul>\n<li>产品设计 &amp; UI <a href=\"https://github.com/orgs/EastWorld/people/blackjeffer\" target=\"_blank\" rel=\"noopener\">@blackjeffer</a></li>\n<li>小程序开发 <a href=\"https://github.com/orgs/EastWorld/people/jiulonggithub\" target=\"_blank\" rel=\"noopener\">@jiulonggithub</a></li>\n<li>接口及后台支持 <a href=\"https://github.com/gooking\" target=\"_blank\" rel=\"noopener\">@gooking</a></li>\n</ul>\n<p>期待您的加入~ ,欢迎大家踊跃提交代码。</p>\n<p>开发问题欢迎一起交流 ： QQ交流群：479413914</p>\n<h2 id=\"扫码体验\"><a href=\"#扫码体验\" class=\"headerlink\" title=\"扫码体验\"></a>扫码体验</h2><p><br><img src=\"https://cdn.it120.cc/apifactory/2017/09/15/487409738ebb80c44eda01c46d59b20c.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br><img src=\"https://cdn.it120.cc/apifactory/2018/04/04/570e9a77dbc9cacda176e98a4f2778c5.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br><img src=\"https://cdn.it120.cc/apifactory/2018/04/01/b7b8f5a0fcfc72454ade8510ab929717.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br><img src=\"https://cdn.it120.cc/apifactory/2018/04/19/fbf88e05686b6d9c7c5d5476c7b798d1.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br></p>\n\n<h2 id=\"最新功能\"><a href=\"#最新功能\" class=\"headerlink\" title=\"最新功能\"></a>最新功能</h2><ul>\n<li>新增商品砍价功能，扫码上面第一个二维码，第一个商品详情可体验砍价；</li>\n<li>分享商品给好友，好友下单后可获得积分、现金返现；</li>\n<li>可修改订单默认30分钟未支付被关闭的时间；</li>\n</ul>\n<h2 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h2><blockquote>\n<p><a href=\"https://www.it120.cc/info/wxapp/115\" target=\"_blank\" rel=\"noopener\">申请商城后台账号</a></p>\n<p>选择使用商城模块</p>\n<blockquote>\n<p>在 API 列表中选择使用以下API模块：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>系统参数设置： 用于配置商城名称；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>小程序用户注册接口：实现用户注册；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>小程序登录接口：实现用户自动登录；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>App Banner管理接口: 设置商城首页轮播图片</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>在线支付接口：完成小程序在线支付；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>商品类别接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>商城商品管理接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>商城订单管理接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>用户收货地址接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>优惠券接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>平台公告模块</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>积分模块【签到送积分】</p>\n</blockquote>\n</blockquote>\n<p>修改源码中  app.js 文件</p>\n<blockquote>\n<blockquote>\n<p>globalData:{<br> userInfo:null,<br> subDomain:”mall”<br>}</p>\n</blockquote>\n<blockquote>\n<p>subDomain 中的 mall 为上面您注册开通的域名</p>\n</blockquote>\n</blockquote>\n<p><a href=\"https://www.it120.cc/info/wxapp/116\" target=\"_blank\" rel=\"noopener\">设置小程序合法服务器域名</a></p>\n<p>重启您的小程序开发工具，完成</p>\n</blockquote>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><ul>\n<li><a href=\"https://www.it120.cc/info/faq/778\" target=\"_blank\" rel=\"noopener\">如何修改小程序商城的标题？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/391\" target=\"_blank\" rel=\"noopener\">“无法登录”的错误？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/392\" target=\"_blank\" rel=\"noopener\">小程序提示“无法登录”的错误？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/436\" target=\"_blank\" rel=\"noopener\">如何发布自己的商品？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/437\" target=\"_blank\" rel=\"noopener\">如何给Banner增加链接，点击打开某个商品？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/763\" target=\"_blank\" rel=\"noopener\">获取我的accesstoken，以便我在其他系统使用</a></li>\n<li>工厂后台设置 appid、secret、微信支付商户号和秘钥时候的 token 怎么填？<blockquote>\n<p> 不要填！</p>\n<p> 不要填！</p>\n<p> 不要填！</p>\n<p>重要的事情说三遍，这个小程序用不到，是给服务号使用的，所以大家空着不要填</p>\n</blockquote>\n</li>\n<li>微信支付时候，提示 50000 错误，不能获取到预支付id<blockquote>\n<p> 这个错误是无法获取到微信支付的预支付信息</p>\n<ul>\n<li><p>可能是你没有在后台配置您的微信支付商户号和秘钥，或者配置错误</p>\n</li>\n<li><p>可能是你配置的微信支付不是当前小程序申请的（微信支付目前无法跨小程序调用）</p>\n</li>\n<li><p>确保微信开发工具上面登录的 APPID 和你在后台配置的 APPID 是同一个</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li>能否帮我免费添加功能？<blockquote>\n<p>可以！</p>\n<p><img src=\"https://cdn.it120.cc/apifactory/2017/07/29/18ae9b8aaedcd747fc5f1c3fa8bc0fe4.png\" width=\"300px\"></p>\n<ul>\n<li>点击页面顶部的 Star ，关注后，项目有最新动态 github 会提醒您，不错过重要更新；</li>\n<li>点击页面顶部的 Fork， 将您需要增加的功能完成 小程序 端界面的调整，然后在 github  上请求将您的代码合并到 EastWorld；</li>\n<li>您的代码合并请求审核通过后，我们将会为您完善配套的后台功能；</li>\n<li>开源项目离不开您的支持和代码共享，我们一起把 EastWorld 项目长期维护下去；</li>\n</ul>\n</blockquote>\n</li>\n<li><a href=\"https://www.it120.cc/info/faq/867\" target=\"_blank\" rel=\"noopener\">如何使用在线客服功能？</a></li>\n<li>下单的时候没有地方填写收货地址？<blockquote>\n<p>1、添加一个“物流模板”，只有需要快递的商品才会提示用户填写收货地址</p>\n<p>2、发布商品的时候，选择刚才添加的“物流模板”</p>\n<p>3、重新下单，将会需要用户输入收货地址</p>\n</blockquote>\n</li>\n<li>后台设置appid和secret的时候提示不正确？<blockquote>\n<p>1、请确认您填写的appid和secret是否正确</p>\n<p>2、输入的时候确保没有空格（复制的时候可能会多复制了空格）</p>\n<p>3、在微信后台设置服务器IP地址白名单（106.14.43.122）</p>\n</blockquote>\n</li>\n<li>如何使用退款功能？<blockquote>\n<p>1、后台支持针对订单指定退款多少金额；</p>\n<p>2、可选择退款至用户可用余额或者按照用户支付原路退还第三方或者银行卡；</p>\n<p>3、如果选用原路退还，需要在商户号和秘钥设置的地方上传您的微信支付证书文件（PK12格式文件）</p>\n</blockquote>\n</li>\n<li>如何设置满多少包邮？<blockquote>\n<p>1、后台系统设置 –&gt; 系统参数，增加系统参数；</p>\n<p>2、参数名 free_shipping_for_purchases （注意不要有空格）</p>\n<p>3、参数值填写您希望的买满金额即可</p>\n</blockquote>\n</li>\n<li><a href=\"https://www.it120.cc/info/faq/1208\" target=\"_blank\" rel=\"noopener\">“规格与尺寸”怎么玩</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/1589\" target=\"_blank\" rel=\"noopener\">如何设置用户提现手续费</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/1802\" target=\"_blank\" rel=\"noopener\">商品如何显示视频？</a></li>\n<li><a href=\"https://www.it120.cc/notice/22\" target=\"_blank\" rel=\"noopener\">货到付款、积分赠送规则设置</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/2823\" target=\"_blank\" rel=\"noopener\">小程序如何使用“模板消息”给用户推送消息</a></li>\n<li>如何修改或者关闭订单超过30分钟未付款自动关闭？<blockquote>\n<p>1、创建订单接口增加 expireMinutes 参数；</p>\n<p>2、代表多少分钟未支付自动关闭本订单，传0不自动关闭订单；</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"如何升级到最新版\"><a href=\"#如何升级到最新版\" class=\"headerlink\" title=\"如何升级到最新版\"></a>如何升级到最新版</h2><ul>\n<li>小程序程序的修改和您后台的数据是独立的，所以不用担心您会丢失数据</li>\n<li>先把你开发工具下的现有版本程序备份</li>\n<li>下载最新版的程序，直接覆盖您本地的程序</li>\n<li>用开发工具修改域名 mall 为你自己的域名</li>\n<li>开发工具里面上传代码提交微信审核</li>\n<li>审核通过后，小程序后台去发布新版本即可</li>\n<li>用户无需重新扫码，关闭小程序重新打开就是新版本了</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"微信小程序商城\"><a href=\"#微信小程序商城\" class=\"headerlink\" title=\"微信小程序商城\"></a>微信小程序商城</h1><p>微信小程序商城，微信小程序微店，长期维护版本，欢迎大家踊跃提交贡献代码；</p>\n<h2 id=\"参与开发\"><a href=\"#参与开发\" class=\"headerlink\" title=\"参与开发\"></a>参与开发</h2><p>更多项目请关注 <a href=\"https://github.com/EastWorld\" target=\"_blank\" rel=\"noopener\">https://github.com/EastWorld</a>。</p>\n<ul>\n<li>产品设计 &amp; UI <a href=\"https://github.com/orgs/EastWorld/people/blackjeffer\" target=\"_blank\" rel=\"noopener\">@blackjeffer</a></li>\n<li>小程序开发 <a href=\"https://github.com/orgs/EastWorld/people/jiulonggithub\" target=\"_blank\" rel=\"noopener\">@jiulonggithub</a></li>\n<li>接口及后台支持 <a href=\"https://github.com/gooking\" target=\"_blank\" rel=\"noopener\">@gooking</a></li>\n</ul>\n<p>期待您的加入~ ,欢迎大家踊跃提交代码。</p>\n<p>开发问题欢迎一起交流 ： QQ交流群：479413914</p>\n<h2 id=\"扫码体验\"><a href=\"#扫码体验\" class=\"headerlink\" title=\"扫码体验\"></a>扫码体验</h2><p><br><img src=\"https://cdn.it120.cc/apifactory/2017/09/15/487409738ebb80c44eda01c46d59b20c.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br><img src=\"https://cdn.it120.cc/apifactory/2018/04/04/570e9a77dbc9cacda176e98a4f2778c5.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br><img src=\"https://cdn.it120.cc/apifactory/2018/04/01/b7b8f5a0fcfc72454ade8510ab929717.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br><img src=\"https://cdn.it120.cc/apifactory/2018/04/19/fbf88e05686b6d9c7c5d5476c7b798d1.jpg\" width=\"100px\" style=\"display:inline-block!important;\"><br></p>\n\n<h2 id=\"最新功能\"><a href=\"#最新功能\" class=\"headerlink\" title=\"最新功能\"></a>最新功能</h2><ul>\n<li>新增商品砍价功能，扫码上面第一个二维码，第一个商品详情可体验砍价；</li>\n<li>分享商品给好友，好友下单后可获得积分、现金返现；</li>\n<li>可修改订单默认30分钟未支付被关闭的时间；</li>\n</ul>\n<h2 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h2><blockquote>\n<p><a href=\"https://www.it120.cc/info/wxapp/115\" target=\"_blank\" rel=\"noopener\">申请商城后台账号</a></p>\n<p>选择使用商城模块</p>\n<blockquote>\n<p>在 API 列表中选择使用以下API模块：</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>系统参数设置： 用于配置商城名称；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>小程序用户注册接口：实现用户注册；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>小程序登录接口：实现用户自动登录；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>App Banner管理接口: 设置商城首页轮播图片</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>在线支付接口：完成小程序在线支付；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>商品类别接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>商城商品管理接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>商城订单管理接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>用户收货地址接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>优惠券接口；</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>平台公告模块</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>积分模块【签到送积分】</p>\n</blockquote>\n</blockquote>\n<p>修改源码中  app.js 文件</p>\n<blockquote>\n<blockquote>\n<p>globalData:{<br> userInfo:null,<br> subDomain:”mall”<br>}</p>\n</blockquote>\n<blockquote>\n<p>subDomain 中的 mall 为上面您注册开通的域名</p>\n</blockquote>\n</blockquote>\n<p><a href=\"https://www.it120.cc/info/wxapp/116\" target=\"_blank\" rel=\"noopener\">设置小程序合法服务器域名</a></p>\n<p>重启您的小程序开发工具，完成</p>\n</blockquote>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><ul>\n<li><a href=\"https://www.it120.cc/info/faq/778\" target=\"_blank\" rel=\"noopener\">如何修改小程序商城的标题？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/391\" target=\"_blank\" rel=\"noopener\">“无法登录”的错误？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/392\" target=\"_blank\" rel=\"noopener\">小程序提示“无法登录”的错误？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/436\" target=\"_blank\" rel=\"noopener\">如何发布自己的商品？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/437\" target=\"_blank\" rel=\"noopener\">如何给Banner增加链接，点击打开某个商品？</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/763\" target=\"_blank\" rel=\"noopener\">获取我的accesstoken，以便我在其他系统使用</a></li>\n<li>工厂后台设置 appid、secret、微信支付商户号和秘钥时候的 token 怎么填？<blockquote>\n<p> 不要填！</p>\n<p> 不要填！</p>\n<p> 不要填！</p>\n<p>重要的事情说三遍，这个小程序用不到，是给服务号使用的，所以大家空着不要填</p>\n</blockquote>\n</li>\n<li>微信支付时候，提示 50000 错误，不能获取到预支付id<blockquote>\n<p> 这个错误是无法获取到微信支付的预支付信息</p>\n<ul>\n<li><p>可能是你没有在后台配置您的微信支付商户号和秘钥，或者配置错误</p>\n</li>\n<li><p>可能是你配置的微信支付不是当前小程序申请的（微信支付目前无法跨小程序调用）</p>\n</li>\n<li><p>确保微信开发工具上面登录的 APPID 和你在后台配置的 APPID 是同一个</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li>能否帮我免费添加功能？<blockquote>\n<p>可以！</p>\n<p><img src=\"https://cdn.it120.cc/apifactory/2017/07/29/18ae9b8aaedcd747fc5f1c3fa8bc0fe4.png\" width=\"300px\"></p>\n<ul>\n<li>点击页面顶部的 Star ，关注后，项目有最新动态 github 会提醒您，不错过重要更新；</li>\n<li>点击页面顶部的 Fork， 将您需要增加的功能完成 小程序 端界面的调整，然后在 github  上请求将您的代码合并到 EastWorld；</li>\n<li>您的代码合并请求审核通过后，我们将会为您完善配套的后台功能；</li>\n<li>开源项目离不开您的支持和代码共享，我们一起把 EastWorld 项目长期维护下去；</li>\n</ul>\n</blockquote>\n</li>\n<li><a href=\"https://www.it120.cc/info/faq/867\" target=\"_blank\" rel=\"noopener\">如何使用在线客服功能？</a></li>\n<li>下单的时候没有地方填写收货地址？<blockquote>\n<p>1、添加一个“物流模板”，只有需要快递的商品才会提示用户填写收货地址</p>\n<p>2、发布商品的时候，选择刚才添加的“物流模板”</p>\n<p>3、重新下单，将会需要用户输入收货地址</p>\n</blockquote>\n</li>\n<li>后台设置appid和secret的时候提示不正确？<blockquote>\n<p>1、请确认您填写的appid和secret是否正确</p>\n<p>2、输入的时候确保没有空格（复制的时候可能会多复制了空格）</p>\n<p>3、在微信后台设置服务器IP地址白名单（106.14.43.122）</p>\n</blockquote>\n</li>\n<li>如何使用退款功能？<blockquote>\n<p>1、后台支持针对订单指定退款多少金额；</p>\n<p>2、可选择退款至用户可用余额或者按照用户支付原路退还第三方或者银行卡；</p>\n<p>3、如果选用原路退还，需要在商户号和秘钥设置的地方上传您的微信支付证书文件（PK12格式文件）</p>\n</blockquote>\n</li>\n<li>如何设置满多少包邮？<blockquote>\n<p>1、后台系统设置 –&gt; 系统参数，增加系统参数；</p>\n<p>2、参数名 free_shipping_for_purchases （注意不要有空格）</p>\n<p>3、参数值填写您希望的买满金额即可</p>\n</blockquote>\n</li>\n<li><a href=\"https://www.it120.cc/info/faq/1208\" target=\"_blank\" rel=\"noopener\">“规格与尺寸”怎么玩</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/1589\" target=\"_blank\" rel=\"noopener\">如何设置用户提现手续费</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/1802\" target=\"_blank\" rel=\"noopener\">商品如何显示视频？</a></li>\n<li><a href=\"https://www.it120.cc/notice/22\" target=\"_blank\" rel=\"noopener\">货到付款、积分赠送规则设置</a></li>\n<li><a href=\"https://www.it120.cc/info/faq/2823\" target=\"_blank\" rel=\"noopener\">小程序如何使用“模板消息”给用户推送消息</a></li>\n<li>如何修改或者关闭订单超过30分钟未付款自动关闭？<blockquote>\n<p>1、创建订单接口增加 expireMinutes 参数；</p>\n<p>2、代表多少分钟未支付自动关闭本订单，传0不自动关闭订单；</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"如何升级到最新版\"><a href=\"#如何升级到最新版\" class=\"headerlink\" title=\"如何升级到最新版\"></a>如何升级到最新版</h2><ul>\n<li>小程序程序的修改和您后台的数据是独立的，所以不用担心您会丢失数据</li>\n<li>先把你开发工具下的现有版本程序备份</li>\n<li>下载最新版的程序，直接覆盖您本地的程序</li>\n<li>用开发工具修改域名 mall 为你自己的域名</li>\n<li>开发工具里面上传代码提交微信审核</li>\n<li>审核通过后，小程序后台去发布新版本即可</li>\n<li>用户无需重新扫码，关闭小程序重新打开就是新版本了</li>\n</ul>\n"},{"title":"tags","date":"2018-04-25T02:58:51.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-04-25 10:58:51\ntype: \"tags\"\n---\n","updated":"2018-06-12T03:06:41.226Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjiliy7vs000380wg34gik15q","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"mine","date":"2018-04-27T03:26:04.000Z","_content":"这是我的介绍页，多谢关注\n``` bash\n$ hexo deploy\n```","source":"mine/index.md","raw":"---\ntitle: mine\ndate: 2018-04-27 11:26:04\n---\n这是我的介绍页，多谢关注\n``` bash\n$ hexo deploy\n```","updated":"2018-06-12T03:06:41.223Z","path":"mine/index.html","comments":1,"layout":"page","_id":"cjiliy7vz000780wgts6c3rgs","content":"<p>这是我的介绍页，多谢关注<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这是我的介绍页，多谢关注<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n"}],"Post":[{"title":"使用Hexo搭建个人博客","layout":"post","date":"2016-05-03T11:07:43.000Z","comments":1,"keywords":"Hexo, Blog","description":"生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。","_content":"\n## 常用命令\n\n\n``` bash\nhexo new \"My New Post\" || hexo new post \"postName\"\nhexo s --debug\nhexo clean\nhexo d -g\n```\n\n## 重装之痛\n#### 我是根据这个来建站的 \n[建站](https://www.cnblogs.com/fengxiongZz/p/7707219.html)\n[文档](https://hexo.io/zh-cn/docs/index.html)\n\n## FOR个人（仔细看建站链接）\n    1.下载github的代码\n    2.切换远程分支 (git checkout -b release origin/release)\n    3.全局安装hexo (npm install hexo -g)（可能需要npm install hexo-deployer-git --save）\n    4.在目录下安装 npm install\n    5.记得把自己已改过的next主题下载下来，覆盖本地的\n    6.有可能git有问题，貌似说没配置path变量，可以试试\n    7.all is ok\n\n## setting sync配置 [根据](https://juejin.im/post/5a08d1d6f265da430f31950e)\n    1.F1,sync reset extent\n    2.先ctrl+shift+D,按需要填token，giftID\n    3.修改配置，不能直接同步这些配置（比如颜色主题之类的）\n","source":"_posts/helloword.md","raw":"---\ntitle: 使用Hexo搭建个人博客\nlayout: post\ndate: 2016-05-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n---\n\n## 常用命令\n\n\n``` bash\nhexo new \"My New Post\" || hexo new post \"postName\"\nhexo s --debug\nhexo clean\nhexo d -g\n```\n\n## 重装之痛\n#### 我是根据这个来建站的 \n[建站](https://www.cnblogs.com/fengxiongZz/p/7707219.html)\n[文档](https://hexo.io/zh-cn/docs/index.html)\n\n## FOR个人（仔细看建站链接）\n    1.下载github的代码\n    2.切换远程分支 (git checkout -b release origin/release)\n    3.全局安装hexo (npm install hexo -g)（可能需要npm install hexo-deployer-git --save）\n    4.在目录下安装 npm install\n    5.记得把自己已改过的next主题下载下来，覆盖本地的\n    6.有可能git有问题，貌似说没配置path变量，可以试试\n    7.all is ok\n\n## setting sync配置 [根据](https://juejin.im/post/5a08d1d6f265da430f31950e)\n    1.F1,sync reset extent\n    2.先ctrl+shift+D,按需要填token，giftID\n    3.修改配置，不能直接同步这些配置（比如颜色主题之类的）\n","slug":"helloword","published":1,"updated":"2018-06-12T08:53:21.897Z","photos":[],"link":"","_id":"cjiliy7vj000080wgx91y5ybh","content":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"My New Post\"</span> || hexo new post <span class=\"string\">\"postName\"</span></span><br><span class=\"line\">hexo s --debug</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"重装之痛\"><a href=\"#重装之痛\" class=\"headerlink\" title=\"重装之痛\"></a>重装之痛</h2><h4 id=\"我是根据这个来建站的\"><a href=\"#我是根据这个来建站的\" class=\"headerlink\" title=\"我是根据这个来建站的\"></a>我是根据这个来建站的</h4><p><a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">建站</a><br><a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<h2 id=\"FOR个人（仔细看建站链接）\"><a href=\"#FOR个人（仔细看建站链接）\" class=\"headerlink\" title=\"FOR个人（仔细看建站链接）\"></a>FOR个人（仔细看建站链接）</h2><pre><code>1.下载github的代码\n2.切换远程分支 (git checkout -b release origin/release)\n3.全局安装hexo (npm install hexo -g)（可能需要npm install hexo-deployer-git --save）\n4.在目录下安装 npm install\n5.记得把自己已改过的next主题下载下来，覆盖本地的\n6.有可能git有问题，貌似说没配置path变量，可以试试\n7.all is ok\n</code></pre><h2 id=\"setting-sync配置-根据\"><a href=\"#setting-sync配置-根据\" class=\"headerlink\" title=\"setting sync配置 根据\"></a>setting sync配置 <a href=\"https://juejin.im/post/5a08d1d6f265da430f31950e\" target=\"_blank\" rel=\"noopener\">根据</a></h2><pre><code>1.F1,sync reset extent\n2.先ctrl+shift+D,按需要填token，giftID\n3.修改配置，不能直接同步这些配置（比如颜色主题之类的）\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"My New Post\"</span> || hexo new post <span class=\"string\">\"postName\"</span></span><br><span class=\"line\">hexo s --debug</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"重装之痛\"><a href=\"#重装之痛\" class=\"headerlink\" title=\"重装之痛\"></a>重装之痛</h2><h4 id=\"我是根据这个来建站的\"><a href=\"#我是根据这个来建站的\" class=\"headerlink\" title=\"我是根据这个来建站的\"></a>我是根据这个来建站的</h4><p><a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">建站</a><br><a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<h2 id=\"FOR个人（仔细看建站链接）\"><a href=\"#FOR个人（仔细看建站链接）\" class=\"headerlink\" title=\"FOR个人（仔细看建站链接）\"></a>FOR个人（仔细看建站链接）</h2><pre><code>1.下载github的代码\n2.切换远程分支 (git checkout -b release origin/release)\n3.全局安装hexo (npm install hexo -g)（可能需要npm install hexo-deployer-git --save）\n4.在目录下安装 npm install\n5.记得把自己已改过的next主题下载下来，覆盖本地的\n6.有可能git有问题，貌似说没配置path变量，可以试试\n7.all is ok\n</code></pre><h2 id=\"setting-sync配置-根据\"><a href=\"#setting-sync配置-根据\" class=\"headerlink\" title=\"setting sync配置 根据\"></a>setting sync配置 <a href=\"https://juejin.im/post/5a08d1d6f265da430f31950e\" target=\"_blank\" rel=\"noopener\">根据</a></h2><pre><code>1.F1,sync reset extent\n2.先ctrl+shift+D,按需要填token，giftID\n3.修改配置，不能直接同步这些配置（比如颜色主题之类的）\n</code></pre>"},{"title":"浏览器渲染-css阻塞","date":"2018-06-19T09:40:01.000Z","description":"CSS、JS是这样阻塞DOM解析和渲染的","_content":"\n# 原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的\n\n由于关系到文件的读取，那是肯定需要服务器的，我会把全部的文件放在[github](https://github.com/ljf0113/how-js-and-css-block-dom)上\n\n`node`端唯一需要解释一下的是这个函数：\n\n    function sleep(time) {\n      return new Promise(function(res) {\n        setTimeout(() => {\n          res()\n        }, time);\n      })\n    }\n\n嗯！其实就延时啦。如果`CSS`或者`JS`文件名有`sleep3000`之类的前缀时，意思就是延迟3000毫秒才会返回这文件。\n\n下文使用的`HTML`文件是长这样的：\n\n```\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    \t<meta charset=\"UTF-8\">\n    \t<title>Title</title>\n    \t<style>\n    \t\tdiv {\n    \t\t\twidth: 100px;\n    \t\t\theight: 100px;\n    \t\t\tbackground: lightgreen;\n    \t\t}\n    \t</style>\n    </head>\n    <body>\n    \t<div></div>\n    </body>\n    </html>\n```\n\n我会在其中插入不同的`JS`和`CSS`。\n\n而使用的`common.css`，不论有没有前缀，内容都是这样的：\n\n    div {\n      background: red;\n    }\n\n好了，话不多数，开始正文！\n\n## CSS\n\n关于`CSS`，大家肯定都知道的是`<link>`标签放在头部性能会高一点，少一点人知道如果`<script>`与`<link>`同时在头部的话，`<script>`在上可能会更好。这是为什么呢？下面我们一起来看一下`CSS`对`DOM`的影响是什么。\n\n###  `CSS` 不会阻塞 `DOM` 的解析\n\n注意哦！这里说的是`DOM` 解析，证明的例子如下，首先在头部插入`<script defer src=\"/js/logDiv.js\"></script>`，`JS`文件的内容是：\n    \n    const div = document.querySelecot('div');\n    console.log(div);\n\n`defer`属性相信大家也很熟悉了，[MDN](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)对此的描述是用来通知浏览器该脚本将在文档完成解析后，触发 DOMContentLoaded 事件前执行。设置这个属性，能保证`DOM`解析后马上打印出`div`。\n\n之后将`<link rel=\"stylesheet\" href=\"/css/sleep3000-common.css\">`插入`HTML`文件的任一位置，打开浏览器，可以看到是首先打印出`div`这个`DOM`节点，过3s左右之后才渲染出一个浅蓝色的`div`。这就证明了`CSS` 是不会阻塞 `DOM` 的解析的，尽管`CSS`下载需要3s，但这个过程中，浏览器不会傻等着`CSS`下载完，而是会解析`DOM`的。\n\n这里简单说一下，浏览器是解析`DOM`生成`DOM Tree`，结合`CSS`生成的`CSS Tree`，最终组成`render tree`，再渲染页面。由此可见，在此过程中`CSS`完全无法影响`DOM Tree`，因而无需阻塞`DOM`解析。然而，`DOM Tree`和`CSS Tree`会组合成`render tree`，那`CSS`会不会页面阻塞渲染呢？\n\n###  `CSS` 阻塞页面渲染\n\n其实这一点，刚才的例子已经说明了，如果`CSS` 不会阻塞页面阻塞渲染，那么`CSS`文件下载之前，浏览器就会渲染出一个浅绿色的`div`，之后再变成浅蓝色。浏览器的这个策略其实很明智的，想象一下，如果没有这个策略，页面首先会呈现出一个原始的模样，待`CSS`下载完之后又突然变了一个模样。用户体验可谓极差，而且渲染是有成本的。\n\n因此，基于性能与用户体验的考虑，浏览器会尽量减少渲染的次数，`CSS`顺理成章地阻塞页面渲染。\n\n然而，事情总有奇怪的，请看这例子，`HTML`头部结构如下：\n    \n    <header>\n        <link rel=\"stylesheet\" href=\"/css/sleep3000-common.css\">\n\t    <script src=\"/js/logDiv.js\"></script>\n    </header>\n\t\n但思考一下这会产生什么结果呢？\n\n答案是浏览器会转圈圈三秒，但此过程中不会打印任何东西，之后呈现出一个浅蓝色的`div`，再打印出`null`。结果好像是`CSS`不单阻塞了页面渲染，还阻塞了`DOM` 的解析啊！稍等，在你打算掀桌子疯狂吐槽我之前，请先思考一下是什么阻塞了`DOM` 的解析，刚才已经证明了`CSS`是不会阻塞的，那么阻塞了页面解析其实是`JS`！但明明`JS`的代码如此简单，肯定不会阻塞这么久，那就是`JS`在等待`CSS`的下载，这是为什么呢？\n\n仔细思考一下，其实这样做是有道理的，如果脚本的内容是获取元素的样式，宽高等`CSS`控制的属性，浏览器是需要计算的，也就是依赖于`CSS`。浏览器也无法感知脚本内容到底是什么，为避免样式获取，因而只好等前面所有的样式下载完后，再执行`JS`。因而造成了之前例子的情况。\n\n所以，看官大人明白为何`<script>`与`<link>`同时在头部的话，`<script>`在上可能会更好了么？之所以是可能，是因为如果`<link>`的内容下载更快的话，是没影响的，但反过来的话，`JS`就要等待了，然而这些等待的时间是完全不必要的。\n\n## JS\n\n`JS`，也就是`<script>`标签，估计大家都很熟悉了，不就是阻塞`DOM`解析和渲染么。然而，其中其实还是有一点细节可以考究一下的，我们一起来好好看看。\n\n### `JS` 阻塞 `DOM` 解析\n\n首先我们需要一个新的`JS`文件名为`blok.js`，内容如下：\n\n    const arr = [];\n    for (let i = 0; i < 10000000; i++) {\n      arr.push(i);\n      arr.splice(i % 3, i % 7, i % 5);\n    }\n    const div = document.querySelector('div');\n    console.log(div);\n    \n其实那个数组操作时没意义的，只是为了让这个`JS`文件多花执行时间而已。之后把这个文件插入头部，浏览器跑一下。\n\n结果估计大家也能想象得到，浏览器转圈圈一会，这过程中不会有任何东西出现。之后打印出`null`，再出现一个浅绿色的`div`。现象就足以说明`JS` 阻塞 `DOM` 解析了。其实原因也很好理解，浏览器并不知道脚本的内容是什么，如果先行解析下面的`DOM`，万一脚本内全删了后面的`DOM`，浏览器就白干活了。更别谈丧心病狂的`document.write`。浏览器无法预估里面的内容，那就干脆全部停住，等脚本执行完再干活就好了。\n\n对此的优化其实也很显而易见，具体分为两类。如果`JS`文件体积太大，同时你确定没必要阻塞`DOM`解析的话，不妨按需要加上`defer`或者`async`属性，此时脚本下载的过程中是不会阻塞`DOM`解析的。\n\n而如果是文件执行时间太长，不妨分拆一下代码，不用立即执行的代码，可以使用一下以前的黑科技：`setTimeout()`。当然，现代的浏览器很聪明，它会“偷看”之后的`DOM`内容，碰到如`<link>`、`<script>`和`<img>`等标签时，它会帮助我们先行下载里面的资源，不会傻等到解析到那里时才下载。\n\n### 浏览器遇到 `<script>` 标签时，会触发页面渲染\n\n这个细节可能不少看官大人并不清楚，其实这才是解释上面为何`JS`执行会等待`CSS`下载的原因。先上例子,`HTML`内`body`的结构如下：\n    \n    <body>\n    \t<div></div>\n    \t<script src=\"/js/sleep3000-logDiv.js\"></script>\n    \t<style>\n    \t\tdiv {\n    \t\t\tbackground: lightgrey;\n    \t\t}\n    \t</style>\n    \t<script src=\"/js/sleep5000-logDiv.js\"></script>\n    \t<link rel=\"stylesheet\" href=\"/css/common.css\">\n    </body>\n    \n这个例子也是很极端的例子，但不妨碍它透露给我们很多重要的信息。想象一下，页面会怎样呢？\n\n答案是先浅绿色，再浅灰色，最后浅蓝色。由此可见，每次碰到`<script>`标签时，浏览器都会渲染一次页面。这是基于同样的理由，浏览器不知道脚本的内容，因而碰到脚本时，只好先渲染页面，确保脚本能获取到最新的`DOM`元素信息，尽管脚本可能不需要这些信息。\n\n## 小结\n\n综上所述，我们得出这样的结论：\n\n* `CSS` 不会阻塞 `DOM` 的解析，但会阻塞 `DOM` 渲染。\n* `JS` 阻塞 `DOM` 解析，但浏览器会\"偷看\"`DOM`，预先下载相关资源。\n* 浏览器遇到 `<script>`且没有`defer`或`async`属性的 标签时，会触发页面渲染，因而如果前面`CSS`资源尚未加载完毕时，浏览器会等待它加载完毕在执行脚本。\n\n所以，你现在明白为何`<script>`最好放底部，`<link>`最好放头部，如果头部同时有`<script>`与`<link>`的情况下，最好将`<script>`放在`<link>`上面了吗？\n\n感谢各位看官大人看到这里，希望本文对你有所帮助，有不同或更好意见的大佬，还望不吝赐教！谢谢~\n","source":"_posts/jsCssDomBlock.md","raw":"---\ntitle: 浏览器渲染-css阻塞\ndate: 2018-06-19 17:40:01\ntags: [browser]\ndescription: CSS、JS是这样阻塞DOM解析和渲染的\n---\n\n# 原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的\n\n由于关系到文件的读取，那是肯定需要服务器的，我会把全部的文件放在[github](https://github.com/ljf0113/how-js-and-css-block-dom)上\n\n`node`端唯一需要解释一下的是这个函数：\n\n    function sleep(time) {\n      return new Promise(function(res) {\n        setTimeout(() => {\n          res()\n        }, time);\n      })\n    }\n\n嗯！其实就延时啦。如果`CSS`或者`JS`文件名有`sleep3000`之类的前缀时，意思就是延迟3000毫秒才会返回这文件。\n\n下文使用的`HTML`文件是长这样的：\n\n```\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    \t<meta charset=\"UTF-8\">\n    \t<title>Title</title>\n    \t<style>\n    \t\tdiv {\n    \t\t\twidth: 100px;\n    \t\t\theight: 100px;\n    \t\t\tbackground: lightgreen;\n    \t\t}\n    \t</style>\n    </head>\n    <body>\n    \t<div></div>\n    </body>\n    </html>\n```\n\n我会在其中插入不同的`JS`和`CSS`。\n\n而使用的`common.css`，不论有没有前缀，内容都是这样的：\n\n    div {\n      background: red;\n    }\n\n好了，话不多数，开始正文！\n\n## CSS\n\n关于`CSS`，大家肯定都知道的是`<link>`标签放在头部性能会高一点，少一点人知道如果`<script>`与`<link>`同时在头部的话，`<script>`在上可能会更好。这是为什么呢？下面我们一起来看一下`CSS`对`DOM`的影响是什么。\n\n###  `CSS` 不会阻塞 `DOM` 的解析\n\n注意哦！这里说的是`DOM` 解析，证明的例子如下，首先在头部插入`<script defer src=\"/js/logDiv.js\"></script>`，`JS`文件的内容是：\n    \n    const div = document.querySelecot('div');\n    console.log(div);\n\n`defer`属性相信大家也很熟悉了，[MDN](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)对此的描述是用来通知浏览器该脚本将在文档完成解析后，触发 DOMContentLoaded 事件前执行。设置这个属性，能保证`DOM`解析后马上打印出`div`。\n\n之后将`<link rel=\"stylesheet\" href=\"/css/sleep3000-common.css\">`插入`HTML`文件的任一位置，打开浏览器，可以看到是首先打印出`div`这个`DOM`节点，过3s左右之后才渲染出一个浅蓝色的`div`。这就证明了`CSS` 是不会阻塞 `DOM` 的解析的，尽管`CSS`下载需要3s，但这个过程中，浏览器不会傻等着`CSS`下载完，而是会解析`DOM`的。\n\n这里简单说一下，浏览器是解析`DOM`生成`DOM Tree`，结合`CSS`生成的`CSS Tree`，最终组成`render tree`，再渲染页面。由此可见，在此过程中`CSS`完全无法影响`DOM Tree`，因而无需阻塞`DOM`解析。然而，`DOM Tree`和`CSS Tree`会组合成`render tree`，那`CSS`会不会页面阻塞渲染呢？\n\n###  `CSS` 阻塞页面渲染\n\n其实这一点，刚才的例子已经说明了，如果`CSS` 不会阻塞页面阻塞渲染，那么`CSS`文件下载之前，浏览器就会渲染出一个浅绿色的`div`，之后再变成浅蓝色。浏览器的这个策略其实很明智的，想象一下，如果没有这个策略，页面首先会呈现出一个原始的模样，待`CSS`下载完之后又突然变了一个模样。用户体验可谓极差，而且渲染是有成本的。\n\n因此，基于性能与用户体验的考虑，浏览器会尽量减少渲染的次数，`CSS`顺理成章地阻塞页面渲染。\n\n然而，事情总有奇怪的，请看这例子，`HTML`头部结构如下：\n    \n    <header>\n        <link rel=\"stylesheet\" href=\"/css/sleep3000-common.css\">\n\t    <script src=\"/js/logDiv.js\"></script>\n    </header>\n\t\n但思考一下这会产生什么结果呢？\n\n答案是浏览器会转圈圈三秒，但此过程中不会打印任何东西，之后呈现出一个浅蓝色的`div`，再打印出`null`。结果好像是`CSS`不单阻塞了页面渲染，还阻塞了`DOM` 的解析啊！稍等，在你打算掀桌子疯狂吐槽我之前，请先思考一下是什么阻塞了`DOM` 的解析，刚才已经证明了`CSS`是不会阻塞的，那么阻塞了页面解析其实是`JS`！但明明`JS`的代码如此简单，肯定不会阻塞这么久，那就是`JS`在等待`CSS`的下载，这是为什么呢？\n\n仔细思考一下，其实这样做是有道理的，如果脚本的内容是获取元素的样式，宽高等`CSS`控制的属性，浏览器是需要计算的，也就是依赖于`CSS`。浏览器也无法感知脚本内容到底是什么，为避免样式获取，因而只好等前面所有的样式下载完后，再执行`JS`。因而造成了之前例子的情况。\n\n所以，看官大人明白为何`<script>`与`<link>`同时在头部的话，`<script>`在上可能会更好了么？之所以是可能，是因为如果`<link>`的内容下载更快的话，是没影响的，但反过来的话，`JS`就要等待了，然而这些等待的时间是完全不必要的。\n\n## JS\n\n`JS`，也就是`<script>`标签，估计大家都很熟悉了，不就是阻塞`DOM`解析和渲染么。然而，其中其实还是有一点细节可以考究一下的，我们一起来好好看看。\n\n### `JS` 阻塞 `DOM` 解析\n\n首先我们需要一个新的`JS`文件名为`blok.js`，内容如下：\n\n    const arr = [];\n    for (let i = 0; i < 10000000; i++) {\n      arr.push(i);\n      arr.splice(i % 3, i % 7, i % 5);\n    }\n    const div = document.querySelector('div');\n    console.log(div);\n    \n其实那个数组操作时没意义的，只是为了让这个`JS`文件多花执行时间而已。之后把这个文件插入头部，浏览器跑一下。\n\n结果估计大家也能想象得到，浏览器转圈圈一会，这过程中不会有任何东西出现。之后打印出`null`，再出现一个浅绿色的`div`。现象就足以说明`JS` 阻塞 `DOM` 解析了。其实原因也很好理解，浏览器并不知道脚本的内容是什么，如果先行解析下面的`DOM`，万一脚本内全删了后面的`DOM`，浏览器就白干活了。更别谈丧心病狂的`document.write`。浏览器无法预估里面的内容，那就干脆全部停住，等脚本执行完再干活就好了。\n\n对此的优化其实也很显而易见，具体分为两类。如果`JS`文件体积太大，同时你确定没必要阻塞`DOM`解析的话，不妨按需要加上`defer`或者`async`属性，此时脚本下载的过程中是不会阻塞`DOM`解析的。\n\n而如果是文件执行时间太长，不妨分拆一下代码，不用立即执行的代码，可以使用一下以前的黑科技：`setTimeout()`。当然，现代的浏览器很聪明，它会“偷看”之后的`DOM`内容，碰到如`<link>`、`<script>`和`<img>`等标签时，它会帮助我们先行下载里面的资源，不会傻等到解析到那里时才下载。\n\n### 浏览器遇到 `<script>` 标签时，会触发页面渲染\n\n这个细节可能不少看官大人并不清楚，其实这才是解释上面为何`JS`执行会等待`CSS`下载的原因。先上例子,`HTML`内`body`的结构如下：\n    \n    <body>\n    \t<div></div>\n    \t<script src=\"/js/sleep3000-logDiv.js\"></script>\n    \t<style>\n    \t\tdiv {\n    \t\t\tbackground: lightgrey;\n    \t\t}\n    \t</style>\n    \t<script src=\"/js/sleep5000-logDiv.js\"></script>\n    \t<link rel=\"stylesheet\" href=\"/css/common.css\">\n    </body>\n    \n这个例子也是很极端的例子，但不妨碍它透露给我们很多重要的信息。想象一下，页面会怎样呢？\n\n答案是先浅绿色，再浅灰色，最后浅蓝色。由此可见，每次碰到`<script>`标签时，浏览器都会渲染一次页面。这是基于同样的理由，浏览器不知道脚本的内容，因而碰到脚本时，只好先渲染页面，确保脚本能获取到最新的`DOM`元素信息，尽管脚本可能不需要这些信息。\n\n## 小结\n\n综上所述，我们得出这样的结论：\n\n* `CSS` 不会阻塞 `DOM` 的解析，但会阻塞 `DOM` 渲染。\n* `JS` 阻塞 `DOM` 解析，但浏览器会\"偷看\"`DOM`，预先下载相关资源。\n* 浏览器遇到 `<script>`且没有`defer`或`async`属性的 标签时，会触发页面渲染，因而如果前面`CSS`资源尚未加载完毕时，浏览器会等待它加载完毕在执行脚本。\n\n所以，你现在明白为何`<script>`最好放底部，`<link>`最好放头部，如果头部同时有`<script>`与`<link>`的情况下，最好将`<script>`放在`<link>`上面了吗？\n\n感谢各位看官大人看到这里，希望本文对你有所帮助，有不同或更好意见的大佬，还望不吝赐教！谢谢~\n","slug":"jsCssDomBlock","published":1,"updated":"2018-06-19T10:09:18.109Z","_id":"cjiliy7vq000280wgxctz7tr4","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"原来-CSS-与-JS-是这样阻塞-DOM-解析和渲染的\"><a href=\"#原来-CSS-与-JS-是这样阻塞-DOM-解析和渲染的\" class=\"headerlink\" title=\"原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的\"></a>原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的</h1><p>由于关系到文件的读取，那是肯定需要服务器的，我会把全部的文件放在<a href=\"https://github.com/ljf0113/how-js-and-css-block-dom\" target=\"_blank\" rel=\"noopener\">github</a>上</p>\n<p><code>node</code>端唯一需要解释一下的是这个函数：</p>\n<pre><code>function sleep(time) {\n  return new Promise(function(res) {\n    setTimeout(() =&gt; {\n      res()\n    }, time);\n  })\n}\n</code></pre><p>嗯！其实就延时啦。如果<code>CSS</code>或者<code>JS</code>文件名有<code>sleep3000</code>之类的前缀时，意思就是延迟3000毫秒才会返回这文件。</p>\n<p>下文使用的<code>HTML</code>文件是长这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">\t&lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t\tdiv &#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground: lightgreen;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>我会在其中插入不同的<code>JS</code>和<code>CSS</code>。</p>\n<p>而使用的<code>common.css</code>，不论有没有前缀，内容都是这样的：</p>\n<pre><code>div {\n  background: red;\n}\n</code></pre><p>好了，话不多数，开始正文！</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><p>关于<code>CSS</code>，大家肯定都知道的是<code>&lt;link&gt;</code>标签放在头部性能会高一点，少一点人知道如果<code>&lt;script&gt;</code>与<code>&lt;link&gt;</code>同时在头部的话，<code>&lt;script&gt;</code>在上可能会更好。这是为什么呢？下面我们一起来看一下<code>CSS</code>对<code>DOM</code>的影响是什么。</p>\n<h3 id=\"CSS-不会阻塞-DOM-的解析\"><a href=\"#CSS-不会阻塞-DOM-的解析\" class=\"headerlink\" title=\"CSS 不会阻塞 DOM 的解析\"></a><code>CSS</code> 不会阻塞 <code>DOM</code> 的解析</h3><p>注意哦！这里说的是<code>DOM</code> 解析，证明的例子如下，首先在头部插入<code>&lt;script defer src=&quot;/js/logDiv.js&quot;&gt;&lt;/script&gt;</code>，<code>JS</code>文件的内容是：</p>\n<pre><code>const div = document.querySelecot(&apos;div&apos;);\nconsole.log(div);\n</code></pre><p><code>defer</code>属性相信大家也很熟悉了，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">MDN</a>对此的描述是用来通知浏览器该脚本将在文档完成解析后，触发 DOMContentLoaded 事件前执行。设置这个属性，能保证<code>DOM</code>解析后马上打印出<code>div</code>。</p>\n<p>之后将<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/sleep3000-common.css&quot;&gt;</code>插入<code>HTML</code>文件的任一位置，打开浏览器，可以看到是首先打印出<code>div</code>这个<code>DOM</code>节点，过3s左右之后才渲染出一个浅蓝色的<code>div</code>。这就证明了<code>CSS</code> 是不会阻塞 <code>DOM</code> 的解析的，尽管<code>CSS</code>下载需要3s，但这个过程中，浏览器不会傻等着<code>CSS</code>下载完，而是会解析<code>DOM</code>的。</p>\n<p>这里简单说一下，浏览器是解析<code>DOM</code>生成<code>DOM Tree</code>，结合<code>CSS</code>生成的<code>CSS Tree</code>，最终组成<code>render tree</code>，再渲染页面。由此可见，在此过程中<code>CSS</code>完全无法影响<code>DOM Tree</code>，因而无需阻塞<code>DOM</code>解析。然而，<code>DOM Tree</code>和<code>CSS Tree</code>会组合成<code>render tree</code>，那<code>CSS</code>会不会页面阻塞渲染呢？</p>\n<h3 id=\"CSS-阻塞页面渲染\"><a href=\"#CSS-阻塞页面渲染\" class=\"headerlink\" title=\"CSS 阻塞页面渲染\"></a><code>CSS</code> 阻塞页面渲染</h3><p>其实这一点，刚才的例子已经说明了，如果<code>CSS</code> 不会阻塞页面阻塞渲染，那么<code>CSS</code>文件下载之前，浏览器就会渲染出一个浅绿色的<code>div</code>，之后再变成浅蓝色。浏览器的这个策略其实很明智的，想象一下，如果没有这个策略，页面首先会呈现出一个原始的模样，待<code>CSS</code>下载完之后又突然变了一个模样。用户体验可谓极差，而且渲染是有成本的。</p>\n<p>因此，基于性能与用户体验的考虑，浏览器会尽量减少渲染的次数，<code>CSS</code>顺理成章地阻塞页面渲染。</p>\n<p>然而，事情总有奇怪的，请看这例子，<code>HTML</code>头部结构如下：</p>\n<pre><code>&lt;header&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/sleep3000-common.css&quot;&gt;\n    &lt;script src=&quot;/js/logDiv.js&quot;&gt;&lt;/script&gt;\n&lt;/header&gt;\n</code></pre><p>但思考一下这会产生什么结果呢？</p>\n<p>答案是浏览器会转圈圈三秒，但此过程中不会打印任何东西，之后呈现出一个浅蓝色的<code>div</code>，再打印出<code>null</code>。结果好像是<code>CSS</code>不单阻塞了页面渲染，还阻塞了<code>DOM</code> 的解析啊！稍等，在你打算掀桌子疯狂吐槽我之前，请先思考一下是什么阻塞了<code>DOM</code> 的解析，刚才已经证明了<code>CSS</code>是不会阻塞的，那么阻塞了页面解析其实是<code>JS</code>！但明明<code>JS</code>的代码如此简单，肯定不会阻塞这么久，那就是<code>JS</code>在等待<code>CSS</code>的下载，这是为什么呢？</p>\n<p>仔细思考一下，其实这样做是有道理的，如果脚本的内容是获取元素的样式，宽高等<code>CSS</code>控制的属性，浏览器是需要计算的，也就是依赖于<code>CSS</code>。浏览器也无法感知脚本内容到底是什么，为避免样式获取，因而只好等前面所有的样式下载完后，再执行<code>JS</code>。因而造成了之前例子的情况。</p>\n<p>所以，看官大人明白为何<code>&lt;script&gt;</code>与<code>&lt;link&gt;</code>同时在头部的话，<code>&lt;script&gt;</code>在上可能会更好了么？之所以是可能，是因为如果<code>&lt;link&gt;</code>的内容下载更快的话，是没影响的，但反过来的话，<code>JS</code>就要等待了，然而这些等待的时间是完全不必要的。</p>\n<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h2><p><code>JS</code>，也就是<code>&lt;script&gt;</code>标签，估计大家都很熟悉了，不就是阻塞<code>DOM</code>解析和渲染么。然而，其中其实还是有一点细节可以考究一下的，我们一起来好好看看。</p>\n<h3 id=\"JS-阻塞-DOM-解析\"><a href=\"#JS-阻塞-DOM-解析\" class=\"headerlink\" title=\"JS 阻塞 DOM 解析\"></a><code>JS</code> 阻塞 <code>DOM</code> 解析</h3><p>首先我们需要一个新的<code>JS</code>文件名为<code>blok.js</code>，内容如下：</p>\n<pre><code>const arr = [];\nfor (let i = 0; i &lt; 10000000; i++) {\n  arr.push(i);\n  arr.splice(i % 3, i % 7, i % 5);\n}\nconst div = document.querySelector(&apos;div&apos;);\nconsole.log(div);\n</code></pre><p>其实那个数组操作时没意义的，只是为了让这个<code>JS</code>文件多花执行时间而已。之后把这个文件插入头部，浏览器跑一下。</p>\n<p>结果估计大家也能想象得到，浏览器转圈圈一会，这过程中不会有任何东西出现。之后打印出<code>null</code>，再出现一个浅绿色的<code>div</code>。现象就足以说明<code>JS</code> 阻塞 <code>DOM</code> 解析了。其实原因也很好理解，浏览器并不知道脚本的内容是什么，如果先行解析下面的<code>DOM</code>，万一脚本内全删了后面的<code>DOM</code>，浏览器就白干活了。更别谈丧心病狂的<code>document.write</code>。浏览器无法预估里面的内容，那就干脆全部停住，等脚本执行完再干活就好了。</p>\n<p>对此的优化其实也很显而易见，具体分为两类。如果<code>JS</code>文件体积太大，同时你确定没必要阻塞<code>DOM</code>解析的话，不妨按需要加上<code>defer</code>或者<code>async</code>属性，此时脚本下载的过程中是不会阻塞<code>DOM</code>解析的。</p>\n<p>而如果是文件执行时间太长，不妨分拆一下代码，不用立即执行的代码，可以使用一下以前的黑科技：<code>setTimeout()</code>。当然，现代的浏览器很聪明，它会“偷看”之后的<code>DOM</code>内容，碰到如<code>&lt;link&gt;</code>、<code>&lt;script&gt;</code>和<code>&lt;img&gt;</code>等标签时，它会帮助我们先行下载里面的资源，不会傻等到解析到那里时才下载。</p>\n<h3 id=\"浏览器遇到-lt-script-gt-标签时，会触发页面渲染\"><a href=\"#浏览器遇到-lt-script-gt-标签时，会触发页面渲染\" class=\"headerlink\" title=\"浏览器遇到 &lt;script&gt; 标签时，会触发页面渲染\"></a>浏览器遇到 <code>&lt;script&gt;</code> 标签时，会触发页面渲染</h3><p>这个细节可能不少看官大人并不清楚，其实这才是解释上面为何<code>JS</code>执行会等待<code>CSS</code>下载的原因。先上例子,<code>HTML</code>内<code>body</code>的结构如下：</p>\n<pre><code>&lt;body&gt;\n    &lt;div&gt;&lt;/div&gt;\n    &lt;script src=&quot;/js/sleep3000-logDiv.js&quot;&gt;&lt;/script&gt;\n    &lt;style&gt;\n        div {\n            background: lightgrey;\n        }\n    &lt;/style&gt;\n    &lt;script src=&quot;/js/sleep5000-logDiv.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/common.css&quot;&gt;\n&lt;/body&gt;\n</code></pre><p>这个例子也是很极端的例子，但不妨碍它透露给我们很多重要的信息。想象一下，页面会怎样呢？</p>\n<p>答案是先浅绿色，再浅灰色，最后浅蓝色。由此可见，每次碰到<code>&lt;script&gt;</code>标签时，浏览器都会渲染一次页面。这是基于同样的理由，浏览器不知道脚本的内容，因而碰到脚本时，只好先渲染页面，确保脚本能获取到最新的<code>DOM</code>元素信息，尽管脚本可能不需要这些信息。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>综上所述，我们得出这样的结论：</p>\n<ul>\n<li><code>CSS</code> 不会阻塞 <code>DOM</code> 的解析，但会阻塞 <code>DOM</code> 渲染。</li>\n<li><code>JS</code> 阻塞 <code>DOM</code> 解析，但浏览器会”偷看”<code>DOM</code>，预先下载相关资源。</li>\n<li>浏览器遇到 <code>&lt;script&gt;</code>且没有<code>defer</code>或<code>async</code>属性的 标签时，会触发页面渲染，因而如果前面<code>CSS</code>资源尚未加载完毕时，浏览器会等待它加载完毕在执行脚本。</li>\n</ul>\n<p>所以，你现在明白为何<code>&lt;script&gt;</code>最好放底部，<code>&lt;link&gt;</code>最好放头部，如果头部同时有<code>&lt;script&gt;</code>与<code>&lt;link&gt;</code>的情况下，最好将<code>&lt;script&gt;</code>放在<code>&lt;link&gt;</code>上面了吗？</p>\n<p>感谢各位看官大人看到这里，希望本文对你有所帮助，有不同或更好意见的大佬，还望不吝赐教！谢谢~</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"原来-CSS-与-JS-是这样阻塞-DOM-解析和渲染的\"><a href=\"#原来-CSS-与-JS-是这样阻塞-DOM-解析和渲染的\" class=\"headerlink\" title=\"原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的\"></a>原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的</h1><p>由于关系到文件的读取，那是肯定需要服务器的，我会把全部的文件放在<a href=\"https://github.com/ljf0113/how-js-and-css-block-dom\" target=\"_blank\" rel=\"noopener\">github</a>上</p>\n<p><code>node</code>端唯一需要解释一下的是这个函数：</p>\n<pre><code>function sleep(time) {\n  return new Promise(function(res) {\n    setTimeout(() =&gt; {\n      res()\n    }, time);\n  })\n}\n</code></pre><p>嗯！其实就延时啦。如果<code>CSS</code>或者<code>JS</code>文件名有<code>sleep3000</code>之类的前缀时，意思就是延迟3000毫秒才会返回这文件。</p>\n<p>下文使用的<code>HTML</code>文件是长这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">\t&lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t\tdiv &#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground: lightgreen;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>我会在其中插入不同的<code>JS</code>和<code>CSS</code>。</p>\n<p>而使用的<code>common.css</code>，不论有没有前缀，内容都是这样的：</p>\n<pre><code>div {\n  background: red;\n}\n</code></pre><p>好了，话不多数，开始正文！</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><p>关于<code>CSS</code>，大家肯定都知道的是<code>&lt;link&gt;</code>标签放在头部性能会高一点，少一点人知道如果<code>&lt;script&gt;</code>与<code>&lt;link&gt;</code>同时在头部的话，<code>&lt;script&gt;</code>在上可能会更好。这是为什么呢？下面我们一起来看一下<code>CSS</code>对<code>DOM</code>的影响是什么。</p>\n<h3 id=\"CSS-不会阻塞-DOM-的解析\"><a href=\"#CSS-不会阻塞-DOM-的解析\" class=\"headerlink\" title=\"CSS 不会阻塞 DOM 的解析\"></a><code>CSS</code> 不会阻塞 <code>DOM</code> 的解析</h3><p>注意哦！这里说的是<code>DOM</code> 解析，证明的例子如下，首先在头部插入<code>&lt;script defer src=&quot;/js/logDiv.js&quot;&gt;&lt;/script&gt;</code>，<code>JS</code>文件的内容是：</p>\n<pre><code>const div = document.querySelecot(&apos;div&apos;);\nconsole.log(div);\n</code></pre><p><code>defer</code>属性相信大家也很熟悉了，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">MDN</a>对此的描述是用来通知浏览器该脚本将在文档完成解析后，触发 DOMContentLoaded 事件前执行。设置这个属性，能保证<code>DOM</code>解析后马上打印出<code>div</code>。</p>\n<p>之后将<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/sleep3000-common.css&quot;&gt;</code>插入<code>HTML</code>文件的任一位置，打开浏览器，可以看到是首先打印出<code>div</code>这个<code>DOM</code>节点，过3s左右之后才渲染出一个浅蓝色的<code>div</code>。这就证明了<code>CSS</code> 是不会阻塞 <code>DOM</code> 的解析的，尽管<code>CSS</code>下载需要3s，但这个过程中，浏览器不会傻等着<code>CSS</code>下载完，而是会解析<code>DOM</code>的。</p>\n<p>这里简单说一下，浏览器是解析<code>DOM</code>生成<code>DOM Tree</code>，结合<code>CSS</code>生成的<code>CSS Tree</code>，最终组成<code>render tree</code>，再渲染页面。由此可见，在此过程中<code>CSS</code>完全无法影响<code>DOM Tree</code>，因而无需阻塞<code>DOM</code>解析。然而，<code>DOM Tree</code>和<code>CSS Tree</code>会组合成<code>render tree</code>，那<code>CSS</code>会不会页面阻塞渲染呢？</p>\n<h3 id=\"CSS-阻塞页面渲染\"><a href=\"#CSS-阻塞页面渲染\" class=\"headerlink\" title=\"CSS 阻塞页面渲染\"></a><code>CSS</code> 阻塞页面渲染</h3><p>其实这一点，刚才的例子已经说明了，如果<code>CSS</code> 不会阻塞页面阻塞渲染，那么<code>CSS</code>文件下载之前，浏览器就会渲染出一个浅绿色的<code>div</code>，之后再变成浅蓝色。浏览器的这个策略其实很明智的，想象一下，如果没有这个策略，页面首先会呈现出一个原始的模样，待<code>CSS</code>下载完之后又突然变了一个模样。用户体验可谓极差，而且渲染是有成本的。</p>\n<p>因此，基于性能与用户体验的考虑，浏览器会尽量减少渲染的次数，<code>CSS</code>顺理成章地阻塞页面渲染。</p>\n<p>然而，事情总有奇怪的，请看这例子，<code>HTML</code>头部结构如下：</p>\n<pre><code>&lt;header&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/sleep3000-common.css&quot;&gt;\n    &lt;script src=&quot;/js/logDiv.js&quot;&gt;&lt;/script&gt;\n&lt;/header&gt;\n</code></pre><p>但思考一下这会产生什么结果呢？</p>\n<p>答案是浏览器会转圈圈三秒，但此过程中不会打印任何东西，之后呈现出一个浅蓝色的<code>div</code>，再打印出<code>null</code>。结果好像是<code>CSS</code>不单阻塞了页面渲染，还阻塞了<code>DOM</code> 的解析啊！稍等，在你打算掀桌子疯狂吐槽我之前，请先思考一下是什么阻塞了<code>DOM</code> 的解析，刚才已经证明了<code>CSS</code>是不会阻塞的，那么阻塞了页面解析其实是<code>JS</code>！但明明<code>JS</code>的代码如此简单，肯定不会阻塞这么久，那就是<code>JS</code>在等待<code>CSS</code>的下载，这是为什么呢？</p>\n<p>仔细思考一下，其实这样做是有道理的，如果脚本的内容是获取元素的样式，宽高等<code>CSS</code>控制的属性，浏览器是需要计算的，也就是依赖于<code>CSS</code>。浏览器也无法感知脚本内容到底是什么，为避免样式获取，因而只好等前面所有的样式下载完后，再执行<code>JS</code>。因而造成了之前例子的情况。</p>\n<p>所以，看官大人明白为何<code>&lt;script&gt;</code>与<code>&lt;link&gt;</code>同时在头部的话，<code>&lt;script&gt;</code>在上可能会更好了么？之所以是可能，是因为如果<code>&lt;link&gt;</code>的内容下载更快的话，是没影响的，但反过来的话，<code>JS</code>就要等待了，然而这些等待的时间是完全不必要的。</p>\n<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h2><p><code>JS</code>，也就是<code>&lt;script&gt;</code>标签，估计大家都很熟悉了，不就是阻塞<code>DOM</code>解析和渲染么。然而，其中其实还是有一点细节可以考究一下的，我们一起来好好看看。</p>\n<h3 id=\"JS-阻塞-DOM-解析\"><a href=\"#JS-阻塞-DOM-解析\" class=\"headerlink\" title=\"JS 阻塞 DOM 解析\"></a><code>JS</code> 阻塞 <code>DOM</code> 解析</h3><p>首先我们需要一个新的<code>JS</code>文件名为<code>blok.js</code>，内容如下：</p>\n<pre><code>const arr = [];\nfor (let i = 0; i &lt; 10000000; i++) {\n  arr.push(i);\n  arr.splice(i % 3, i % 7, i % 5);\n}\nconst div = document.querySelector(&apos;div&apos;);\nconsole.log(div);\n</code></pre><p>其实那个数组操作时没意义的，只是为了让这个<code>JS</code>文件多花执行时间而已。之后把这个文件插入头部，浏览器跑一下。</p>\n<p>结果估计大家也能想象得到，浏览器转圈圈一会，这过程中不会有任何东西出现。之后打印出<code>null</code>，再出现一个浅绿色的<code>div</code>。现象就足以说明<code>JS</code> 阻塞 <code>DOM</code> 解析了。其实原因也很好理解，浏览器并不知道脚本的内容是什么，如果先行解析下面的<code>DOM</code>，万一脚本内全删了后面的<code>DOM</code>，浏览器就白干活了。更别谈丧心病狂的<code>document.write</code>。浏览器无法预估里面的内容，那就干脆全部停住，等脚本执行完再干活就好了。</p>\n<p>对此的优化其实也很显而易见，具体分为两类。如果<code>JS</code>文件体积太大，同时你确定没必要阻塞<code>DOM</code>解析的话，不妨按需要加上<code>defer</code>或者<code>async</code>属性，此时脚本下载的过程中是不会阻塞<code>DOM</code>解析的。</p>\n<p>而如果是文件执行时间太长，不妨分拆一下代码，不用立即执行的代码，可以使用一下以前的黑科技：<code>setTimeout()</code>。当然，现代的浏览器很聪明，它会“偷看”之后的<code>DOM</code>内容，碰到如<code>&lt;link&gt;</code>、<code>&lt;script&gt;</code>和<code>&lt;img&gt;</code>等标签时，它会帮助我们先行下载里面的资源，不会傻等到解析到那里时才下载。</p>\n<h3 id=\"浏览器遇到-lt-script-gt-标签时，会触发页面渲染\"><a href=\"#浏览器遇到-lt-script-gt-标签时，会触发页面渲染\" class=\"headerlink\" title=\"浏览器遇到 &lt;script&gt; 标签时，会触发页面渲染\"></a>浏览器遇到 <code>&lt;script&gt;</code> 标签时，会触发页面渲染</h3><p>这个细节可能不少看官大人并不清楚，其实这才是解释上面为何<code>JS</code>执行会等待<code>CSS</code>下载的原因。先上例子,<code>HTML</code>内<code>body</code>的结构如下：</p>\n<pre><code>&lt;body&gt;\n    &lt;div&gt;&lt;/div&gt;\n    &lt;script src=&quot;/js/sleep3000-logDiv.js&quot;&gt;&lt;/script&gt;\n    &lt;style&gt;\n        div {\n            background: lightgrey;\n        }\n    &lt;/style&gt;\n    &lt;script src=&quot;/js/sleep5000-logDiv.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/common.css&quot;&gt;\n&lt;/body&gt;\n</code></pre><p>这个例子也是很极端的例子，但不妨碍它透露给我们很多重要的信息。想象一下，页面会怎样呢？</p>\n<p>答案是先浅绿色，再浅灰色，最后浅蓝色。由此可见，每次碰到<code>&lt;script&gt;</code>标签时，浏览器都会渲染一次页面。这是基于同样的理由，浏览器不知道脚本的内容，因而碰到脚本时，只好先渲染页面，确保脚本能获取到最新的<code>DOM</code>元素信息，尽管脚本可能不需要这些信息。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>综上所述，我们得出这样的结论：</p>\n<ul>\n<li><code>CSS</code> 不会阻塞 <code>DOM</code> 的解析，但会阻塞 <code>DOM</code> 渲染。</li>\n<li><code>JS</code> 阻塞 <code>DOM</code> 解析，但浏览器会”偷看”<code>DOM</code>，预先下载相关资源。</li>\n<li>浏览器遇到 <code>&lt;script&gt;</code>且没有<code>defer</code>或<code>async</code>属性的 标签时，会触发页面渲染，因而如果前面<code>CSS</code>资源尚未加载完毕时，浏览器会等待它加载完毕在执行脚本。</li>\n</ul>\n<p>所以，你现在明白为何<code>&lt;script&gt;</code>最好放底部，<code>&lt;link&gt;</code>最好放头部，如果头部同时有<code>&lt;script&gt;</code>与<code>&lt;link&gt;</code>的情况下，最好将<code>&lt;script&gt;</code>放在<code>&lt;link&gt;</code>上面了吗？</p>\n<p>感谢各位看官大人看到这里，希望本文对你有所帮助，有不同或更好意见的大佬，还望不吝赐教！谢谢~</p>\n"},{"title":"多益期间网站记录","date":"2018-05-02T01:56:19.000Z","description":"dy网站记录","_content":"\n### js\n**jsonp跨域问题**\n[link](http://www.jb51.net/article/46463.htm)\n[link](http://www.cnblogs.com/snandy/archive/2011/05/03/2034229.html)  \n[12个JavaScript技巧](http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html?f=tt)  \n[图片延迟加载滚动](https://my.oschina.net/u/2328699/blog/830990)  \n[用Javascript获取页面元素的位置](http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html)  \n[js剪切](http://web.jobbole.com/86054/) \n[js复制](http://codepen.io/SitePoint/pen/vNvEwE/)  \n[多益gulpfile](http://quan.duoyi.com/gulpfile.js)  \n[ES6排名前十的最佳特性列表](http://www.alloyteam.com/2016/03/es6-front-end-developers-will-have-to-know-the-top-ten-properties/)  \n    **元素可拖拽**\n[link](https://github.com/baixuexiyang/drag)\n[link](https://github.com/nathco/jQuery.dragmove)\n[episodes 检查页面加载速度](https://github.com/stevesouders/episodes/blob/master/README.md)\n[图片懒加载](https://segmentfault.com/a/1190000000437578)\n[面向对象](http://www.jianshu.com/p/15ac7393bc1f)  \n[keyup事件处理](http://pandacafe.net/post/337)\n[IE select option点击事件](http://fins.iteye.com/blog/198977)  \n[xss](http://netsecurity.51cto.com/art/201301/378948.htm)  \n[设计模式](https://github.com/Redshao/dahong/issues/6)\n[设计模式](http://www.cnblogs.com/tugenhua0707/p/5198407.html)\n\n[页面执行顺序：由上到下执行，可以并非请求，前面的执行完再执行后面的，图片显示要等css执行完了再执行](http://www.cnblogs.com/chenya/p/4424547.html)\n\n\n\n\n### css\n**垂直居中**\n[居中问题](https://segmentfault.com/q/1010000000660613)\n[居中问题](https://juejin.im/post/58f818bbb123db006233ab2a )\n[垂直居中](http://www.w3cplus.com/css%2520/img-vertically-center-content-with-css)     \n[三角箭头](http://www.wufangbo.com/css-san-jiao-tips/)[CSS定位](http://www.cnblogs.com/coffeedeveloper/p/3145790.html)\n[CSS定位](http://blog.csdn.net/chen_zw/article/details/8741365)  \n[css 3加载loading](http://sc.chinaz.com/jiaoben/150526099390.htm)\n[伪元素](http://helloweb.wang/qianduankaifa/573.html)\n   \n   \n   \n### 博客\n[尤雨溪微博](http://weibo.com/arttechdesign?is_hot=1#_loginLayer_1476078155160)\n[国外技术博客](https://www.zhihu.com/question/22902084)\n\n### vue&webpack&node\n  [vue笔记应用](https://segmentfault.com/a/1190000005015164 )  \n[github中文文档](https://github.com/vuejs/vuex/issues/176)  \n[模块安装机制简介npm](http://www.ruanyifeng.com/blog/2016/01/npm-install.html)  \n [package.json文件](http://javascript.ruanyifeng.com/nodejs/packagejson.html)  \n  [webpack练手](http://www.cnblogs.com/souvenir/p/5006559.html)  \n  [webpack -vue](https://github.com/vuejs-templates/webpack/tree/master/template/config)  \n  [vue总结](https://segmentfault.com/a/1190000005832164)\n[双向绑定 mvvm](https://www.kancloud.cn/zmwtp/vue2/149485)\n\n**webpack+vue**\n[link](http://zhizhi.betahouse.us/2015/09/27/yi-webpackde-demos/)\n[link](https://github.com/ruanyf/webpack-demos#demo01-entry-file-source)\n[link](http://www.cnblogs.com/souvenir/p/5006559.html)\n[link](https://github.com/Jinjiang/vue)  \n[webpack文档中文版](http://www.css88.com/doc/webpack2/concepts/)  \n[vue双向绑定](https://segmentfault.com/a/1190000006599500)\n\n### face \n  [腾讯面试经历](http://www.qdfuns.com/notes/27377/635f072c77d0e5c4c712fe67bca93e0d.html)  \n  [前端面试](http://blog.csdn.net/kongjiea/article/details/46341575)","source":"_posts/dywebsite.md","raw":"---\ntitle: 多益期间网站记录\ndate: 2018-05-02 09:56:19\ntags:\ndescription: dy网站记录\n---\n\n### js\n**jsonp跨域问题**\n[link](http://www.jb51.net/article/46463.htm)\n[link](http://www.cnblogs.com/snandy/archive/2011/05/03/2034229.html)  \n[12个JavaScript技巧](http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html?f=tt)  \n[图片延迟加载滚动](https://my.oschina.net/u/2328699/blog/830990)  \n[用Javascript获取页面元素的位置](http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html)  \n[js剪切](http://web.jobbole.com/86054/) \n[js复制](http://codepen.io/SitePoint/pen/vNvEwE/)  \n[多益gulpfile](http://quan.duoyi.com/gulpfile.js)  \n[ES6排名前十的最佳特性列表](http://www.alloyteam.com/2016/03/es6-front-end-developers-will-have-to-know-the-top-ten-properties/)  \n    **元素可拖拽**\n[link](https://github.com/baixuexiyang/drag)\n[link](https://github.com/nathco/jQuery.dragmove)\n[episodes 检查页面加载速度](https://github.com/stevesouders/episodes/blob/master/README.md)\n[图片懒加载](https://segmentfault.com/a/1190000000437578)\n[面向对象](http://www.jianshu.com/p/15ac7393bc1f)  \n[keyup事件处理](http://pandacafe.net/post/337)\n[IE select option点击事件](http://fins.iteye.com/blog/198977)  \n[xss](http://netsecurity.51cto.com/art/201301/378948.htm)  \n[设计模式](https://github.com/Redshao/dahong/issues/6)\n[设计模式](http://www.cnblogs.com/tugenhua0707/p/5198407.html)\n\n[页面执行顺序：由上到下执行，可以并非请求，前面的执行完再执行后面的，图片显示要等css执行完了再执行](http://www.cnblogs.com/chenya/p/4424547.html)\n\n\n\n\n### css\n**垂直居中**\n[居中问题](https://segmentfault.com/q/1010000000660613)\n[居中问题](https://juejin.im/post/58f818bbb123db006233ab2a )\n[垂直居中](http://www.w3cplus.com/css%2520/img-vertically-center-content-with-css)     \n[三角箭头](http://www.wufangbo.com/css-san-jiao-tips/)[CSS定位](http://www.cnblogs.com/coffeedeveloper/p/3145790.html)\n[CSS定位](http://blog.csdn.net/chen_zw/article/details/8741365)  \n[css 3加载loading](http://sc.chinaz.com/jiaoben/150526099390.htm)\n[伪元素](http://helloweb.wang/qianduankaifa/573.html)\n   \n   \n   \n### 博客\n[尤雨溪微博](http://weibo.com/arttechdesign?is_hot=1#_loginLayer_1476078155160)\n[国外技术博客](https://www.zhihu.com/question/22902084)\n\n### vue&webpack&node\n  [vue笔记应用](https://segmentfault.com/a/1190000005015164 )  \n[github中文文档](https://github.com/vuejs/vuex/issues/176)  \n[模块安装机制简介npm](http://www.ruanyifeng.com/blog/2016/01/npm-install.html)  \n [package.json文件](http://javascript.ruanyifeng.com/nodejs/packagejson.html)  \n  [webpack练手](http://www.cnblogs.com/souvenir/p/5006559.html)  \n  [webpack -vue](https://github.com/vuejs-templates/webpack/tree/master/template/config)  \n  [vue总结](https://segmentfault.com/a/1190000005832164)\n[双向绑定 mvvm](https://www.kancloud.cn/zmwtp/vue2/149485)\n\n**webpack+vue**\n[link](http://zhizhi.betahouse.us/2015/09/27/yi-webpackde-demos/)\n[link](https://github.com/ruanyf/webpack-demos#demo01-entry-file-source)\n[link](http://www.cnblogs.com/souvenir/p/5006559.html)\n[link](https://github.com/Jinjiang/vue)  \n[webpack文档中文版](http://www.css88.com/doc/webpack2/concepts/)  \n[vue双向绑定](https://segmentfault.com/a/1190000006599500)\n\n### face \n  [腾讯面试经历](http://www.qdfuns.com/notes/27377/635f072c77d0e5c4c712fe67bca93e0d.html)  \n  [前端面试](http://blog.csdn.net/kongjiea/article/details/46341575)","slug":"dywebsite","published":1,"updated":"2018-06-12T03:06:41.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiliy7vx000680wgux3pnkz1","content":"<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p><strong>jsonp跨域问题</strong><br><a href=\"http://www.jb51.net/article/46463.htm\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.cnblogs.com/snandy/archive/2011/05/03/2034229.html\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html?f=tt\" target=\"_blank\" rel=\"noopener\">12个JavaScript技巧</a><br><a href=\"https://my.oschina.net/u/2328699/blog/830990\" target=\"_blank\" rel=\"noopener\">图片延迟加载滚动</a><br><a href=\"http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html\" target=\"_blank\" rel=\"noopener\">用Javascript获取页面元素的位置</a><br><a href=\"http://web.jobbole.com/86054/\" target=\"_blank\" rel=\"noopener\">js剪切</a><br><a href=\"http://codepen.io/SitePoint/pen/vNvEwE/\" target=\"_blank\" rel=\"noopener\">js复制</a><br><a href=\"http://quan.duoyi.com/gulpfile.js\" target=\"_blank\" rel=\"noopener\">多益gulpfile</a><br><a href=\"http://www.alloyteam.com/2016/03/es6-front-end-developers-will-have-to-know-the-top-ten-properties/\" target=\"_blank\" rel=\"noopener\">ES6排名前十的最佳特性列表</a><br>    <strong>元素可拖拽</strong><br><a href=\"https://github.com/baixuexiyang/drag\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/nathco/jQuery.dragmove\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/stevesouders/episodes/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">episodes 检查页面加载速度</a><br><a href=\"https://segmentfault.com/a/1190000000437578\" target=\"_blank\" rel=\"noopener\">图片懒加载</a><br><a href=\"http://www.jianshu.com/p/15ac7393bc1f\" target=\"_blank\" rel=\"noopener\">面向对象</a><br><a href=\"http://pandacafe.net/post/337\" target=\"_blank\" rel=\"noopener\">keyup事件处理</a><br><a href=\"http://fins.iteye.com/blog/198977\" target=\"_blank\" rel=\"noopener\">IE select option点击事件</a><br><a href=\"http://netsecurity.51cto.com/art/201301/378948.htm\" target=\"_blank\" rel=\"noopener\">xss</a><br><a href=\"https://github.com/Redshao/dahong/issues/6\" target=\"_blank\" rel=\"noopener\">设计模式</a><br><a href=\"http://www.cnblogs.com/tugenhua0707/p/5198407.html\" target=\"_blank\" rel=\"noopener\">设计模式</a></p>\n<p><a href=\"http://www.cnblogs.com/chenya/p/4424547.html\" target=\"_blank\" rel=\"noopener\">页面执行顺序：由上到下执行，可以并非请求，前面的执行完再执行后面的，图片显示要等css执行完了再执行</a></p>\n<h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p><strong>垂直居中</strong><br><a href=\"https://segmentfault.com/q/1010000000660613\" target=\"_blank\" rel=\"noopener\">居中问题</a><br><a href=\"https://juejin.im/post/58f818bbb123db006233ab2a\" target=\"_blank\" rel=\"noopener\">居中问题</a><br><a href=\"http://www.w3cplus.com/css%2520/img-vertically-center-content-with-css\" target=\"_blank\" rel=\"noopener\">垂直居中</a><br><a href=\"http://www.wufangbo.com/css-san-jiao-tips/\" target=\"_blank\" rel=\"noopener\">三角箭头</a><a href=\"http://www.cnblogs.com/coffeedeveloper/p/3145790.html\" target=\"_blank\" rel=\"noopener\">CSS定位</a><br><a href=\"http://blog.csdn.net/chen_zw/article/details/8741365\" target=\"_blank\" rel=\"noopener\">CSS定位</a><br><a href=\"http://sc.chinaz.com/jiaoben/150526099390.htm\" target=\"_blank\" rel=\"noopener\">css 3加载loading</a><br><a href=\"http://helloweb.wang/qianduankaifa/573.html\" target=\"_blank\" rel=\"noopener\">伪元素</a></p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p><a href=\"http://weibo.com/arttechdesign?is_hot=1#_loginLayer_1476078155160\" target=\"_blank\" rel=\"noopener\">尤雨溪微博</a><br><a href=\"https://www.zhihu.com/question/22902084\" target=\"_blank\" rel=\"noopener\">国外技术博客</a></p>\n<h3 id=\"vue-amp-webpack-amp-node\"><a href=\"#vue-amp-webpack-amp-node\" class=\"headerlink\" title=\"vue&amp;webpack&amp;node\"></a>vue&amp;webpack&amp;node</h3><p>  <a href=\"https://segmentfault.com/a/1190000005015164\" target=\"_blank\" rel=\"noopener\">vue笔记应用</a><br><a href=\"https://github.com/vuejs/vuex/issues/176\" target=\"_blank\" rel=\"noopener\">github中文文档</a><br><a href=\"http://www.ruanyifeng.com/blog/2016/01/npm-install.html\" target=\"_blank\" rel=\"noopener\">模块安装机制简介npm</a><br> <a href=\"http://javascript.ruanyifeng.com/nodejs/packagejson.html\" target=\"_blank\" rel=\"noopener\">package.json文件</a><br>  <a href=\"http://www.cnblogs.com/souvenir/p/5006559.html\" target=\"_blank\" rel=\"noopener\">webpack练手</a><br>  <a href=\"https://github.com/vuejs-templates/webpack/tree/master/template/config\" target=\"_blank\" rel=\"noopener\">webpack -vue</a><br>  <a href=\"https://segmentfault.com/a/1190000005832164\" target=\"_blank\" rel=\"noopener\">vue总结</a><br><a href=\"https://www.kancloud.cn/zmwtp/vue2/149485\" target=\"_blank\" rel=\"noopener\">双向绑定 mvvm</a></p>\n<p><strong>webpack+vue</strong><br><a href=\"http://zhizhi.betahouse.us/2015/09/27/yi-webpackde-demos/\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/ruanyf/webpack-demos#demo01-entry-file-source\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.cnblogs.com/souvenir/p/5006559.html\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/Jinjiang/vue\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.css88.com/doc/webpack2/concepts/\" target=\"_blank\" rel=\"noopener\">webpack文档中文版</a><br><a href=\"https://segmentfault.com/a/1190000006599500\" target=\"_blank\" rel=\"noopener\">vue双向绑定</a></p>\n<h3 id=\"face\"><a href=\"#face\" class=\"headerlink\" title=\"face\"></a>face</h3><p>  <a href=\"http://www.qdfuns.com/notes/27377/635f072c77d0e5c4c712fe67bca93e0d.html\" target=\"_blank\" rel=\"noopener\">腾讯面试经历</a><br>  <a href=\"http://blog.csdn.net/kongjiea/article/details/46341575\" target=\"_blank\" rel=\"noopener\">前端面试</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p><strong>jsonp跨域问题</strong><br><a href=\"http://www.jb51.net/article/46463.htm\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.cnblogs.com/snandy/archive/2011/05/03/2034229.html\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html?f=tt\" target=\"_blank\" rel=\"noopener\">12个JavaScript技巧</a><br><a href=\"https://my.oschina.net/u/2328699/blog/830990\" target=\"_blank\" rel=\"noopener\">图片延迟加载滚动</a><br><a href=\"http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html\" target=\"_blank\" rel=\"noopener\">用Javascript获取页面元素的位置</a><br><a href=\"http://web.jobbole.com/86054/\" target=\"_blank\" rel=\"noopener\">js剪切</a><br><a href=\"http://codepen.io/SitePoint/pen/vNvEwE/\" target=\"_blank\" rel=\"noopener\">js复制</a><br><a href=\"http://quan.duoyi.com/gulpfile.js\" target=\"_blank\" rel=\"noopener\">多益gulpfile</a><br><a href=\"http://www.alloyteam.com/2016/03/es6-front-end-developers-will-have-to-know-the-top-ten-properties/\" target=\"_blank\" rel=\"noopener\">ES6排名前十的最佳特性列表</a><br>    <strong>元素可拖拽</strong><br><a href=\"https://github.com/baixuexiyang/drag\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/nathco/jQuery.dragmove\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/stevesouders/episodes/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">episodes 检查页面加载速度</a><br><a href=\"https://segmentfault.com/a/1190000000437578\" target=\"_blank\" rel=\"noopener\">图片懒加载</a><br><a href=\"http://www.jianshu.com/p/15ac7393bc1f\" target=\"_blank\" rel=\"noopener\">面向对象</a><br><a href=\"http://pandacafe.net/post/337\" target=\"_blank\" rel=\"noopener\">keyup事件处理</a><br><a href=\"http://fins.iteye.com/blog/198977\" target=\"_blank\" rel=\"noopener\">IE select option点击事件</a><br><a href=\"http://netsecurity.51cto.com/art/201301/378948.htm\" target=\"_blank\" rel=\"noopener\">xss</a><br><a href=\"https://github.com/Redshao/dahong/issues/6\" target=\"_blank\" rel=\"noopener\">设计模式</a><br><a href=\"http://www.cnblogs.com/tugenhua0707/p/5198407.html\" target=\"_blank\" rel=\"noopener\">设计模式</a></p>\n<p><a href=\"http://www.cnblogs.com/chenya/p/4424547.html\" target=\"_blank\" rel=\"noopener\">页面执行顺序：由上到下执行，可以并非请求，前面的执行完再执行后面的，图片显示要等css执行完了再执行</a></p>\n<h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p><strong>垂直居中</strong><br><a href=\"https://segmentfault.com/q/1010000000660613\" target=\"_blank\" rel=\"noopener\">居中问题</a><br><a href=\"https://juejin.im/post/58f818bbb123db006233ab2a\" target=\"_blank\" rel=\"noopener\">居中问题</a><br><a href=\"http://www.w3cplus.com/css%2520/img-vertically-center-content-with-css\" target=\"_blank\" rel=\"noopener\">垂直居中</a><br><a href=\"http://www.wufangbo.com/css-san-jiao-tips/\" target=\"_blank\" rel=\"noopener\">三角箭头</a><a href=\"http://www.cnblogs.com/coffeedeveloper/p/3145790.html\" target=\"_blank\" rel=\"noopener\">CSS定位</a><br><a href=\"http://blog.csdn.net/chen_zw/article/details/8741365\" target=\"_blank\" rel=\"noopener\">CSS定位</a><br><a href=\"http://sc.chinaz.com/jiaoben/150526099390.htm\" target=\"_blank\" rel=\"noopener\">css 3加载loading</a><br><a href=\"http://helloweb.wang/qianduankaifa/573.html\" target=\"_blank\" rel=\"noopener\">伪元素</a></p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p><a href=\"http://weibo.com/arttechdesign?is_hot=1#_loginLayer_1476078155160\" target=\"_blank\" rel=\"noopener\">尤雨溪微博</a><br><a href=\"https://www.zhihu.com/question/22902084\" target=\"_blank\" rel=\"noopener\">国外技术博客</a></p>\n<h3 id=\"vue-amp-webpack-amp-node\"><a href=\"#vue-amp-webpack-amp-node\" class=\"headerlink\" title=\"vue&amp;webpack&amp;node\"></a>vue&amp;webpack&amp;node</h3><p>  <a href=\"https://segmentfault.com/a/1190000005015164\" target=\"_blank\" rel=\"noopener\">vue笔记应用</a><br><a href=\"https://github.com/vuejs/vuex/issues/176\" target=\"_blank\" rel=\"noopener\">github中文文档</a><br><a href=\"http://www.ruanyifeng.com/blog/2016/01/npm-install.html\" target=\"_blank\" rel=\"noopener\">模块安装机制简介npm</a><br> <a href=\"http://javascript.ruanyifeng.com/nodejs/packagejson.html\" target=\"_blank\" rel=\"noopener\">package.json文件</a><br>  <a href=\"http://www.cnblogs.com/souvenir/p/5006559.html\" target=\"_blank\" rel=\"noopener\">webpack练手</a><br>  <a href=\"https://github.com/vuejs-templates/webpack/tree/master/template/config\" target=\"_blank\" rel=\"noopener\">webpack -vue</a><br>  <a href=\"https://segmentfault.com/a/1190000005832164\" target=\"_blank\" rel=\"noopener\">vue总结</a><br><a href=\"https://www.kancloud.cn/zmwtp/vue2/149485\" target=\"_blank\" rel=\"noopener\">双向绑定 mvvm</a></p>\n<p><strong>webpack+vue</strong><br><a href=\"http://zhizhi.betahouse.us/2015/09/27/yi-webpackde-demos/\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/ruanyf/webpack-demos#demo01-entry-file-source\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.cnblogs.com/souvenir/p/5006559.html\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"https://github.com/Jinjiang/vue\" target=\"_blank\" rel=\"noopener\">link</a><br><a href=\"http://www.css88.com/doc/webpack2/concepts/\" target=\"_blank\" rel=\"noopener\">webpack文档中文版</a><br><a href=\"https://segmentfault.com/a/1190000006599500\" target=\"_blank\" rel=\"noopener\">vue双向绑定</a></p>\n<h3 id=\"face\"><a href=\"#face\" class=\"headerlink\" title=\"face\"></a>face</h3><p>  <a href=\"http://www.qdfuns.com/notes/27377/635f072c77d0e5c4c712fe67bca93e0d.html\" target=\"_blank\" rel=\"noopener\">腾讯面试经历</a><br>  <a href=\"http://blog.csdn.net/kongjiea/article/details/46341575\" target=\"_blank\" rel=\"noopener\">前端面试</a></p>\n"},{"title":"常用css","date":"2018-05-17T06:07:25.000Z","description":"css记录","_content":"\n## CSS中一个冒号和两个冒号有什么区别  [链接](https://shimo.im/doc/y18XXPd7hicGHr2H/) [链接](http://www.alloyteam.com/2016/05/summary-of-pseudo-classes-and-pseudo-elements/) [important](https://blog.csdn.net/qq_25292481/article/details/52577320)\n\n我们来说说什么是伪类。\n根据w3c，CSS 伪类用于向某些选择器添加特殊的效果。最常见的就是对a元素的一些伪类了，比如a:linked,a:visted,a:hover,a:active等等。\n再说说伪元素。根据w3c，CSS 伪元素用于将特殊的效果添加到某些选择器。比如p:before，p:after，p:first-letter，p:first-line等等。当然有时候我们可能会看到这样的写法也能正确执行：p::before，p::after，p::first-letter，p::first-line,为什么？因为在css3以前对伪类及伪元素的写法都只是单冒号，而css3为了更好的区分开伪类及伪元素就规定对伪元素使用双冒号的写法，显然这个出发点是好的，但是为了兼容不支持css3这种特性的浏览器，我们还是先老实的用单冒号的写法吧。\n\n![rect](/images/伪类.png)\n![rect](/images/伪元素.png)\n\n### 伪类\n```\n//常见伪类\n:first-child,:link,:vistited,:hover,:active:focus,:lang,:not(s),：root等...\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### :first-child :last-child .demo li:not(:last-child) :first-of-type p:last-of-type\np:first-child 指的是P元素，并且P元素是其父元素的第一个子元素，last-child也是\np:first-of-type 选择每个p元素是其父级的第一个p元素\n\np:nth-child(2) 选择每个p元素是其父级的第二个子元素,odd:单数，even:双数  (nth-last-child(2)  从最后一个子项计数)\np:nth-of-type(2) 选择每个p元素是其父级的第二个p元素 (p:nth-last-of-type(2) 从最后一个子项计数)\n### 伪元素\n```\n//常见伪元素\n:first-line，:first-letter，:before，:after，:placeholder,:selection\n```\n\n#### ::first-letter ::first-line ::selection\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/ZDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"_posts/aboutcss.md","raw":"---\ntitle: 常用css\ndate: 2018-05-17 14:07:25\ntags: [css]\ndescription: css记录\n---\n\n## CSS中一个冒号和两个冒号有什么区别  [链接](https://shimo.im/doc/y18XXPd7hicGHr2H/) [链接](http://www.alloyteam.com/2016/05/summary-of-pseudo-classes-and-pseudo-elements/) [important](https://blog.csdn.net/qq_25292481/article/details/52577320)\n\n我们来说说什么是伪类。\n根据w3c，CSS 伪类用于向某些选择器添加特殊的效果。最常见的就是对a元素的一些伪类了，比如a:linked,a:visted,a:hover,a:active等等。\n再说说伪元素。根据w3c，CSS 伪元素用于将特殊的效果添加到某些选择器。比如p:before，p:after，p:first-letter，p:first-line等等。当然有时候我们可能会看到这样的写法也能正确执行：p::before，p::after，p::first-letter，p::first-line,为什么？因为在css3以前对伪类及伪元素的写法都只是单冒号，而css3为了更好的区分开伪类及伪元素就规定对伪元素使用双冒号的写法，显然这个出发点是好的，但是为了兼容不支持css3这种特性的浏览器，我们还是先老实的用单冒号的写法吧。\n\n![rect](/images/伪类.png)\n![rect](/images/伪元素.png)\n\n### 伪类\n```\n//常见伪类\n:first-child,:link,:vistited,:hover,:active:focus,:lang,:not(s),：root等...\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### :first-child :last-child .demo li:not(:last-child) :first-of-type p:last-of-type\np:first-child 指的是P元素，并且P元素是其父元素的第一个子元素，last-child也是\np:first-of-type 选择每个p元素是其父级的第一个p元素\n\np:nth-child(2) 选择每个p元素是其父级的第二个子元素,odd:单数，even:双数  (nth-last-child(2)  从最后一个子项计数)\np:nth-of-type(2) 选择每个p元素是其父级的第二个p元素 (p:nth-last-of-type(2) 从最后一个子项计数)\n### 伪元素\n```\n//常见伪元素\n:first-line，:first-letter，:before，:after，:placeholder,:selection\n```\n\n#### ::first-letter ::first-line ::selection\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/ZDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","slug":"aboutcss","published":1,"updated":"2018-06-12T03:06:41.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiliy7w0000880wggyv09pr6","content":"<h2 id=\"CSS中一个冒号和两个冒号有什么区别-链接-链接-important\"><a href=\"#CSS中一个冒号和两个冒号有什么区别-链接-链接-important\" class=\"headerlink\" title=\"CSS中一个冒号和两个冒号有什么区别  链接 链接 important\"></a>CSS中一个冒号和两个冒号有什么区别  <a href=\"https://shimo.im/doc/y18XXPd7hicGHr2H/\" target=\"_blank\" rel=\"noopener\">链接</a> <a href=\"http://www.alloyteam.com/2016/05/summary-of-pseudo-classes-and-pseudo-elements/\" target=\"_blank\" rel=\"noopener\">链接</a> <a href=\"https://blog.csdn.net/qq_25292481/article/details/52577320\" target=\"_blank\" rel=\"noopener\">important</a></h2><p>我们来说说什么是伪类。<br>根据w3c，CSS 伪类用于向某些选择器添加特殊的效果。最常见的就是对a元素的一些伪类了，比如a:linked,a:visted,a:hover,a:active等等。<br>再说说伪元素。根据w3c，CSS 伪元素用于将特殊的效果添加到某些选择器。比如p:before，p:after，p:first-letter，p:first-line等等。当然有时候我们可能会看到这样的写法也能正确执行：p::before，p::after，p::first-letter，p::first-line,为什么？因为在css3以前对伪类及伪元素的写法都只是单冒号，而css3为了更好的区分开伪类及伪元素就规定对伪元素使用双冒号的写法，显然这个出发点是好的，但是为了兼容不支持css3这种特性的浏览器，我们还是先老实的用单冒号的写法吧。</p>\n<p><img src=\"/images/伪类.png\" alt=\"rect\"><br><img src=\"/images/伪元素.png\" alt=\"rect\"></p>\n<h3 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//常见伪类</span><br><span class=\"line\">:first-child,:link,:vistited,:hover,:active:focus,:lang,:not(s),：root等...</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"first-child-last-child-demo-li-not-last-child-first-of-type-p-last-of-type\"><a href=\"#first-child-last-child-demo-li-not-last-child-first-of-type-p-last-of-type\" class=\"headerlink\" title=\":first-child :last-child .demo li:not(:last-child) :first-of-type p:last-of-type\"></a>:first-child :last-child .demo li:not(:last-child) :first-of-type p:last-of-type</h4><p>p:first-child 指的是P元素，并且P元素是其父元素的第一个子元素，last-child也是<br>p:first-of-type 选择每个p元素是其父级的第一个p元素</p>\n<p>p:nth-child(2) 选择每个p元素是其父级的第二个子元素,odd:单数，even:双数  (nth-last-child(2)  从最后一个子项计数)<br>p:nth-of-type(2) 选择每个p元素是其父级的第二个p元素 (p:nth-last-of-type(2) 从最后一个子项计数)</p>\n<h3 id=\"伪元素\"><a href=\"#伪元素\" class=\"headerlink\" title=\"伪元素\"></a>伪元素</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//常见伪元素</span><br><span class=\"line\">:first-line，:first-letter，:before，:after，:placeholder,:selection</span><br></pre></td></tr></table></figure>\n<h4 id=\"first-letter-first-line-selection\"><a href=\"#first-letter-first-line-selection\" class=\"headerlink\" title=\"::first-letter ::first-line ::selection\"></a>::first-letter ::first-line ::selection</h4><iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/ZDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"CSS中一个冒号和两个冒号有什么区别-链接-链接-important\"><a href=\"#CSS中一个冒号和两个冒号有什么区别-链接-链接-important\" class=\"headerlink\" title=\"CSS中一个冒号和两个冒号有什么区别  链接 链接 important\"></a>CSS中一个冒号和两个冒号有什么区别  <a href=\"https://shimo.im/doc/y18XXPd7hicGHr2H/\" target=\"_blank\" rel=\"noopener\">链接</a> <a href=\"http://www.alloyteam.com/2016/05/summary-of-pseudo-classes-and-pseudo-elements/\" target=\"_blank\" rel=\"noopener\">链接</a> <a href=\"https://blog.csdn.net/qq_25292481/article/details/52577320\" target=\"_blank\" rel=\"noopener\">important</a></h2><p>我们来说说什么是伪类。<br>根据w3c，CSS 伪类用于向某些选择器添加特殊的效果。最常见的就是对a元素的一些伪类了，比如a:linked,a:visted,a:hover,a:active等等。<br>再说说伪元素。根据w3c，CSS 伪元素用于将特殊的效果添加到某些选择器。比如p:before，p:after，p:first-letter，p:first-line等等。当然有时候我们可能会看到这样的写法也能正确执行：p::before，p::after，p::first-letter，p::first-line,为什么？因为在css3以前对伪类及伪元素的写法都只是单冒号，而css3为了更好的区分开伪类及伪元素就规定对伪元素使用双冒号的写法，显然这个出发点是好的，但是为了兼容不支持css3这种特性的浏览器，我们还是先老实的用单冒号的写法吧。</p>\n<p><img src=\"/images/伪类.png\" alt=\"rect\"><br><img src=\"/images/伪元素.png\" alt=\"rect\"></p>\n<h3 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//常见伪类</span><br><span class=\"line\">:first-child,:link,:vistited,:hover,:active:focus,:lang,:not(s),：root等...</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"first-child-last-child-demo-li-not-last-child-first-of-type-p-last-of-type\"><a href=\"#first-child-last-child-demo-li-not-last-child-first-of-type-p-last-of-type\" class=\"headerlink\" title=\":first-child :last-child .demo li:not(:last-child) :first-of-type p:last-of-type\"></a>:first-child :last-child .demo li:not(:last-child) :first-of-type p:last-of-type</h4><p>p:first-child 指的是P元素，并且P元素是其父元素的第一个子元素，last-child也是<br>p:first-of-type 选择每个p元素是其父级的第一个p元素</p>\n<p>p:nth-child(2) 选择每个p元素是其父级的第二个子元素,odd:单数，even:双数  (nth-last-child(2)  从最后一个子项计数)<br>p:nth-of-type(2) 选择每个p元素是其父级的第二个p元素 (p:nth-last-of-type(2) 从最后一个子项计数)</p>\n<h3 id=\"伪元素\"><a href=\"#伪元素\" class=\"headerlink\" title=\"伪元素\"></a>伪元素</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//常见伪元素</span><br><span class=\"line\">:first-line，:first-letter，:before，:after，:placeholder,:selection</span><br></pre></td></tr></table></figure>\n<h4 id=\"first-letter-first-line-selection\"><a href=\"#first-letter-first-line-selection\" class=\"headerlink\" title=\"::first-letter ::first-line ::selection\"></a>::first-letter ::first-line ::selection</h4><iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/ZDZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"marginover问题","date":"2016-05-29T02:41:52.000Z","description":"div嵌套引起的margin-top不起作用。","_content":"\n## 嵌套div中margin-top转移问题的解决办法\n\n\n>在这两个浏览器中，有两个嵌套关系的div，如果外层div的父元素padding值为0，那么内层div的margin-top或者margin-bottom的值会“转移”给外层div。\n\n>原因：盒子没有获得 haslayout  造成 margin-top无效\n\n解决办法：\n1、在父层div加上：overflow:hidden；\n2、把margin-top外边距改成padding-top内边距 ；\n3、父元素产生边距重叠的边有不为 0 的 padding 或宽度不为 0 且 style 不为 none 的 border。父层div加： padding-top: 1px;\n4、让父元素生成一个 block formating context，以下属性可以实现\n>float: left/right\n>position: absolute\n>display: inline-block/table-cell(或其他 table 类型)\n>overflow: hidden/auto\n>父层div加：position: absolute;\n\n## 实例\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jAZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","source":"_posts/marginover.md","raw":"---\ntitle: marginover问题\ndate: 2016-05-29 10:41:52\ntags: [css]\ndescription: div嵌套引起的margin-top不起作用。\n---\n\n## 嵌套div中margin-top转移问题的解决办法\n\n\n>在这两个浏览器中，有两个嵌套关系的div，如果外层div的父元素padding值为0，那么内层div的margin-top或者margin-bottom的值会“转移”给外层div。\n\n>原因：盒子没有获得 haslayout  造成 margin-top无效\n\n解决办法：\n1、在父层div加上：overflow:hidden；\n2、把margin-top外边距改成padding-top内边距 ；\n3、父元素产生边距重叠的边有不为 0 的 padding 或宽度不为 0 且 style 不为 none 的 border。父层div加： padding-top: 1px;\n4、让父元素生成一个 block formating context，以下属性可以实现\n>float: left/right\n>position: absolute\n>display: inline-block/table-cell(或其他 table 类型)\n>overflow: hidden/auto\n>父层div加：position: absolute;\n\n## 实例\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jAZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","slug":"marginover","published":1,"updated":"2018-06-12T03:06:41.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiliy7w2000980wgg7dwacdw","content":"<h2 id=\"嵌套div中margin-top转移问题的解决办法\"><a href=\"#嵌套div中margin-top转移问题的解决办法\" class=\"headerlink\" title=\"嵌套div中margin-top转移问题的解决办法\"></a>嵌套div中margin-top转移问题的解决办法</h2><blockquote>\n<p>在这两个浏览器中，有两个嵌套关系的div，如果外层div的父元素padding值为0，那么内层div的margin-top或者margin-bottom的值会“转移”给外层div。</p>\n</blockquote>\n<blockquote>\n<p>原因：盒子没有获得 haslayout  造成 margin-top无效</p>\n</blockquote>\n<p>解决办法：<br>1、在父层div加上：overflow:hidden；<br>2、把margin-top外边距改成padding-top内边距 ；<br>3、父元素产生边距重叠的边有不为 0 的 padding 或宽度不为 0 且 style 不为 none 的 border。父层div加： padding-top: 1px;<br>4、让父元素生成一个 block formating context，以下属性可以实现</p>\n<blockquote>\n<p>float: left/right<br>position: absolute<br>display: inline-block/table-cell(或其他 table 类型)<br>overflow: hidden/auto<br>父层div加：position: absolute;</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jAZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"嵌套div中margin-top转移问题的解决办法\"><a href=\"#嵌套div中margin-top转移问题的解决办法\" class=\"headerlink\" title=\"嵌套div中margin-top转移问题的解决办法\"></a>嵌套div中margin-top转移问题的解决办法</h2><blockquote>\n<p>在这两个浏览器中，有两个嵌套关系的div，如果外层div的父元素padding值为0，那么内层div的margin-top或者margin-bottom的值会“转移”给外层div。</p>\n</blockquote>\n<blockquote>\n<p>原因：盒子没有获得 haslayout  造成 margin-top无效</p>\n</blockquote>\n<p>解决办法：<br>1、在父层div加上：overflow:hidden；<br>2、把margin-top外边距改成padding-top内边距 ；<br>3、父元素产生边距重叠的边有不为 0 的 padding 或宽度不为 0 且 style 不为 none 的 border。父层div加： padding-top: 1px;<br>4、让父元素生成一个 block formating context，以下属性可以实现</p>\n<blockquote>\n<p>float: left/right<br>position: absolute<br>display: inline-block/table-cell(或其他 table 类型)<br>overflow: hidden/auto<br>父层div加：position: absolute;</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jAZKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>"},{"title":"懒加载","date":"2017-05-02T02:15:41.000Z","description":"网页性能优化已是老生常谈了，其实性能优化最大的关键在于什么呢，影响网页性能罪魁祸首必定是图片加载了。","_content":"\n## 懒加载\n\n网页性能优化已是老生常谈了，其实性能优化最大的关键在于什么呢，影响网页性能罪魁祸首必定是图片加载了。所以图片加载优化势在必行。图片加载优化我们可以选择`懒加载`(可视区域加载)。\n\n懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 src 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。\n\n懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 `src` 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。\n\n## 实现\n\n懒加载的实现主要是判断当前图片是否到了可视区域这一核心逻辑。我们先来整理一下实现思路：\n\n 1. 拿到所有的图片 `img dom` 。\n 2. 遍历每个图片判断当前图片是否到了可视区范围内。\n 3. 如果到了就设置图片的 src 属性。\n 4. 绑定 window 的 `scroll` 事件，对其进行事件监听。\n\n### HTML 结构\n\n```html\n<div class=\"container\">\n    <div class=\"img-area\">\n        <img id=\"first\" data-src=\"./img/ceng.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/data.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/huaji.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/liqi1.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/liqi2.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/steve-jobs.jpg\" alt=\"\">\n    </div>\n</div>\n```\n\n此时 img 标签是没有 src 属性的，我们把真实的图片地址放在一个属性里，这里我们使用 HTML5 的 `data` 属性，将真实地址放在自定义的 `data-src` 中。\n\n### 判断图片是否进入了可视区域\n\n这一逻辑有两种方法，听我娓娓道来。\n\n**方法一**\n\n第一种方法我们通过计算该图片距离 `document` 顶部的高度是否小于当前可视区域相对于 document 顶部高度来判断。\n\n可视区域相对于 document 顶部高度的计算方法：\n\n```javascript\nconst clientHeight = document.documentElement.clientHeight; // 视口高度，也就是窗口的高度。\nconst scrollHeight = document.documentElement.scrollTop + clientHeight; // 滚动条偏移文档顶部的高度（也就是文档从顶部开始到可视区域被抹去的高度） + 视口高度\n```\n\n画了一张图方便理解：\n\n![高度](/images/height.png)\n\n然后就是计算该图片距离文档顶部的高度。有两种方法，第一种方法是通过元素的 `offsetTop` 属性来计算。从上图我们了解到元素的 offsetTop 属性是相对于一个 `position` 为 `非 static ` 的祖先元素，也就是 `child.offsetParent` 。同时需要将祖先元素的 `border` 考虑在内，我们通过`child.offsetParent.clientTop`可以拿到边框厚度。\n\n由此我们得到元素距离文档顶部的高度的计算方法：\n\n```javascript{5}\nfunction getTop(el, initVal) {\n    let top = el.offsetTop + initVal;\n    if (el.offsetParent !== null) {\n        top += el.offsetParent.clientTop;\n        return getTop(el.offsetParent, top);\n    } else {\n        return top;\n    }\n}\n```\n\n这里的这个方法使用了 `尾递归调用` 。可以提高递归性能。当然这里也可以用循环来实现：\n\n```javascript\nfunction getTop(el) {\n    let top = el.offsetTop;\n    var parent = el.offsetParent;\n    while(parent !== null) {\n        top += parent.offsetTop + parent.clientTop;\n        parent = parent.offsetParent;\n    }\n    return top;\n}\n```\n\n第二种方法是使用 `element.getBoundingClientRect()` API 直接得到 top 值。\n\ngetBoundingClientRect 的返回值如下图：\n\n![rect](/images/rect.jpg)\n\n```javascript\nvar first  = document.getElementById('first');\ngetTop(first, 0);  // 130\nconsole.log(first.getBoundingClientRect().top); // 130\n```\n\n于是我们得到判断方法：\n\n```javascript\nfunction inSight(el) {\n    const clientHeight = document.documentElement.clientHeight;\n    const scrollHeight = document.documentElement.scrollTop + clientHeight;\n    // 方法一\n    return getTop(el, 0) < scrollHeight;\n    // 方法二\n    // return el.getBoundingClientRect().top < clientHeight;\n}\n```\n\n接下来就是对每个图片进行判断和赋值。\n\n```javascript\nfunction loadImg(el) {\n    if (!el.src) {\n        el.src = el.dataset.src;\n    }\n}\n\nfunction checkImgs() {\n    const imgs = document.getElementsByTagName('img');\n    Array.from(imgs).forEach(el => {\n        if (inSight(el)) {\n            loadImg(el);\n        }\n    })\n    console.log(count++);\n}\n```\n\n最后给 window 绑定 `onscroll` 事件以及 `onload` 事件：\n\n```javascript\nwindow.addEventListener('scroll', checkImgs, false);\nwindow.onload = checkImgs;\n```\n\n我们知道类似 `scroll` 或 `resize` 这样的事件浏览器可能在很短的时间内触发很多次，为了提高网页性能，我们需要一个**节流**函数来控制函数的多次触发，在一段时间内（如 500ms）只执行一次回调。\n\n```javascript\n/**\n * 持续触发事件，每隔一段时间，只执行一次事件。\n * @param fun 要执行的函数\n * @param delay 延迟时间\n * @param time 在 time 时间内必须执行一次\n */\nfunction throttle(fun, delay, time) {\n    var timeout;\n    var previous = +new Date();\n    return function () {\n        var now = +new Date();\n        var context = this;\n        var args = arguments;\n        clearTimeout(timeout);\n        if (now - previous >= time) {\n            fun.apply(context, args);\n            previous = now;\n        } else {\n            timeout = setTimeout(function () {\n                fun.apply(context, args);\n            }, delay);\n        }\n    }\n}\nwindow.addEventListener('scroll', throttle(checkImgs, 200, 1000), false);\n```\n\n**方法二**\n\nHTML5 有一个新的 `IntersectionObserver` API，它可以自动观察元素是否可见。\n\n主要用法：\n\n```javascript\nvar observer = new IntersectionObserver(callback, option);\n\n// 开始观察\nobserver.observe(document.getElementById('first'));\n\n// 停止观察\nobserver.unobserve(document.getElementById('first'));\n\n// 关闭观察器\nobserver.disconnect();\n```\n\n目标的可见性发生变化时就会调用观察器的 callback。\n\n```javascript\nfunction callback(changes: IntersectionObserverEntry[]) {\n    console.log(changes[0])\n}\n\n// IntersectionObserverEntry\n{\n    time: 29.499999713152647,\n    intersectionRatio: 1,\n    boundingClientRect: DOMRectReadOnly {\n        bottom: 144,\n        height: 4,\n        left: 289,\n        right: 293,\n        top: 140,\n        width: 4,\n        x: 289,\n        y: 140\n    },\n    intersectionRect: DOMRectReadOnly,\n    isIntersecting: true,\n    rootBounds: DOMRectReadOnly,\n    target: img#first\n}\n```\n\n详细释义：\n\n- time： 可见性发生变化的时间，是一个高精度时间戳，单位为毫秒\n- intersectionRatio： 目标元素的可见比例，即 intersectionRect 占 boundingClientRect 的比例，完全可见时为 1 ，完全不可见时小于等于 0\n- boundingClientRect： 目标元素的矩形区域的信息\n- intersectionRect： 目标元素与视口（或根元素）的交叉区域的信息\n- rootBounds： 根元素的矩形区域的信息，getBoundingClientRect() 方法的返回值，如果没有根元素（即直接相对于视口滚动），则返回 null\n- isIntersecting： 是否进入了视口，boolean 值\n- target： 被观察的目标元素，是一个 DOM 节点对象\n\n使用 IntersectionObserver 实现图片懒加载：\n\n```javascript\nfunction query(tag) {\n    return Array.from(document.getElementsByTagName(tag));\n}\nvar observer = new IntersectionObserver(\n    (changes) => {\n        changes.forEach((change) => {\n            if (change.intersectionRatio > 0) {\n                var img = change.target;\n                img.src = img.dataset.src;\n                observer.unobserve(img);\n            }\n        })\n    }\n)\nquery('img').forEach((item) => {\n    observer.observe(item);\n})\n```","source":"_posts/lazyload.md","raw":"---\ntitle: 懒加载\ndate: 2017-05-02 10:15:41\ndescription: 网页性能优化已是老生常谈了，其实性能优化最大的关键在于什么呢，影响网页性能罪魁祸首必定是图片加载了。\n---\n\n## 懒加载\n\n网页性能优化已是老生常谈了，其实性能优化最大的关键在于什么呢，影响网页性能罪魁祸首必定是图片加载了。所以图片加载优化势在必行。图片加载优化我们可以选择`懒加载`(可视区域加载)。\n\n懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 src 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。\n\n懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 `src` 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。\n\n## 实现\n\n懒加载的实现主要是判断当前图片是否到了可视区域这一核心逻辑。我们先来整理一下实现思路：\n\n 1. 拿到所有的图片 `img dom` 。\n 2. 遍历每个图片判断当前图片是否到了可视区范围内。\n 3. 如果到了就设置图片的 src 属性。\n 4. 绑定 window 的 `scroll` 事件，对其进行事件监听。\n\n### HTML 结构\n\n```html\n<div class=\"container\">\n    <div class=\"img-area\">\n        <img id=\"first\" data-src=\"./img/ceng.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/data.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/huaji.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/liqi1.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/liqi2.png\" alt=\"\">\n    </div>\n    <div class=\"img-area\">\n        <img data-src=\"./img/steve-jobs.jpg\" alt=\"\">\n    </div>\n</div>\n```\n\n此时 img 标签是没有 src 属性的，我们把真实的图片地址放在一个属性里，这里我们使用 HTML5 的 `data` 属性，将真实地址放在自定义的 `data-src` 中。\n\n### 判断图片是否进入了可视区域\n\n这一逻辑有两种方法，听我娓娓道来。\n\n**方法一**\n\n第一种方法我们通过计算该图片距离 `document` 顶部的高度是否小于当前可视区域相对于 document 顶部高度来判断。\n\n可视区域相对于 document 顶部高度的计算方法：\n\n```javascript\nconst clientHeight = document.documentElement.clientHeight; // 视口高度，也就是窗口的高度。\nconst scrollHeight = document.documentElement.scrollTop + clientHeight; // 滚动条偏移文档顶部的高度（也就是文档从顶部开始到可视区域被抹去的高度） + 视口高度\n```\n\n画了一张图方便理解：\n\n![高度](/images/height.png)\n\n然后就是计算该图片距离文档顶部的高度。有两种方法，第一种方法是通过元素的 `offsetTop` 属性来计算。从上图我们了解到元素的 offsetTop 属性是相对于一个 `position` 为 `非 static ` 的祖先元素，也就是 `child.offsetParent` 。同时需要将祖先元素的 `border` 考虑在内，我们通过`child.offsetParent.clientTop`可以拿到边框厚度。\n\n由此我们得到元素距离文档顶部的高度的计算方法：\n\n```javascript{5}\nfunction getTop(el, initVal) {\n    let top = el.offsetTop + initVal;\n    if (el.offsetParent !== null) {\n        top += el.offsetParent.clientTop;\n        return getTop(el.offsetParent, top);\n    } else {\n        return top;\n    }\n}\n```\n\n这里的这个方法使用了 `尾递归调用` 。可以提高递归性能。当然这里也可以用循环来实现：\n\n```javascript\nfunction getTop(el) {\n    let top = el.offsetTop;\n    var parent = el.offsetParent;\n    while(parent !== null) {\n        top += parent.offsetTop + parent.clientTop;\n        parent = parent.offsetParent;\n    }\n    return top;\n}\n```\n\n第二种方法是使用 `element.getBoundingClientRect()` API 直接得到 top 值。\n\ngetBoundingClientRect 的返回值如下图：\n\n![rect](/images/rect.jpg)\n\n```javascript\nvar first  = document.getElementById('first');\ngetTop(first, 0);  // 130\nconsole.log(first.getBoundingClientRect().top); // 130\n```\n\n于是我们得到判断方法：\n\n```javascript\nfunction inSight(el) {\n    const clientHeight = document.documentElement.clientHeight;\n    const scrollHeight = document.documentElement.scrollTop + clientHeight;\n    // 方法一\n    return getTop(el, 0) < scrollHeight;\n    // 方法二\n    // return el.getBoundingClientRect().top < clientHeight;\n}\n```\n\n接下来就是对每个图片进行判断和赋值。\n\n```javascript\nfunction loadImg(el) {\n    if (!el.src) {\n        el.src = el.dataset.src;\n    }\n}\n\nfunction checkImgs() {\n    const imgs = document.getElementsByTagName('img');\n    Array.from(imgs).forEach(el => {\n        if (inSight(el)) {\n            loadImg(el);\n        }\n    })\n    console.log(count++);\n}\n```\n\n最后给 window 绑定 `onscroll` 事件以及 `onload` 事件：\n\n```javascript\nwindow.addEventListener('scroll', checkImgs, false);\nwindow.onload = checkImgs;\n```\n\n我们知道类似 `scroll` 或 `resize` 这样的事件浏览器可能在很短的时间内触发很多次，为了提高网页性能，我们需要一个**节流**函数来控制函数的多次触发，在一段时间内（如 500ms）只执行一次回调。\n\n```javascript\n/**\n * 持续触发事件，每隔一段时间，只执行一次事件。\n * @param fun 要执行的函数\n * @param delay 延迟时间\n * @param time 在 time 时间内必须执行一次\n */\nfunction throttle(fun, delay, time) {\n    var timeout;\n    var previous = +new Date();\n    return function () {\n        var now = +new Date();\n        var context = this;\n        var args = arguments;\n        clearTimeout(timeout);\n        if (now - previous >= time) {\n            fun.apply(context, args);\n            previous = now;\n        } else {\n            timeout = setTimeout(function () {\n                fun.apply(context, args);\n            }, delay);\n        }\n    }\n}\nwindow.addEventListener('scroll', throttle(checkImgs, 200, 1000), false);\n```\n\n**方法二**\n\nHTML5 有一个新的 `IntersectionObserver` API，它可以自动观察元素是否可见。\n\n主要用法：\n\n```javascript\nvar observer = new IntersectionObserver(callback, option);\n\n// 开始观察\nobserver.observe(document.getElementById('first'));\n\n// 停止观察\nobserver.unobserve(document.getElementById('first'));\n\n// 关闭观察器\nobserver.disconnect();\n```\n\n目标的可见性发生变化时就会调用观察器的 callback。\n\n```javascript\nfunction callback(changes: IntersectionObserverEntry[]) {\n    console.log(changes[0])\n}\n\n// IntersectionObserverEntry\n{\n    time: 29.499999713152647,\n    intersectionRatio: 1,\n    boundingClientRect: DOMRectReadOnly {\n        bottom: 144,\n        height: 4,\n        left: 289,\n        right: 293,\n        top: 140,\n        width: 4,\n        x: 289,\n        y: 140\n    },\n    intersectionRect: DOMRectReadOnly,\n    isIntersecting: true,\n    rootBounds: DOMRectReadOnly,\n    target: img#first\n}\n```\n\n详细释义：\n\n- time： 可见性发生变化的时间，是一个高精度时间戳，单位为毫秒\n- intersectionRatio： 目标元素的可见比例，即 intersectionRect 占 boundingClientRect 的比例，完全可见时为 1 ，完全不可见时小于等于 0\n- boundingClientRect： 目标元素的矩形区域的信息\n- intersectionRect： 目标元素与视口（或根元素）的交叉区域的信息\n- rootBounds： 根元素的矩形区域的信息，getBoundingClientRect() 方法的返回值，如果没有根元素（即直接相对于视口滚动），则返回 null\n- isIntersecting： 是否进入了视口，boolean 值\n- target： 被观察的目标元素，是一个 DOM 节点对象\n\n使用 IntersectionObserver 实现图片懒加载：\n\n```javascript\nfunction query(tag) {\n    return Array.from(document.getElementsByTagName(tag));\n}\nvar observer = new IntersectionObserver(\n    (changes) => {\n        changes.forEach((change) => {\n            if (change.intersectionRatio > 0) {\n                var img = change.target;\n                img.src = img.dataset.src;\n                observer.unobserve(img);\n            }\n        })\n    }\n)\nquery('img').forEach((item) => {\n    observer.observe(item);\n})\n```","slug":"lazyload","published":1,"updated":"2018-06-12T03:06:41.192Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiliy7w3000c80wgsjgg9qsa","content":"<h2 id=\"懒加载\"><a href=\"#懒加载\" class=\"headerlink\" title=\"懒加载\"></a>懒加载</h2><p>网页性能优化已是老生常谈了，其实性能优化最大的关键在于什么呢，影响网页性能罪魁祸首必定是图片加载了。所以图片加载优化势在必行。图片加载优化我们可以选择<code>懒加载</code>(可视区域加载)。</p>\n<p>懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 src 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。</p>\n<p>懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 <code>src</code> 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>懒加载的实现主要是判断当前图片是否到了可视区域这一核心逻辑。我们先来整理一下实现思路：</p>\n<ol>\n<li>拿到所有的图片 <code>img dom</code> 。</li>\n<li>遍历每个图片判断当前图片是否到了可视区范围内。</li>\n<li>如果到了就设置图片的 src 属性。</li>\n<li>绑定 window 的 <code>scroll</code> 事件，对其进行事件监听。</li>\n</ol>\n<h3 id=\"HTML-结构\"><a href=\"#HTML-结构\" class=\"headerlink\" title=\"HTML 结构\"></a>HTML 结构</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">\"first\"</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/ceng.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/data.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/huaji.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/liqi1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/liqi2.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/steve-jobs.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时 img 标签是没有 src 属性的，我们把真实的图片地址放在一个属性里，这里我们使用 HTML5 的 <code>data</code> 属性，将真实地址放在自定义的 <code>data-src</code> 中。</p>\n<h3 id=\"判断图片是否进入了可视区域\"><a href=\"#判断图片是否进入了可视区域\" class=\"headerlink\" title=\"判断图片是否进入了可视区域\"></a>判断图片是否进入了可视区域</h3><p>这一逻辑有两种方法，听我娓娓道来。</p>\n<p><strong>方法一</strong></p>\n<p>第一种方法我们通过计算该图片距离 <code>document</code> 顶部的高度是否小于当前可视区域相对于 document 顶部高度来判断。</p>\n<p>可视区域相对于 document 顶部高度的计算方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> clientHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight; <span class=\"comment\">// 视口高度，也就是窗口的高度。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> scrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollTop + clientHeight; <span class=\"comment\">// 滚动条偏移文档顶部的高度（也就是文档从顶部开始到可视区域被抹去的高度） + 视口高度</span></span><br></pre></td></tr></table></figure>\n<p>画了一张图方便理解：</p>\n<p><img src=\"/images/height.png\" alt=\"高度\"></p>\n<p>然后就是计算该图片距离文档顶部的高度。有两种方法，第一种方法是通过元素的 <code>offsetTop</code> 属性来计算。从上图我们了解到元素的 offsetTop 属性是相对于一个 <code>position</code> 为 <code>非 static</code> 的祖先元素，也就是 <code>child.offsetParent</code> 。同时需要将祖先元素的 <code>border</code> 考虑在内，我们通过<code>child.offsetParent.clientTop</code>可以拿到边框厚度。</p>\n<p>由此我们得到元素距离文档顶部的高度的计算方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function getTop(el, initVal) &#123;</span><br><span class=\"line\">    let top = el.offsetTop + initVal;</span><br><span class=\"line\">    if (el.offsetParent !== null) &#123;</span><br><span class=\"line\">        top += el.offsetParent.clientTop;</span><br><span class=\"line\">        return getTop(el.offsetParent, top);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        return top;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里的这个方法使用了 <code>尾递归调用</code> 。可以提高递归性能。当然这里也可以用循环来实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getTop</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> top = el.offsetTop;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> parent = el.offsetParent;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(parent !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        top += parent.offsetTop + parent.clientTop;</span><br><span class=\"line\">        parent = parent.offsetParent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第二种方法是使用 <code>element.getBoundingClientRect()</code> API 直接得到 top 值。</p>\n<p>getBoundingClientRect 的返回值如下图：</p>\n<p><img src=\"/images/rect.jpg\" alt=\"rect\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> first  = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'first'</span>);</span><br><span class=\"line\">getTop(first, <span class=\"number\">0</span>);  <span class=\"comment\">// 130</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first.getBoundingClientRect().top); <span class=\"comment\">// 130</span></span><br></pre></td></tr></table></figure>\n<p>于是我们得到判断方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inSight</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> clientHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> scrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollTop + clientHeight;</span><br><span class=\"line\">    <span class=\"comment\">// 方法一</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> getTop(el, <span class=\"number\">0</span>) &lt; scrollHeight;</span><br><span class=\"line\">    <span class=\"comment\">// 方法二</span></span><br><span class=\"line\">    <span class=\"comment\">// return el.getBoundingClientRect().top &lt; clientHeight;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来就是对每个图片进行判断和赋值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadImg</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!el.src) &#123;</span><br><span class=\"line\">        el.src = el.dataset.src;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkImgs</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imgs = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'img'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>.from(imgs).forEach(<span class=\"function\"><span class=\"params\">el</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inSight(el)) &#123;</span><br><span class=\"line\">            loadImg(el);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(count++);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后给 window 绑定 <code>onscroll</code> 事件以及 <code>onload</code> 事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, checkImgs, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = checkImgs;</span><br></pre></td></tr></table></figure>\n<p>我们知道类似 <code>scroll</code> 或 <code>resize</code> 这样的事件浏览器可能在很短的时间内触发很多次，为了提高网页性能，我们需要一个<strong>节流</strong>函数来控制函数的多次触发，在一段时间内（如 500ms）只执行一次回调。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 持续触发事件，每隔一段时间，只执行一次事件。</span></span><br><span class=\"line\"><span class=\"comment\"> * @param fun 要执行的函数</span></span><br><span class=\"line\"><span class=\"comment\"> * @param delay 延迟时间</span></span><br><span class=\"line\"><span class=\"comment\"> * @param time 在 time 时间内必须执行一次</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">fun, delay, time</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> previous = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> now = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> context = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">        clearTimeout(timeout);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (now - previous &gt;= time) &#123;</span><br><span class=\"line\">            fun.apply(context, args);</span><br><span class=\"line\">            previous = now;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            timeout = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                fun.apply(context, args);</span><br><span class=\"line\">            &#125;, delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, throttle(checkImgs, <span class=\"number\">200</span>, <span class=\"number\">1000</span>), <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>方法二</strong></p>\n<p>HTML5 有一个新的 <code>IntersectionObserver</code> API，它可以自动观察元素是否可见。</p>\n<p>主要用法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> observer = <span class=\"keyword\">new</span> IntersectionObserver(callback, option);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开始观察</span></span><br><span class=\"line\">observer.observe(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'first'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 停止观察</span></span><br><span class=\"line\">observer.unobserve(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'first'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭观察器</span></span><br><span class=\"line\">observer.disconnect();</span><br></pre></td></tr></table></figure>\n<p>目标的可见性发生变化时就会调用观察器的 callback。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callback</span>(<span class=\"params\">changes: IntersectionObserverEntry[]</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(changes[<span class=\"number\">0</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// IntersectionObserverEntry</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    time: <span class=\"number\">29.499999713152647</span>,</span><br><span class=\"line\">    intersectionRatio: <span class=\"number\">1</span>,</span><br><span class=\"line\">    boundingClientRect: DOMRectReadOnly &#123;</span><br><span class=\"line\">        bottom: <span class=\"number\">144</span>,</span><br><span class=\"line\">        height: <span class=\"number\">4</span>,</span><br><span class=\"line\">        left: <span class=\"number\">289</span>,</span><br><span class=\"line\">        right: <span class=\"number\">293</span>,</span><br><span class=\"line\">        top: <span class=\"number\">140</span>,</span><br><span class=\"line\">        width: <span class=\"number\">4</span>,</span><br><span class=\"line\">        x: <span class=\"number\">289</span>,</span><br><span class=\"line\">        y: <span class=\"number\">140</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    intersectionRect: DOMRectReadOnly,</span><br><span class=\"line\">    isIntersecting: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    rootBounds: DOMRectReadOnly,</span><br><span class=\"line\">    target: img#first</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>详细释义：</p>\n<ul>\n<li>time： 可见性发生变化的时间，是一个高精度时间戳，单位为毫秒</li>\n<li>intersectionRatio： 目标元素的可见比例，即 intersectionRect 占 boundingClientRect 的比例，完全可见时为 1 ，完全不可见时小于等于 0</li>\n<li>boundingClientRect： 目标元素的矩形区域的信息</li>\n<li>intersectionRect： 目标元素与视口（或根元素）的交叉区域的信息</li>\n<li>rootBounds： 根元素的矩形区域的信息，getBoundingClientRect() 方法的返回值，如果没有根元素（即直接相对于视口滚动），则返回 null</li>\n<li>isIntersecting： 是否进入了视口，boolean 值</li>\n<li>target： 被观察的目标元素，是一个 DOM 节点对象</li>\n</ul>\n<p>使用 IntersectionObserver 实现图片懒加载：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">query</span>(<span class=\"params\">tag</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.from(<span class=\"built_in\">document</span>.getElementsByTagName(tag));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> observer = <span class=\"keyword\">new</span> IntersectionObserver(</span><br><span class=\"line\">    (changes) =&gt; &#123;</span><br><span class=\"line\">        changes.forEach(<span class=\"function\">(<span class=\"params\">change</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (change.intersectionRatio &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> img = change.target;</span><br><span class=\"line\">                img.src = img.dataset.src;</span><br><span class=\"line\">                observer.unobserve(img);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">query(<span class=\"string\">'img'</span>).forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    observer.observe(item);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"懒加载\"><a href=\"#懒加载\" class=\"headerlink\" title=\"懒加载\"></a>懒加载</h2><p>网页性能优化已是老生常谈了，其实性能优化最大的关键在于什么呢，影响网页性能罪魁祸首必定是图片加载了。所以图片加载优化势在必行。图片加载优化我们可以选择<code>懒加载</code>(可视区域加载)。</p>\n<p>懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 src 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。</p>\n<p>懒加载是一种对网页性能优化的方式，它的原理是优先加载在可视区域内的图片，而不一次性加载所以图片。当浏览器滚动，图片进入可视区时再去加载图片。通过设置图片的 <code>src</code> 属性来让浏览器发起图片的请求。当这个属性为空或者没有时，就不会发送请求。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>懒加载的实现主要是判断当前图片是否到了可视区域这一核心逻辑。我们先来整理一下实现思路：</p>\n<ol>\n<li>拿到所有的图片 <code>img dom</code> 。</li>\n<li>遍历每个图片判断当前图片是否到了可视区范围内。</li>\n<li>如果到了就设置图片的 src 属性。</li>\n<li>绑定 window 的 <code>scroll</code> 事件，对其进行事件监听。</li>\n</ol>\n<h3 id=\"HTML-结构\"><a href=\"#HTML-结构\" class=\"headerlink\" title=\"HTML 结构\"></a>HTML 结构</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">\"first\"</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/ceng.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/data.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/huaji.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/liqi1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/liqi2.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-area\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">\"./img/steve-jobs.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时 img 标签是没有 src 属性的，我们把真实的图片地址放在一个属性里，这里我们使用 HTML5 的 <code>data</code> 属性，将真实地址放在自定义的 <code>data-src</code> 中。</p>\n<h3 id=\"判断图片是否进入了可视区域\"><a href=\"#判断图片是否进入了可视区域\" class=\"headerlink\" title=\"判断图片是否进入了可视区域\"></a>判断图片是否进入了可视区域</h3><p>这一逻辑有两种方法，听我娓娓道来。</p>\n<p><strong>方法一</strong></p>\n<p>第一种方法我们通过计算该图片距离 <code>document</code> 顶部的高度是否小于当前可视区域相对于 document 顶部高度来判断。</p>\n<p>可视区域相对于 document 顶部高度的计算方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> clientHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight; <span class=\"comment\">// 视口高度，也就是窗口的高度。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> scrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollTop + clientHeight; <span class=\"comment\">// 滚动条偏移文档顶部的高度（也就是文档从顶部开始到可视区域被抹去的高度） + 视口高度</span></span><br></pre></td></tr></table></figure>\n<p>画了一张图方便理解：</p>\n<p><img src=\"/images/height.png\" alt=\"高度\"></p>\n<p>然后就是计算该图片距离文档顶部的高度。有两种方法，第一种方法是通过元素的 <code>offsetTop</code> 属性来计算。从上图我们了解到元素的 offsetTop 属性是相对于一个 <code>position</code> 为 <code>非 static</code> 的祖先元素，也就是 <code>child.offsetParent</code> 。同时需要将祖先元素的 <code>border</code> 考虑在内，我们通过<code>child.offsetParent.clientTop</code>可以拿到边框厚度。</p>\n<p>由此我们得到元素距离文档顶部的高度的计算方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function getTop(el, initVal) &#123;</span><br><span class=\"line\">    let top = el.offsetTop + initVal;</span><br><span class=\"line\">    if (el.offsetParent !== null) &#123;</span><br><span class=\"line\">        top += el.offsetParent.clientTop;</span><br><span class=\"line\">        return getTop(el.offsetParent, top);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        return top;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里的这个方法使用了 <code>尾递归调用</code> 。可以提高递归性能。当然这里也可以用循环来实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getTop</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> top = el.offsetTop;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> parent = el.offsetParent;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(parent !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        top += parent.offsetTop + parent.clientTop;</span><br><span class=\"line\">        parent = parent.offsetParent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第二种方法是使用 <code>element.getBoundingClientRect()</code> API 直接得到 top 值。</p>\n<p>getBoundingClientRect 的返回值如下图：</p>\n<p><img src=\"/images/rect.jpg\" alt=\"rect\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> first  = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'first'</span>);</span><br><span class=\"line\">getTop(first, <span class=\"number\">0</span>);  <span class=\"comment\">// 130</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first.getBoundingClientRect().top); <span class=\"comment\">// 130</span></span><br></pre></td></tr></table></figure>\n<p>于是我们得到判断方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inSight</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> clientHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> scrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollTop + clientHeight;</span><br><span class=\"line\">    <span class=\"comment\">// 方法一</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> getTop(el, <span class=\"number\">0</span>) &lt; scrollHeight;</span><br><span class=\"line\">    <span class=\"comment\">// 方法二</span></span><br><span class=\"line\">    <span class=\"comment\">// return el.getBoundingClientRect().top &lt; clientHeight;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来就是对每个图片进行判断和赋值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadImg</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!el.src) &#123;</span><br><span class=\"line\">        el.src = el.dataset.src;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkImgs</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imgs = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'img'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>.from(imgs).forEach(<span class=\"function\"><span class=\"params\">el</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inSight(el)) &#123;</span><br><span class=\"line\">            loadImg(el);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(count++);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后给 window 绑定 <code>onscroll</code> 事件以及 <code>onload</code> 事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, checkImgs, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = checkImgs;</span><br></pre></td></tr></table></figure>\n<p>我们知道类似 <code>scroll</code> 或 <code>resize</code> 这样的事件浏览器可能在很短的时间内触发很多次，为了提高网页性能，我们需要一个<strong>节流</strong>函数来控制函数的多次触发，在一段时间内（如 500ms）只执行一次回调。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 持续触发事件，每隔一段时间，只执行一次事件。</span></span><br><span class=\"line\"><span class=\"comment\"> * @param fun 要执行的函数</span></span><br><span class=\"line\"><span class=\"comment\"> * @param delay 延迟时间</span></span><br><span class=\"line\"><span class=\"comment\"> * @param time 在 time 时间内必须执行一次</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">fun, delay, time</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> previous = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> now = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> context = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">        clearTimeout(timeout);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (now - previous &gt;= time) &#123;</span><br><span class=\"line\">            fun.apply(context, args);</span><br><span class=\"line\">            previous = now;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            timeout = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                fun.apply(context, args);</span><br><span class=\"line\">            &#125;, delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, throttle(checkImgs, <span class=\"number\">200</span>, <span class=\"number\">1000</span>), <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>方法二</strong></p>\n<p>HTML5 有一个新的 <code>IntersectionObserver</code> API，它可以自动观察元素是否可见。</p>\n<p>主要用法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> observer = <span class=\"keyword\">new</span> IntersectionObserver(callback, option);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开始观察</span></span><br><span class=\"line\">observer.observe(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'first'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 停止观察</span></span><br><span class=\"line\">observer.unobserve(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'first'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭观察器</span></span><br><span class=\"line\">observer.disconnect();</span><br></pre></td></tr></table></figure>\n<p>目标的可见性发生变化时就会调用观察器的 callback。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callback</span>(<span class=\"params\">changes: IntersectionObserverEntry[]</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(changes[<span class=\"number\">0</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// IntersectionObserverEntry</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    time: <span class=\"number\">29.499999713152647</span>,</span><br><span class=\"line\">    intersectionRatio: <span class=\"number\">1</span>,</span><br><span class=\"line\">    boundingClientRect: DOMRectReadOnly &#123;</span><br><span class=\"line\">        bottom: <span class=\"number\">144</span>,</span><br><span class=\"line\">        height: <span class=\"number\">4</span>,</span><br><span class=\"line\">        left: <span class=\"number\">289</span>,</span><br><span class=\"line\">        right: <span class=\"number\">293</span>,</span><br><span class=\"line\">        top: <span class=\"number\">140</span>,</span><br><span class=\"line\">        width: <span class=\"number\">4</span>,</span><br><span class=\"line\">        x: <span class=\"number\">289</span>,</span><br><span class=\"line\">        y: <span class=\"number\">140</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    intersectionRect: DOMRectReadOnly,</span><br><span class=\"line\">    isIntersecting: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    rootBounds: DOMRectReadOnly,</span><br><span class=\"line\">    target: img#first</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>详细释义：</p>\n<ul>\n<li>time： 可见性发生变化的时间，是一个高精度时间戳，单位为毫秒</li>\n<li>intersectionRatio： 目标元素的可见比例，即 intersectionRect 占 boundingClientRect 的比例，完全可见时为 1 ，完全不可见时小于等于 0</li>\n<li>boundingClientRect： 目标元素的矩形区域的信息</li>\n<li>intersectionRect： 目标元素与视口（或根元素）的交叉区域的信息</li>\n<li>rootBounds： 根元素的矩形区域的信息，getBoundingClientRect() 方法的返回值，如果没有根元素（即直接相对于视口滚动），则返回 null</li>\n<li>isIntersecting： 是否进入了视口，boolean 值</li>\n<li>target： 被观察的目标元素，是一个 DOM 节点对象</li>\n</ul>\n<p>使用 IntersectionObserver 实现图片懒加载：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">query</span>(<span class=\"params\">tag</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.from(<span class=\"built_in\">document</span>.getElementsByTagName(tag));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> observer = <span class=\"keyword\">new</span> IntersectionObserver(</span><br><span class=\"line\">    (changes) =&gt; &#123;</span><br><span class=\"line\">        changes.forEach(<span class=\"function\">(<span class=\"params\">change</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (change.intersectionRatio &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> img = change.target;</span><br><span class=\"line\">                img.src = img.dataset.src;</span><br><span class=\"line\">                observer.unobserve(img);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">query(<span class=\"string\">'img'</span>).forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    observer.observe(item);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"svn","date":"2016-05-18T02:54:27.000Z","description":"svn更新，清理时出现乱码解决方案。","_content":"\n### svn 更新失败\n\n#### [参考博客](https://blog.csdn.net/allen_a/article/details/51330739)\n\n1. 下载 sqlite数据库工具，sqlite3.exe下载地址：sqlite官网[链接](http://www.sqlite.org/download.html),我这里是windows操作系统，因此下载 Precompiled Binaries for Windows版本的压缩包即可(ps:现在下载的都是sqlite.dll,所以使用不了了，我已经放到自己百度云,[链接](https://pan.baidu.com/s/15w9SKYL_9hUVDncJOR_TzA))\n\n2. 将下载到的 sqlite3.exe文件复制到本地磁盘的某个目录下,然后找到本地svn文件库下.svn/wc.db文件， 将其复制到该目录下\n\n3. 点击开始 -> 运行 -> cmd，打开cmd窗口，输入以下命令：\n   sqlite3 wc.db\n   select* from work_queue;\n   如果此时查询有记录，则执行以下命令：\n   delete from work_queue;\n\n4. 将wc.db文件，覆盖本地svn文件库目录 .svn目录下的wc.db文件\n\n5. 然后再右键点击本地svn文件库目录,执行clean up,就能够正常清理了。(如果清理失败的话，请勾选“解锁”)\n![clean](/images/svn/clean.png)","source":"_posts/svn.md","raw":"---\ntitle: svn\ndate: 2016-05-18 10:54:27\ntags: [tools]\ndescription: svn更新，清理时出现乱码解决方案。\n---\n\n### svn 更新失败\n\n#### [参考博客](https://blog.csdn.net/allen_a/article/details/51330739)\n\n1. 下载 sqlite数据库工具，sqlite3.exe下载地址：sqlite官网[链接](http://www.sqlite.org/download.html),我这里是windows操作系统，因此下载 Precompiled Binaries for Windows版本的压缩包即可(ps:现在下载的都是sqlite.dll,所以使用不了了，我已经放到自己百度云,[链接](https://pan.baidu.com/s/15w9SKYL_9hUVDncJOR_TzA))\n\n2. 将下载到的 sqlite3.exe文件复制到本地磁盘的某个目录下,然后找到本地svn文件库下.svn/wc.db文件， 将其复制到该目录下\n\n3. 点击开始 -> 运行 -> cmd，打开cmd窗口，输入以下命令：\n   sqlite3 wc.db\n   select* from work_queue;\n   如果此时查询有记录，则执行以下命令：\n   delete from work_queue;\n\n4. 将wc.db文件，覆盖本地svn文件库目录 .svn目录下的wc.db文件\n\n5. 然后再右键点击本地svn文件库目录,执行clean up,就能够正常清理了。(如果清理失败的话，请勾选“解锁”)\n![clean](/images/svn/clean.png)","slug":"svn","published":1,"updated":"2018-06-12T03:06:41.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiliy7w7000d80wgfsm5x662","content":"<h3 id=\"svn-更新失败\"><a href=\"#svn-更新失败\" class=\"headerlink\" title=\"svn 更新失败\"></a>svn 更新失败</h3><h4 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a><a href=\"https://blog.csdn.net/allen_a/article/details/51330739\" target=\"_blank\" rel=\"noopener\">参考博客</a></h4><ol>\n<li><p>下载 sqlite数据库工具，sqlite3.exe下载地址：sqlite官网<a href=\"http://www.sqlite.org/download.html\" target=\"_blank\" rel=\"noopener\">链接</a>,我这里是windows操作系统，因此下载 Precompiled Binaries for Windows版本的压缩包即可(ps:现在下载的都是sqlite.dll,所以使用不了了，我已经放到自己百度云,<a href=\"https://pan.baidu.com/s/15w9SKYL_9hUVDncJOR_TzA\" target=\"_blank\" rel=\"noopener\">链接</a>)</p>\n</li>\n<li><p>将下载到的 sqlite3.exe文件复制到本地磁盘的某个目录下,然后找到本地svn文件库下.svn/wc.db文件， 将其复制到该目录下</p>\n</li>\n<li><p>点击开始 -&gt; 运行 -&gt; cmd，打开cmd窗口，输入以下命令：<br>sqlite3 wc.db<br>select* from work_queue;<br>如果此时查询有记录，则执行以下命令：<br>delete from work_queue;</p>\n</li>\n<li><p>将wc.db文件，覆盖本地svn文件库目录 .svn目录下的wc.db文件</p>\n</li>\n<li><p>然后再右键点击本地svn文件库目录,执行clean up,就能够正常清理了。(如果清理失败的话，请勾选“解锁”)<br><img src=\"/images/svn/clean.png\" alt=\"clean\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"svn-更新失败\"><a href=\"#svn-更新失败\" class=\"headerlink\" title=\"svn 更新失败\"></a>svn 更新失败</h3><h4 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a><a href=\"https://blog.csdn.net/allen_a/article/details/51330739\" target=\"_blank\" rel=\"noopener\">参考博客</a></h4><ol>\n<li><p>下载 sqlite数据库工具，sqlite3.exe下载地址：sqlite官网<a href=\"http://www.sqlite.org/download.html\" target=\"_blank\" rel=\"noopener\">链接</a>,我这里是windows操作系统，因此下载 Precompiled Binaries for Windows版本的压缩包即可(ps:现在下载的都是sqlite.dll,所以使用不了了，我已经放到自己百度云,<a href=\"https://pan.baidu.com/s/15w9SKYL_9hUVDncJOR_TzA\" target=\"_blank\" rel=\"noopener\">链接</a>)</p>\n</li>\n<li><p>将下载到的 sqlite3.exe文件复制到本地磁盘的某个目录下,然后找到本地svn文件库下.svn/wc.db文件， 将其复制到该目录下</p>\n</li>\n<li><p>点击开始 -&gt; 运行 -&gt; cmd，打开cmd窗口，输入以下命令：<br>sqlite3 wc.db<br>select* from work_queue;<br>如果此时查询有记录，则执行以下命令：<br>delete from work_queue;</p>\n</li>\n<li><p>将wc.db文件，覆盖本地svn文件库目录 .svn目录下的wc.db文件</p>\n</li>\n<li><p>然后再右键点击本地svn文件库目录,执行clean up,就能够正常清理了。(如果清理失败的话，请勾选“解锁”)<br><img src=\"/images/svn/clean.png\" alt=\"clean\"></p>\n</li>\n</ol>\n"},{"title":"网站导航","date":"2018-04-24T09:01:39.000Z","description":"网站导航","_content":"# 学习网站\n\n## **导航链接**\n  #### [大前端网站](http://www.daqianduan.com/nav)  \n  #### [腾讯出品导航](http://www.alloyteam.com/nav/)\n  [前端库](https://www.awesomes.cn/)  \n  [印记中文文档](https://docschina.org/#build)\n  \n## 文档\n #### [MDN文档](https://developer.mozilla.org/zh-CN/docs/Web)  \n #### [node文档接口](https://ecitlm.github.io/SpliderApi/#/)\n #### [webpack文档](http://webpack.github.io/docs/code-splitting.html)\n [在线工具](http://tool.lu/)\n\n## 部门网站  \n  #### [百度fex前端研发部](https://note.youdao.com/)\n  #### [v2ex](https://www.v2ex.com/?tab=tech)\n  [hackernews](https://news.ycombinator.com/)  \n  [腾云阁](https://www.qcloud.com/community/2)\n  [前端网](https://www.qdfuns.com/)\n  [前端里](http://www.yyyweb.com/)\n  [segmenttfault网址](https://segmentfault.com/news)\n  [华为心声社区](http://xinsheng.huawei.com/cn/index/guest.html)\n  [stackoverflow](https://stackoverflow.com/)\n  [淘宝fed](http://taobaofed.org/)\n  [淘宝fed](http://www.aliued.com/?p=3130)\n  \n    \n  \n## 博客\n [伯乐在线](http://web.jobbole.com/)\n [阮一峰博客](http://www.ruanyifeng.com/blog/developer/) \n [张鑫旭](http://www.zhangxinxu.com/)\n[白色樟树](http://www.cnblogs.com/PeunZhang/p/3407453.html)\n[廖雪峰](http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000)  \n[梦想天空](http://www.cnblogs.com/lhb25/)  \n[掘金翻译计划](https://github.com/xitu/gold-miner/blob/master/front-end.md)\n[掘金翻译计划1](https://github.com/xitu/gold-miner )   [前端技能汇总 ](https://github.com/JacksonTian/fks)\n    \n **hexo**\n   [我的博客](https://pzhicong.github.io/)\n     [根据这个来的](https://www.cnblogs.com/fengxiongZz/p/7707219.html)\n   [涂振宇博客](http://imteo.com/)\n   [hexo在线博客例子](http://www.jellyleo.com/categories/index.html)\n  [hexo在线博客](http://obkoro1.com/)\n   [hexo文档](https://hexo.io/zh-cn/docs/index.html)\n   \n   \n ## css\n \n  #### [CSS五种方式实现Footer置底](http://liaokeyu.com/%E6%8A%80%E6%9C%AF/2017/01/06/%E8%AF%91-CSS%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0Footer%E7%BD%AE%E5%BA%95.html)  \n [布局grid&&flex](https://juejin.im/post/599970f4518825243a78b9d5 )  \n  [淘宝&&网易布局标准](http://www.cnblogs.com/lyzg/p/4877277.html#)  \n  [css经典比翼双飞](https://brianway.github.io/2017/05/18/css-layout-classical-problems/)   \n  [CSS 高级技巧汇总](https://segmentfault.com/a/1190000003936841)  \n [FLEX css3手册](http://www.css88.com/book/css/properties/flex/flex.htm)  \n   [BEM命名](https://www.w3cplus.com/css/mindbemding-getting-your-head-round-bem-syntax.html)\n    [css reset](https://github.com/necolas/normalize.css)\n    \n **BEC**\n    [BFC](http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html)\n    [BFC](http://www.jianshu.com/p/76484dff1cb5)\n    [BFC](http://web.jobbole.com/84808/)\n  \n  **进度条**\n \n  [环形进度条](http://www.cnblogs.com/jr1993/p/4677921.html)\n  [环形进度条](http://blog.csdn.net/angeljsl/article/details/51208960)\n  [H5环形进度条(canvas)](http://blog.csdn.net/qq_21058391/article/details/76691047)\n [微信小程序环形进度条（canvas）](http://www.jianshu.com/p/eab547396163 )\n  [(svg)](http://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/)\n   [css clip](http://www.zhangxinxu.com/wordpress/2011/04/css-clip-rect/)\n  [自己的](https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A1.html)\n  [自己的](https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A11.html)  \n  \n[理解CSS3 max/min-content](http://www.zhangxinxu.com/wordpress/2016/05/css3-width-max-contnet-min-content-fit-content/)\n\n**css动画**   \n  [动画库](http://nec.netease.com/library/category/#animation)\n  [自己编写的动画库](https://segmentfault.com/a/1190000010640099)\n [动画](https://segmentfault.com/a/1190000010427231 )\n\n  \n  ## js\n  [underscore源码解析](https://yoyoyohamapi.gitbooks.io/undersercore-analysis/content/base/%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81.html)  \n  [undercode中文文档](http://www.css88.com/doc/underscore/)  \n  [性能performance](https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming)  \n   [rxjs](https://zhuanlan.zhihu.com/p/25467376 )  \n \n   [redux](http://www.redux.org.cn/docs/introduction/Examples.html)\n   [redux阮一峰](http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html)\n   **es6**\n   [阮一峰es6入门](http://es6.ruanyifeng.com/#README)\n   [babel](https://babeljs.io/)\n   [babel中文](http://babeljs.cn/)\n   [react](http://react.yubolun.com/docs/state-and-lifecycle.html)\n   [用过的算法记录](https://juejin.im/post/5958bac35188250d892f5c91)  \n     [es8](https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md) \n     [es7装饰器](http://web.jobbole.com/84247/)  \n     **图片上传预览**\n        [上传](http://wangyong31893189.iteye.com/blog/1695472)\n [图片上传](http://www.cnblogs.com/shinefon-2-2/p/5901330.html)\n  [图片上传旋转](https://github.com/xiangpaopao/blog/issues/7)\n[图片本地剪裁上传](https://segmentfault.com/a/1190000000754560)\n  \n  **模块加载 cmd amd**\n  [require 与import区别](https://www.zhihu.com/question/56820346/answer/150743994)\n  [链接](http://blog.csdn.net/jackwen110200/article/details/52105493)\n  [link](http://blog.csdn.net/u014445339/article/details/55517770)  \n  \n  [项目用到的gulp](https://juejin.im/entry/55c8dbb160b22a3ebdf34d57)  \n   [chrome 调试](http://blog.csdn.net/becoming_okami/article/details/52290967)  \n   [http挂起百度经验](http://fex.baidu.com/blog/2015/01/chrome-stalled-problem-resolving-process/)  \n   [vue双向绑定](http://www.cnblogs.com/canfoo/p/6891868.html)\n    [vue双向绑定](https://segmentfault.com/a/1190000006599500)\n   \n   **webpack**\n      [webpack](https://www.jianshu.com/p/42e11515c10f)\n  [vue-cli webpack配置分享](https://segmentfault.com/a/1190000008644830)\n  [Wepack+React小书](https://fakefish.github.io/react-webpack-cookbook/Automatic-browser-refresh.html)\n  [Webpack官网](http://webpack.github.io/)\n  [Webpack怎么用](http://segmentfault.com/a/1190000002552008#articleHeader7)  \n  **react**\n  [react.js中文文档](http://reactjs.cn/) \n[react.js入门教程(gitbook)](https://hulufei.gitbooks.io/react-tutorial/content/introduction.html) \n [阮一峰](http://www.ruanyifeng.com/blog/2015/03/react.html) \n[react.js视频教程](http://react.nodejs-china.org/t/reactjs/584) \n  \n  \n  **渲染domLoad**\n     [DOMContentLoaded](http://www.cnblogs.com/caizhenbo/p/6679478.html)\n   [掘金](https://juejin.im/post/59c60691518825396f4f71a1)\n  [渲染树](https://segmentfault.com/a/1190000008550336)\n  [timeline](http://www.w3cplus.com/performance/chrome-timeline.html)\n  \n[css硬件加速](https://www.cnblogs.com/PeunZhang/p/3510083.html)  \n  [chrome performance面板](https://segmentfault.com/a/1190000011516068)  \n   [requestAnimFrame绘制](http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%E5%8A%A8%E7%94%BB%E7%AE%97%E6%B3%95/)\n   [requestAnimFrame绘制1](http://javascript.ruanyifeng.com/htmlapi/requestanimationframe.html)  \n    [淘宝前后端分离方案](http://2014.jsconf.cn/slides/herman-taobaoweb/index.html#/95)  \n    [onbeforeunload](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onbeforeunload)  \n  [clientHeight文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight)  \n[图片懒加载](http://hentaicracker.github.io/2016/liqi.html)  \n  [移动深坑](https://github.com/maxzhang/maxzhang.github.com/issues/2)  \n[面试不合格系列](https://juejin.im/post/58f558efac502e006c3e5c97)  \n[前后端渲染](https://segmentfault.com/q/1010000009359167)  \n**断点续传（网盘）**\n[最后使用这个resumable.js](https://github.com/23/resumable.js)\n[断点上传（拖拽效果）](http://blog.csdn.net/zph1234/article/details/50577885)\n[断点续传](http://www.zhangxinxu.com/wordpress/2013/11/xmlhttprequest-ajax-localstorage-%E6%96%87%E4%BB%B6%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/)\n[断点续传](https://www.centos.bz/2015/09/nginx-upload-module-multipart-form-data-resumable/ )\n[断点续传](http://www.cnblogs.com/mywebnumber/p/5953398.html)\n[断点续传](https://github.com/moyuyc/moUploader)\n[断点续传](https://segmentfault.com/a/1190000006909562)\n  ## nodejs\n  [npm用法](http://blog.csdn.net/u011240877/article/details/76582670)  \n  [搜包](https://www.npmjs.com/)  \n [nvm node多版本控制](http://www.jianshu.com/p/28bca6529150)  \n [koa2起步到填坑](http://www.jianshu.com/p/6b816c609669)  \n   [pm2](http://www.cnblogs.com/jaxu/p/5193643.html)   \n   [node.js博客项目](https://github.com/nswbmw/N-blog/wiki/%E7%AC%AC1%E7%AB%A0--%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%9A%E5%AE%A2)  \n      [记得要看  async.js ](http://blog.csdn.net/fansongy/article/details/42156109)  \n  **mogodb**\n     [最新看到的](http://www.cnblogs.com/aaronjs/p/4445543.html)\n     [link](http://www.veryhuo.com/down/html/mongodb.html)\n     [link](http://downloads.mongodb.org/win32/mongodb-win32-x86_64-2.6.6.zip)\n     [link](http://jingyan.baidu.com/article/d5c4b52bef7268da560dc5f8.html)\n     [link](http://www.cnblogs.com/flyoung2008/archive/2012/07/18/2597269.html)\n\n \n ## tools\n [在线编辑](https://codepen.io/jorisvanr/pen/aLbwze)\n \n **vpn地址翻墙**\n [翻墙](http://free-ss.tk/)\n [翻墙注册](https://tuziss.top/user)  \n [ps下载](http://blog.sina.com.cn/s/blog_15f375ee90102xmu7.html)  \n [夜神虚拟器](https://www.yeshen.com/blog/reactnativeyeshen/)\n [微信公众号文档](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1445241432)  \n[mac网站photoshop](http://xclient.info/s/adobe-photoshop-cc.html?_=2750326cc66f92704763f6236df260bc#history_versions)  \n[程序员去哪儿](https://activity.lagou.com/topic/javabj.html)  \n[更好运用chrome](http://jeffjade.com/2017/05/01/122-how-to-better-use-google_chrome/?from=juejin)  \n[图片压缩](https://tinypng.com/)\n[简历](http://cv.heeroluo.net/)\n[二维码生成](https://cli.im/)  \n[css揭秘下载地址](http://pan.baidu.com/s/1jI9AqEy?errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&)  \n[chrome://about/](chrome://about/)  \n[git命令行操作](http://www.cnblogs.com/tugenhua0707/p/4050072.html)  \n[网页简历](http://www.linqing07.com/resume.html)\n[前端面试](http://www.jobui.com/mianshiti/it/web/5066/)\n\n","source":"_posts/website.md","raw":"---\ntitle: 网站导航\ndate: 2018-04-24 17:01:39\ntags:\ndescription: 网站导航\n---\n# 学习网站\n\n## **导航链接**\n  #### [大前端网站](http://www.daqianduan.com/nav)  \n  #### [腾讯出品导航](http://www.alloyteam.com/nav/)\n  [前端库](https://www.awesomes.cn/)  \n  [印记中文文档](https://docschina.org/#build)\n  \n## 文档\n #### [MDN文档](https://developer.mozilla.org/zh-CN/docs/Web)  \n #### [node文档接口](https://ecitlm.github.io/SpliderApi/#/)\n #### [webpack文档](http://webpack.github.io/docs/code-splitting.html)\n [在线工具](http://tool.lu/)\n\n## 部门网站  \n  #### [百度fex前端研发部](https://note.youdao.com/)\n  #### [v2ex](https://www.v2ex.com/?tab=tech)\n  [hackernews](https://news.ycombinator.com/)  \n  [腾云阁](https://www.qcloud.com/community/2)\n  [前端网](https://www.qdfuns.com/)\n  [前端里](http://www.yyyweb.com/)\n  [segmenttfault网址](https://segmentfault.com/news)\n  [华为心声社区](http://xinsheng.huawei.com/cn/index/guest.html)\n  [stackoverflow](https://stackoverflow.com/)\n  [淘宝fed](http://taobaofed.org/)\n  [淘宝fed](http://www.aliued.com/?p=3130)\n  \n    \n  \n## 博客\n [伯乐在线](http://web.jobbole.com/)\n [阮一峰博客](http://www.ruanyifeng.com/blog/developer/) \n [张鑫旭](http://www.zhangxinxu.com/)\n[白色樟树](http://www.cnblogs.com/PeunZhang/p/3407453.html)\n[廖雪峰](http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000)  \n[梦想天空](http://www.cnblogs.com/lhb25/)  \n[掘金翻译计划](https://github.com/xitu/gold-miner/blob/master/front-end.md)\n[掘金翻译计划1](https://github.com/xitu/gold-miner )   [前端技能汇总 ](https://github.com/JacksonTian/fks)\n    \n **hexo**\n   [我的博客](https://pzhicong.github.io/)\n     [根据这个来的](https://www.cnblogs.com/fengxiongZz/p/7707219.html)\n   [涂振宇博客](http://imteo.com/)\n   [hexo在线博客例子](http://www.jellyleo.com/categories/index.html)\n  [hexo在线博客](http://obkoro1.com/)\n   [hexo文档](https://hexo.io/zh-cn/docs/index.html)\n   \n   \n ## css\n \n  #### [CSS五种方式实现Footer置底](http://liaokeyu.com/%E6%8A%80%E6%9C%AF/2017/01/06/%E8%AF%91-CSS%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0Footer%E7%BD%AE%E5%BA%95.html)  \n [布局grid&&flex](https://juejin.im/post/599970f4518825243a78b9d5 )  \n  [淘宝&&网易布局标准](http://www.cnblogs.com/lyzg/p/4877277.html#)  \n  [css经典比翼双飞](https://brianway.github.io/2017/05/18/css-layout-classical-problems/)   \n  [CSS 高级技巧汇总](https://segmentfault.com/a/1190000003936841)  \n [FLEX css3手册](http://www.css88.com/book/css/properties/flex/flex.htm)  \n   [BEM命名](https://www.w3cplus.com/css/mindbemding-getting-your-head-round-bem-syntax.html)\n    [css reset](https://github.com/necolas/normalize.css)\n    \n **BEC**\n    [BFC](http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html)\n    [BFC](http://www.jianshu.com/p/76484dff1cb5)\n    [BFC](http://web.jobbole.com/84808/)\n  \n  **进度条**\n \n  [环形进度条](http://www.cnblogs.com/jr1993/p/4677921.html)\n  [环形进度条](http://blog.csdn.net/angeljsl/article/details/51208960)\n  [H5环形进度条(canvas)](http://blog.csdn.net/qq_21058391/article/details/76691047)\n [微信小程序环形进度条（canvas）](http://www.jianshu.com/p/eab547396163 )\n  [(svg)](http://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/)\n   [css clip](http://www.zhangxinxu.com/wordpress/2011/04/css-clip-rect/)\n  [自己的](https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A1.html)\n  [自己的](https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A11.html)  \n  \n[理解CSS3 max/min-content](http://www.zhangxinxu.com/wordpress/2016/05/css3-width-max-contnet-min-content-fit-content/)\n\n**css动画**   \n  [动画库](http://nec.netease.com/library/category/#animation)\n  [自己编写的动画库](https://segmentfault.com/a/1190000010640099)\n [动画](https://segmentfault.com/a/1190000010427231 )\n\n  \n  ## js\n  [underscore源码解析](https://yoyoyohamapi.gitbooks.io/undersercore-analysis/content/base/%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81.html)  \n  [undercode中文文档](http://www.css88.com/doc/underscore/)  \n  [性能performance](https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming)  \n   [rxjs](https://zhuanlan.zhihu.com/p/25467376 )  \n \n   [redux](http://www.redux.org.cn/docs/introduction/Examples.html)\n   [redux阮一峰](http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html)\n   **es6**\n   [阮一峰es6入门](http://es6.ruanyifeng.com/#README)\n   [babel](https://babeljs.io/)\n   [babel中文](http://babeljs.cn/)\n   [react](http://react.yubolun.com/docs/state-and-lifecycle.html)\n   [用过的算法记录](https://juejin.im/post/5958bac35188250d892f5c91)  \n     [es8](https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md) \n     [es7装饰器](http://web.jobbole.com/84247/)  \n     **图片上传预览**\n        [上传](http://wangyong31893189.iteye.com/blog/1695472)\n [图片上传](http://www.cnblogs.com/shinefon-2-2/p/5901330.html)\n  [图片上传旋转](https://github.com/xiangpaopao/blog/issues/7)\n[图片本地剪裁上传](https://segmentfault.com/a/1190000000754560)\n  \n  **模块加载 cmd amd**\n  [require 与import区别](https://www.zhihu.com/question/56820346/answer/150743994)\n  [链接](http://blog.csdn.net/jackwen110200/article/details/52105493)\n  [link](http://blog.csdn.net/u014445339/article/details/55517770)  \n  \n  [项目用到的gulp](https://juejin.im/entry/55c8dbb160b22a3ebdf34d57)  \n   [chrome 调试](http://blog.csdn.net/becoming_okami/article/details/52290967)  \n   [http挂起百度经验](http://fex.baidu.com/blog/2015/01/chrome-stalled-problem-resolving-process/)  \n   [vue双向绑定](http://www.cnblogs.com/canfoo/p/6891868.html)\n    [vue双向绑定](https://segmentfault.com/a/1190000006599500)\n   \n   **webpack**\n      [webpack](https://www.jianshu.com/p/42e11515c10f)\n  [vue-cli webpack配置分享](https://segmentfault.com/a/1190000008644830)\n  [Wepack+React小书](https://fakefish.github.io/react-webpack-cookbook/Automatic-browser-refresh.html)\n  [Webpack官网](http://webpack.github.io/)\n  [Webpack怎么用](http://segmentfault.com/a/1190000002552008#articleHeader7)  \n  **react**\n  [react.js中文文档](http://reactjs.cn/) \n[react.js入门教程(gitbook)](https://hulufei.gitbooks.io/react-tutorial/content/introduction.html) \n [阮一峰](http://www.ruanyifeng.com/blog/2015/03/react.html) \n[react.js视频教程](http://react.nodejs-china.org/t/reactjs/584) \n  \n  \n  **渲染domLoad**\n     [DOMContentLoaded](http://www.cnblogs.com/caizhenbo/p/6679478.html)\n   [掘金](https://juejin.im/post/59c60691518825396f4f71a1)\n  [渲染树](https://segmentfault.com/a/1190000008550336)\n  [timeline](http://www.w3cplus.com/performance/chrome-timeline.html)\n  \n[css硬件加速](https://www.cnblogs.com/PeunZhang/p/3510083.html)  \n  [chrome performance面板](https://segmentfault.com/a/1190000011516068)  \n   [requestAnimFrame绘制](http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%E5%8A%A8%E7%94%BB%E7%AE%97%E6%B3%95/)\n   [requestAnimFrame绘制1](http://javascript.ruanyifeng.com/htmlapi/requestanimationframe.html)  \n    [淘宝前后端分离方案](http://2014.jsconf.cn/slides/herman-taobaoweb/index.html#/95)  \n    [onbeforeunload](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onbeforeunload)  \n  [clientHeight文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight)  \n[图片懒加载](http://hentaicracker.github.io/2016/liqi.html)  \n  [移动深坑](https://github.com/maxzhang/maxzhang.github.com/issues/2)  \n[面试不合格系列](https://juejin.im/post/58f558efac502e006c3e5c97)  \n[前后端渲染](https://segmentfault.com/q/1010000009359167)  \n**断点续传（网盘）**\n[最后使用这个resumable.js](https://github.com/23/resumable.js)\n[断点上传（拖拽效果）](http://blog.csdn.net/zph1234/article/details/50577885)\n[断点续传](http://www.zhangxinxu.com/wordpress/2013/11/xmlhttprequest-ajax-localstorage-%E6%96%87%E4%BB%B6%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/)\n[断点续传](https://www.centos.bz/2015/09/nginx-upload-module-multipart-form-data-resumable/ )\n[断点续传](http://www.cnblogs.com/mywebnumber/p/5953398.html)\n[断点续传](https://github.com/moyuyc/moUploader)\n[断点续传](https://segmentfault.com/a/1190000006909562)\n  ## nodejs\n  [npm用法](http://blog.csdn.net/u011240877/article/details/76582670)  \n  [搜包](https://www.npmjs.com/)  \n [nvm node多版本控制](http://www.jianshu.com/p/28bca6529150)  \n [koa2起步到填坑](http://www.jianshu.com/p/6b816c609669)  \n   [pm2](http://www.cnblogs.com/jaxu/p/5193643.html)   \n   [node.js博客项目](https://github.com/nswbmw/N-blog/wiki/%E7%AC%AC1%E7%AB%A0--%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%9A%E5%AE%A2)  \n      [记得要看  async.js ](http://blog.csdn.net/fansongy/article/details/42156109)  \n  **mogodb**\n     [最新看到的](http://www.cnblogs.com/aaronjs/p/4445543.html)\n     [link](http://www.veryhuo.com/down/html/mongodb.html)\n     [link](http://downloads.mongodb.org/win32/mongodb-win32-x86_64-2.6.6.zip)\n     [link](http://jingyan.baidu.com/article/d5c4b52bef7268da560dc5f8.html)\n     [link](http://www.cnblogs.com/flyoung2008/archive/2012/07/18/2597269.html)\n\n \n ## tools\n [在线编辑](https://codepen.io/jorisvanr/pen/aLbwze)\n \n **vpn地址翻墙**\n [翻墙](http://free-ss.tk/)\n [翻墙注册](https://tuziss.top/user)  \n [ps下载](http://blog.sina.com.cn/s/blog_15f375ee90102xmu7.html)  \n [夜神虚拟器](https://www.yeshen.com/blog/reactnativeyeshen/)\n [微信公众号文档](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1445241432)  \n[mac网站photoshop](http://xclient.info/s/adobe-photoshop-cc.html?_=2750326cc66f92704763f6236df260bc#history_versions)  \n[程序员去哪儿](https://activity.lagou.com/topic/javabj.html)  \n[更好运用chrome](http://jeffjade.com/2017/05/01/122-how-to-better-use-google_chrome/?from=juejin)  \n[图片压缩](https://tinypng.com/)\n[简历](http://cv.heeroluo.net/)\n[二维码生成](https://cli.im/)  \n[css揭秘下载地址](http://pan.baidu.com/s/1jI9AqEy?errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&)  \n[chrome://about/](chrome://about/)  \n[git命令行操作](http://www.cnblogs.com/tugenhua0707/p/4050072.html)  \n[网页简历](http://www.linqing07.com/resume.html)\n[前端面试](http://www.jobui.com/mianshiti/it/web/5066/)\n\n","slug":"website","published":1,"updated":"2018-06-12T03:06:41.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiliy801000m80wg458ndssa","content":"<h1 id=\"学习网站\"><a href=\"#学习网站\" class=\"headerlink\" title=\"学习网站\"></a>学习网站</h1><h2 id=\"导航链接\"><a href=\"#导航链接\" class=\"headerlink\" title=\"导航链接\"></a><strong>导航链接</strong></h2><h4 id=\"大前端网站\"><a href=\"#大前端网站\" class=\"headerlink\" title=\"大前端网站\"></a><a href=\"http://www.daqianduan.com/nav\" target=\"_blank\" rel=\"noopener\">大前端网站</a></h4><h4 id=\"腾讯出品导航\"><a href=\"#腾讯出品导航\" class=\"headerlink\" title=\"腾讯出品导航\"></a><a href=\"http://www.alloyteam.com/nav/\" target=\"_blank\" rel=\"noopener\">腾讯出品导航</a></h4><p>  <a href=\"https://www.awesomes.cn/\" target=\"_blank\" rel=\"noopener\">前端库</a><br>  <a href=\"https://docschina.org/#build\" target=\"_blank\" rel=\"noopener\">印记中文文档</a></p>\n<h2 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h2><h4 id=\"MDN文档\"><a href=\"#MDN文档\" class=\"headerlink\" title=\"MDN文档\"></a><a href=\"https://developer.mozilla.org/zh-CN/docs/Web\" target=\"_blank\" rel=\"noopener\">MDN文档</a></h4><h4 id=\"node文档接口\"><a href=\"#node文档接口\" class=\"headerlink\" title=\"node文档接口\"></a><a href=\"https://ecitlm.github.io/SpliderApi/#/\" target=\"_blank\" rel=\"noopener\">node文档接口</a></h4><h4 id=\"webpack文档\"><a href=\"#webpack文档\" class=\"headerlink\" title=\"webpack文档\"></a><a href=\"http://webpack.github.io/docs/code-splitting.html\" target=\"_blank\" rel=\"noopener\">webpack文档</a></h4><p> <a href=\"http://tool.lu/\" target=\"_blank\" rel=\"noopener\">在线工具</a></p>\n<h2 id=\"部门网站\"><a href=\"#部门网站\" class=\"headerlink\" title=\"部门网站\"></a>部门网站</h2><h4 id=\"百度fex前端研发部\"><a href=\"#百度fex前端研发部\" class=\"headerlink\" title=\"百度fex前端研发部\"></a><a href=\"https://note.youdao.com/\" target=\"_blank\" rel=\"noopener\">百度fex前端研发部</a></h4><h4 id=\"v2ex\"><a href=\"#v2ex\" class=\"headerlink\" title=\"v2ex\"></a><a href=\"https://www.v2ex.com/?tab=tech\" target=\"_blank\" rel=\"noopener\">v2ex</a></h4><p>  <a href=\"https://news.ycombinator.com/\" target=\"_blank\" rel=\"noopener\">hackernews</a><br>  <a href=\"https://www.qcloud.com/community/2\" target=\"_blank\" rel=\"noopener\">腾云阁</a><br>  <a href=\"https://www.qdfuns.com/\" target=\"_blank\" rel=\"noopener\">前端网</a><br>  <a href=\"http://www.yyyweb.com/\" target=\"_blank\" rel=\"noopener\">前端里</a><br>  <a href=\"https://segmentfault.com/news\" target=\"_blank\" rel=\"noopener\">segmenttfault网址</a><br>  <a href=\"http://xinsheng.huawei.com/cn/index/guest.html\" target=\"_blank\" rel=\"noopener\">华为心声社区</a><br>  <a href=\"https://stackoverflow.com/\" target=\"_blank\" rel=\"noopener\">stackoverflow</a><br>  <a href=\"http://taobaofed.org/\" target=\"_blank\" rel=\"noopener\">淘宝fed</a><br>  <a href=\"http://www.aliued.com/?p=3130\" target=\"_blank\" rel=\"noopener\">淘宝fed</a></p>\n<h2 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h2><p> <a href=\"http://web.jobbole.com/\" target=\"_blank\" rel=\"noopener\">伯乐在线</a><br> <a href=\"http://www.ruanyifeng.com/blog/developer/\" target=\"_blank\" rel=\"noopener\">阮一峰博客</a><br> <a href=\"http://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭</a><br><a href=\"http://www.cnblogs.com/PeunZhang/p/3407453.html\" target=\"_blank\" rel=\"noopener\">白色樟树</a><br><a href=\"http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000\" target=\"_blank\" rel=\"noopener\">廖雪峰</a><br><a href=\"http://www.cnblogs.com/lhb25/\" target=\"_blank\" rel=\"noopener\">梦想天空</a><br><a href=\"https://github.com/xitu/gold-miner/blob/master/front-end.md\" target=\"_blank\" rel=\"noopener\">掘金翻译计划</a><br><a href=\"https://github.com/xitu/gold-miner\" target=\"_blank\" rel=\"noopener\">掘金翻译计划1</a>   <a href=\"https://github.com/JacksonTian/fks\" target=\"_blank\" rel=\"noopener\">前端技能汇总 </a></p>\n<p> <strong>hexo</strong><br>   <a href=\"https://pzhicong.github.io/\" target=\"_blank\" rel=\"noopener\">我的博客</a><br>     <a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">根据这个来的</a><br>   <a href=\"http://imteo.com/\" target=\"_blank\" rel=\"noopener\">涂振宇博客</a><br>   <a href=\"http://www.jellyleo.com/categories/index.html\" target=\"_blank\" rel=\"noopener\">hexo在线博客例子</a><br>  <a href=\"http://obkoro1.com/\" target=\"_blank\" rel=\"noopener\">hexo在线博客</a><br>   <a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">hexo文档</a></p>\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><h4 id=\"CSS五种方式实现Footer置底\"><a href=\"#CSS五种方式实现Footer置底\" class=\"headerlink\" title=\"CSS五种方式实现Footer置底\"></a><a href=\"http://liaokeyu.com/%E6%8A%80%E6%9C%AF/2017/01/06/%E8%AF%91-CSS%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0Footer%E7%BD%AE%E5%BA%95.html\" target=\"_blank\" rel=\"noopener\">CSS五种方式实现Footer置底</a></h4><p> <a href=\"https://juejin.im/post/599970f4518825243a78b9d5\" target=\"_blank\" rel=\"noopener\">布局grid&amp;&amp;flex</a><br>  <a href=\"http://www.cnblogs.com/lyzg/p/4877277.html#\" target=\"_blank\" rel=\"noopener\">淘宝&amp;&amp;网易布局标准</a><br>  <a href=\"https://brianway.github.io/2017/05/18/css-layout-classical-problems/\" target=\"_blank\" rel=\"noopener\">css经典比翼双飞</a><br>  <a href=\"https://segmentfault.com/a/1190000003936841\" target=\"_blank\" rel=\"noopener\">CSS 高级技巧汇总</a><br> <a href=\"http://www.css88.com/book/css/properties/flex/flex.htm\" target=\"_blank\" rel=\"noopener\">FLEX css3手册</a><br>   <a href=\"https://www.w3cplus.com/css/mindbemding-getting-your-head-round-bem-syntax.html\" target=\"_blank\" rel=\"noopener\">BEM命名</a><br>    <a href=\"https://github.com/necolas/normalize.css\" target=\"_blank\" rel=\"noopener\">css reset</a></p>\n<p> <strong>BEC</strong><br>    <a href=\"http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html\" target=\"_blank\" rel=\"noopener\">BFC</a><br>    <a href=\"http://www.jianshu.com/p/76484dff1cb5\" target=\"_blank\" rel=\"noopener\">BFC</a><br>    <a href=\"http://web.jobbole.com/84808/\" target=\"_blank\" rel=\"noopener\">BFC</a></p>\n<p>  <strong>进度条</strong></p>\n<p>  <a href=\"http://www.cnblogs.com/jr1993/p/4677921.html\" target=\"_blank\" rel=\"noopener\">环形进度条</a><br>  <a href=\"http://blog.csdn.net/angeljsl/article/details/51208960\" target=\"_blank\" rel=\"noopener\">环形进度条</a><br>  <a href=\"http://blog.csdn.net/qq_21058391/article/details/76691047\" target=\"_blank\" rel=\"noopener\">H5环形进度条(canvas)</a><br> <a href=\"http://www.jianshu.com/p/eab547396163\" target=\"_blank\" rel=\"noopener\">微信小程序环形进度条（canvas）</a><br>  <a href=\"http://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/\" target=\"_blank\" rel=\"noopener\">(svg)</a><br>   <a href=\"http://www.zhangxinxu.com/wordpress/2011/04/css-clip-rect/\" target=\"_blank\" rel=\"noopener\">css clip</a><br>  <a href=\"https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A1.html\" target=\"_blank\" rel=\"noopener\">自己的</a><br>  <a href=\"https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A11.html\" target=\"_blank\" rel=\"noopener\">自己的</a>  </p>\n<p><a href=\"http://www.zhangxinxu.com/wordpress/2016/05/css3-width-max-contnet-min-content-fit-content/\" target=\"_blank\" rel=\"noopener\">理解CSS3 max/min-content</a></p>\n<p><strong>css动画</strong><br>  <a href=\"http://nec.netease.com/library/category/#animation\" target=\"_blank\" rel=\"noopener\">动画库</a><br>  <a href=\"https://segmentfault.com/a/1190000010640099\" target=\"_blank\" rel=\"noopener\">自己编写的动画库</a><br> <a href=\"https://segmentfault.com/a/1190000010427231\" target=\"_blank\" rel=\"noopener\">动画</a></p>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><p>  <a href=\"https://yoyoyohamapi.gitbooks.io/undersercore-analysis/content/base/%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81.html\" target=\"_blank\" rel=\"noopener\">underscore源码解析</a><br>  <a href=\"http://www.css88.com/doc/underscore/\" target=\"_blank\" rel=\"noopener\">undercode中文文档</a><br>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming\" target=\"_blank\" rel=\"noopener\">性能performance</a><br>   <a href=\"https://zhuanlan.zhihu.com/p/25467376\" target=\"_blank\" rel=\"noopener\">rxjs</a>  </p>\n<p>   <a href=\"http://www.redux.org.cn/docs/introduction/Examples.html\" target=\"_blank\" rel=\"noopener\">redux</a><br>   <a href=\"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html\" target=\"_blank\" rel=\"noopener\">redux阮一峰</a><br>   <strong>es6</strong><br>   <a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">阮一峰es6入门</a><br>   <a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener\">babel</a><br>   <a href=\"http://babeljs.cn/\" target=\"_blank\" rel=\"noopener\">babel中文</a><br>   <a href=\"http://react.yubolun.com/docs/state-and-lifecycle.html\" target=\"_blank\" rel=\"noopener\">react</a><br>   <a href=\"https://juejin.im/post/5958bac35188250d892f5c91\" target=\"_blank\" rel=\"noopener\">用过的算法记录</a><br>     <a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md\" target=\"_blank\" rel=\"noopener\">es8</a><br>     <a href=\"http://web.jobbole.com/84247/\" target=\"_blank\" rel=\"noopener\">es7装饰器</a><br>     <strong>图片上传预览</strong><br>        <a href=\"http://wangyong31893189.iteye.com/blog/1695472\" target=\"_blank\" rel=\"noopener\">上传</a><br> <a href=\"http://www.cnblogs.com/shinefon-2-2/p/5901330.html\" target=\"_blank\" rel=\"noopener\">图片上传</a><br>  <a href=\"https://github.com/xiangpaopao/blog/issues/7\" target=\"_blank\" rel=\"noopener\">图片上传旋转</a><br><a href=\"https://segmentfault.com/a/1190000000754560\" target=\"_blank\" rel=\"noopener\">图片本地剪裁上传</a></p>\n<p>  <strong>模块加载 cmd amd</strong><br>  <a href=\"https://www.zhihu.com/question/56820346/answer/150743994\" target=\"_blank\" rel=\"noopener\">require 与import区别</a><br>  <a href=\"http://blog.csdn.net/jackwen110200/article/details/52105493\" target=\"_blank\" rel=\"noopener\">链接</a><br>  <a href=\"http://blog.csdn.net/u014445339/article/details/55517770\" target=\"_blank\" rel=\"noopener\">link</a>  </p>\n<p>  <a href=\"https://juejin.im/entry/55c8dbb160b22a3ebdf34d57\" target=\"_blank\" rel=\"noopener\">项目用到的gulp</a><br>   <a href=\"http://blog.csdn.net/becoming_okami/article/details/52290967\" target=\"_blank\" rel=\"noopener\">chrome 调试</a><br>   <a href=\"http://fex.baidu.com/blog/2015/01/chrome-stalled-problem-resolving-process/\" target=\"_blank\" rel=\"noopener\">http挂起百度经验</a><br>   <a href=\"http://www.cnblogs.com/canfoo/p/6891868.html\" target=\"_blank\" rel=\"noopener\">vue双向绑定</a><br>    <a href=\"https://segmentfault.com/a/1190000006599500\" target=\"_blank\" rel=\"noopener\">vue双向绑定</a></p>\n<p>   <strong>webpack</strong><br>      <a href=\"https://www.jianshu.com/p/42e11515c10f\" target=\"_blank\" rel=\"noopener\">webpack</a><br>  <a href=\"https://segmentfault.com/a/1190000008644830\" target=\"_blank\" rel=\"noopener\">vue-cli webpack配置分享</a><br>  <a href=\"https://fakefish.github.io/react-webpack-cookbook/Automatic-browser-refresh.html\" target=\"_blank\" rel=\"noopener\">Wepack+React小书</a><br>  <a href=\"http://webpack.github.io/\" target=\"_blank\" rel=\"noopener\">Webpack官网</a><br>  <a href=\"http://segmentfault.com/a/1190000002552008#articleHeader7\" target=\"_blank\" rel=\"noopener\">Webpack怎么用</a><br>  <strong>react</strong><br>  <a href=\"http://reactjs.cn/\" target=\"_blank\" rel=\"noopener\">react.js中文文档</a><br><a href=\"https://hulufei.gitbooks.io/react-tutorial/content/introduction.html\" target=\"_blank\" rel=\"noopener\">react.js入门教程(gitbook)</a><br> <a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"noopener\">阮一峰</a><br><a href=\"http://react.nodejs-china.org/t/reactjs/584\" target=\"_blank\" rel=\"noopener\">react.js视频教程</a> </p>\n<p>  <strong>渲染domLoad</strong><br>     <a href=\"http://www.cnblogs.com/caizhenbo/p/6679478.html\" target=\"_blank\" rel=\"noopener\">DOMContentLoaded</a><br>   <a href=\"https://juejin.im/post/59c60691518825396f4f71a1\" target=\"_blank\" rel=\"noopener\">掘金</a><br>  <a href=\"https://segmentfault.com/a/1190000008550336\" target=\"_blank\" rel=\"noopener\">渲染树</a><br>  <a href=\"http://www.w3cplus.com/performance/chrome-timeline.html\" target=\"_blank\" rel=\"noopener\">timeline</a></p>\n<p><a href=\"https://www.cnblogs.com/PeunZhang/p/3510083.html\" target=\"_blank\" rel=\"noopener\">css硬件加速</a><br>  <a href=\"https://segmentfault.com/a/1190000011516068\" target=\"_blank\" rel=\"noopener\">chrome performance面板</a><br>   <a href=\"http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%E5%8A%A8%E7%94%BB%E7%AE%97%E6%B3%95/\" target=\"_blank\" rel=\"noopener\">requestAnimFrame绘制</a><br>   <a href=\"http://javascript.ruanyifeng.com/htmlapi/requestanimationframe.html\" target=\"_blank\" rel=\"noopener\">requestAnimFrame绘制1</a><br>    <a href=\"http://2014.jsconf.cn/slides/herman-taobaoweb/index.html#/95\" target=\"_blank\" rel=\"noopener\">淘宝前后端分离方案</a><br>    <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onbeforeunload\" target=\"_blank\" rel=\"noopener\">onbeforeunload</a><br>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight\" target=\"_blank\" rel=\"noopener\">clientHeight文档</a><br><a href=\"http://hentaicracker.github.io/2016/liqi.html\" target=\"_blank\" rel=\"noopener\">图片懒加载</a><br>  <a href=\"https://github.com/maxzhang/maxzhang.github.com/issues/2\" target=\"_blank\" rel=\"noopener\">移动深坑</a><br><a href=\"https://juejin.im/post/58f558efac502e006c3e5c97\" target=\"_blank\" rel=\"noopener\">面试不合格系列</a><br><a href=\"https://segmentfault.com/q/1010000009359167\" target=\"_blank\" rel=\"noopener\">前后端渲染</a><br><strong>断点续传（网盘）</strong><br><a href=\"https://github.com/23/resumable.js\" target=\"_blank\" rel=\"noopener\">最后使用这个resumable.js</a><br><a href=\"http://blog.csdn.net/zph1234/article/details/50577885\" target=\"_blank\" rel=\"noopener\">断点上传（拖拽效果）</a><br><a href=\"http://www.zhangxinxu.com/wordpress/2013/11/xmlhttprequest-ajax-localstorage-%E6%96%87%E4%BB%B6%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"https://www.centos.bz/2015/09/nginx-upload-module-multipart-form-data-resumable/\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"http://www.cnblogs.com/mywebnumber/p/5953398.html\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"https://github.com/moyuyc/moUploader\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"https://segmentfault.com/a/1190000006909562\" target=\"_blank\" rel=\"noopener\">断点续传</a></p>\n<h2 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h2><p>  <a href=\"http://blog.csdn.net/u011240877/article/details/76582670\" target=\"_blank\" rel=\"noopener\">npm用法</a><br>  <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">搜包</a><br> <a href=\"http://www.jianshu.com/p/28bca6529150\" target=\"_blank\" rel=\"noopener\">nvm node多版本控制</a><br> <a href=\"http://www.jianshu.com/p/6b816c609669\" target=\"_blank\" rel=\"noopener\">koa2起步到填坑</a><br>   <a href=\"http://www.cnblogs.com/jaxu/p/5193643.html\" target=\"_blank\" rel=\"noopener\">pm2</a><br>   <a href=\"https://github.com/nswbmw/N-blog/wiki/%E7%AC%AC1%E7%AB%A0--%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%9A%E5%AE%A2\" target=\"_blank\" rel=\"noopener\">node.js博客项目</a><br>      <a href=\"http://blog.csdn.net/fansongy/article/details/42156109\" target=\"_blank\" rel=\"noopener\">记得要看  async.js </a><br>  <strong>mogodb</strong><br>     <a href=\"http://www.cnblogs.com/aaronjs/p/4445543.html\" target=\"_blank\" rel=\"noopener\">最新看到的</a><br>     <a href=\"http://www.veryhuo.com/down/html/mongodb.html\" target=\"_blank\" rel=\"noopener\">link</a><br>     <a href=\"http://downloads.mongodb.org/win32/mongodb-win32-x86_64-2.6.6.zip\" target=\"_blank\" rel=\"noopener\">link</a><br>     <a href=\"http://jingyan.baidu.com/article/d5c4b52bef7268da560dc5f8.html\" target=\"_blank\" rel=\"noopener\">link</a><br>     <a href=\"http://www.cnblogs.com/flyoung2008/archive/2012/07/18/2597269.html\" target=\"_blank\" rel=\"noopener\">link</a></p>\n<h2 id=\"tools\"><a href=\"#tools\" class=\"headerlink\" title=\"tools\"></a>tools</h2><p> <a href=\"https://codepen.io/jorisvanr/pen/aLbwze\" target=\"_blank\" rel=\"noopener\">在线编辑</a></p>\n<p> <strong>vpn地址翻墙</strong><br> <a href=\"http://free-ss.tk/\" target=\"_blank\" rel=\"noopener\">翻墙</a><br> <a href=\"https://tuziss.top/user\" target=\"_blank\" rel=\"noopener\">翻墙注册</a><br> <a href=\"http://blog.sina.com.cn/s/blog_15f375ee90102xmu7.html\" target=\"_blank\" rel=\"noopener\">ps下载</a><br> <a href=\"https://www.yeshen.com/blog/reactnativeyeshen/\" target=\"_blank\" rel=\"noopener\">夜神虚拟器</a><br> <a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1445241432\" target=\"_blank\" rel=\"noopener\">微信公众号文档</a><br><a href=\"http://xclient.info/s/adobe-photoshop-cc.html?_=2750326cc66f92704763f6236df260bc#history_versions\" target=\"_blank\" rel=\"noopener\">mac网站photoshop</a><br><a href=\"https://activity.lagou.com/topic/javabj.html\" target=\"_blank\" rel=\"noopener\">程序员去哪儿</a><br><a href=\"http://jeffjade.com/2017/05/01/122-how-to-better-use-google_chrome/?from=juejin\" target=\"_blank\" rel=\"noopener\">更好运用chrome</a><br><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">图片压缩</a><br><a href=\"http://cv.heeroluo.net/\" target=\"_blank\" rel=\"noopener\">简历</a><br><a href=\"https://cli.im/\" target=\"_blank\" rel=\"noopener\">二维码生成</a><br><a href=\"http://pan.baidu.com/s/1jI9AqEy?errno=0&amp;errmsg=Auth%20Login%20Sucess&amp;&amp;bduss=&amp;ssnerror=0&amp;\" target=\"_blank\" rel=\"noopener\">css揭秘下载地址</a><br><a href=\"chrome://about/\" target=\"_blank\" rel=\"noopener\">chrome://about/</a><br><a href=\"http://www.cnblogs.com/tugenhua0707/p/4050072.html\" target=\"_blank\" rel=\"noopener\">git命令行操作</a><br><a href=\"http://www.linqing07.com/resume.html\" target=\"_blank\" rel=\"noopener\">网页简历</a><br><a href=\"http://www.jobui.com/mianshiti/it/web/5066/\" target=\"_blank\" rel=\"noopener\">前端面试</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"学习网站\"><a href=\"#学习网站\" class=\"headerlink\" title=\"学习网站\"></a>学习网站</h1><h2 id=\"导航链接\"><a href=\"#导航链接\" class=\"headerlink\" title=\"导航链接\"></a><strong>导航链接</strong></h2><h4 id=\"大前端网站\"><a href=\"#大前端网站\" class=\"headerlink\" title=\"大前端网站\"></a><a href=\"http://www.daqianduan.com/nav\" target=\"_blank\" rel=\"noopener\">大前端网站</a></h4><h4 id=\"腾讯出品导航\"><a href=\"#腾讯出品导航\" class=\"headerlink\" title=\"腾讯出品导航\"></a><a href=\"http://www.alloyteam.com/nav/\" target=\"_blank\" rel=\"noopener\">腾讯出品导航</a></h4><p>  <a href=\"https://www.awesomes.cn/\" target=\"_blank\" rel=\"noopener\">前端库</a><br>  <a href=\"https://docschina.org/#build\" target=\"_blank\" rel=\"noopener\">印记中文文档</a></p>\n<h2 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h2><h4 id=\"MDN文档\"><a href=\"#MDN文档\" class=\"headerlink\" title=\"MDN文档\"></a><a href=\"https://developer.mozilla.org/zh-CN/docs/Web\" target=\"_blank\" rel=\"noopener\">MDN文档</a></h4><h4 id=\"node文档接口\"><a href=\"#node文档接口\" class=\"headerlink\" title=\"node文档接口\"></a><a href=\"https://ecitlm.github.io/SpliderApi/#/\" target=\"_blank\" rel=\"noopener\">node文档接口</a></h4><h4 id=\"webpack文档\"><a href=\"#webpack文档\" class=\"headerlink\" title=\"webpack文档\"></a><a href=\"http://webpack.github.io/docs/code-splitting.html\" target=\"_blank\" rel=\"noopener\">webpack文档</a></h4><p> <a href=\"http://tool.lu/\" target=\"_blank\" rel=\"noopener\">在线工具</a></p>\n<h2 id=\"部门网站\"><a href=\"#部门网站\" class=\"headerlink\" title=\"部门网站\"></a>部门网站</h2><h4 id=\"百度fex前端研发部\"><a href=\"#百度fex前端研发部\" class=\"headerlink\" title=\"百度fex前端研发部\"></a><a href=\"https://note.youdao.com/\" target=\"_blank\" rel=\"noopener\">百度fex前端研发部</a></h4><h4 id=\"v2ex\"><a href=\"#v2ex\" class=\"headerlink\" title=\"v2ex\"></a><a href=\"https://www.v2ex.com/?tab=tech\" target=\"_blank\" rel=\"noopener\">v2ex</a></h4><p>  <a href=\"https://news.ycombinator.com/\" target=\"_blank\" rel=\"noopener\">hackernews</a><br>  <a href=\"https://www.qcloud.com/community/2\" target=\"_blank\" rel=\"noopener\">腾云阁</a><br>  <a href=\"https://www.qdfuns.com/\" target=\"_blank\" rel=\"noopener\">前端网</a><br>  <a href=\"http://www.yyyweb.com/\" target=\"_blank\" rel=\"noopener\">前端里</a><br>  <a href=\"https://segmentfault.com/news\" target=\"_blank\" rel=\"noopener\">segmenttfault网址</a><br>  <a href=\"http://xinsheng.huawei.com/cn/index/guest.html\" target=\"_blank\" rel=\"noopener\">华为心声社区</a><br>  <a href=\"https://stackoverflow.com/\" target=\"_blank\" rel=\"noopener\">stackoverflow</a><br>  <a href=\"http://taobaofed.org/\" target=\"_blank\" rel=\"noopener\">淘宝fed</a><br>  <a href=\"http://www.aliued.com/?p=3130\" target=\"_blank\" rel=\"noopener\">淘宝fed</a></p>\n<h2 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h2><p> <a href=\"http://web.jobbole.com/\" target=\"_blank\" rel=\"noopener\">伯乐在线</a><br> <a href=\"http://www.ruanyifeng.com/blog/developer/\" target=\"_blank\" rel=\"noopener\">阮一峰博客</a><br> <a href=\"http://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭</a><br><a href=\"http://www.cnblogs.com/PeunZhang/p/3407453.html\" target=\"_blank\" rel=\"noopener\">白色樟树</a><br><a href=\"http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000\" target=\"_blank\" rel=\"noopener\">廖雪峰</a><br><a href=\"http://www.cnblogs.com/lhb25/\" target=\"_blank\" rel=\"noopener\">梦想天空</a><br><a href=\"https://github.com/xitu/gold-miner/blob/master/front-end.md\" target=\"_blank\" rel=\"noopener\">掘金翻译计划</a><br><a href=\"https://github.com/xitu/gold-miner\" target=\"_blank\" rel=\"noopener\">掘金翻译计划1</a>   <a href=\"https://github.com/JacksonTian/fks\" target=\"_blank\" rel=\"noopener\">前端技能汇总 </a></p>\n<p> <strong>hexo</strong><br>   <a href=\"https://pzhicong.github.io/\" target=\"_blank\" rel=\"noopener\">我的博客</a><br>     <a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">根据这个来的</a><br>   <a href=\"http://imteo.com/\" target=\"_blank\" rel=\"noopener\">涂振宇博客</a><br>   <a href=\"http://www.jellyleo.com/categories/index.html\" target=\"_blank\" rel=\"noopener\">hexo在线博客例子</a><br>  <a href=\"http://obkoro1.com/\" target=\"_blank\" rel=\"noopener\">hexo在线博客</a><br>   <a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">hexo文档</a></p>\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><h4 id=\"CSS五种方式实现Footer置底\"><a href=\"#CSS五种方式实现Footer置底\" class=\"headerlink\" title=\"CSS五种方式实现Footer置底\"></a><a href=\"http://liaokeyu.com/%E6%8A%80%E6%9C%AF/2017/01/06/%E8%AF%91-CSS%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0Footer%E7%BD%AE%E5%BA%95.html\" target=\"_blank\" rel=\"noopener\">CSS五种方式实现Footer置底</a></h4><p> <a href=\"https://juejin.im/post/599970f4518825243a78b9d5\" target=\"_blank\" rel=\"noopener\">布局grid&amp;&amp;flex</a><br>  <a href=\"http://www.cnblogs.com/lyzg/p/4877277.html#\" target=\"_blank\" rel=\"noopener\">淘宝&amp;&amp;网易布局标准</a><br>  <a href=\"https://brianway.github.io/2017/05/18/css-layout-classical-problems/\" target=\"_blank\" rel=\"noopener\">css经典比翼双飞</a><br>  <a href=\"https://segmentfault.com/a/1190000003936841\" target=\"_blank\" rel=\"noopener\">CSS 高级技巧汇总</a><br> <a href=\"http://www.css88.com/book/css/properties/flex/flex.htm\" target=\"_blank\" rel=\"noopener\">FLEX css3手册</a><br>   <a href=\"https://www.w3cplus.com/css/mindbemding-getting-your-head-round-bem-syntax.html\" target=\"_blank\" rel=\"noopener\">BEM命名</a><br>    <a href=\"https://github.com/necolas/normalize.css\" target=\"_blank\" rel=\"noopener\">css reset</a></p>\n<p> <strong>BEC</strong><br>    <a href=\"http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html\" target=\"_blank\" rel=\"noopener\">BFC</a><br>    <a href=\"http://www.jianshu.com/p/76484dff1cb5\" target=\"_blank\" rel=\"noopener\">BFC</a><br>    <a href=\"http://web.jobbole.com/84808/\" target=\"_blank\" rel=\"noopener\">BFC</a></p>\n<p>  <strong>进度条</strong></p>\n<p>  <a href=\"http://www.cnblogs.com/jr1993/p/4677921.html\" target=\"_blank\" rel=\"noopener\">环形进度条</a><br>  <a href=\"http://blog.csdn.net/angeljsl/article/details/51208960\" target=\"_blank\" rel=\"noopener\">环形进度条</a><br>  <a href=\"http://blog.csdn.net/qq_21058391/article/details/76691047\" target=\"_blank\" rel=\"noopener\">H5环形进度条(canvas)</a><br> <a href=\"http://www.jianshu.com/p/eab547396163\" target=\"_blank\" rel=\"noopener\">微信小程序环形进度条（canvas）</a><br>  <a href=\"http://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/\" target=\"_blank\" rel=\"noopener\">(svg)</a><br>   <a href=\"http://www.zhangxinxu.com/wordpress/2011/04/css-clip-rect/\" target=\"_blank\" rel=\"noopener\">css clip</a><br>  <a href=\"https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A1.html\" target=\"_blank\" rel=\"noopener\">自己的</a><br>  <a href=\"https://pzhicong.github.io/cici/css3%E8%BF%9B%E5%BA%A6%E6%9D%A11.html\" target=\"_blank\" rel=\"noopener\">自己的</a>  </p>\n<p><a href=\"http://www.zhangxinxu.com/wordpress/2016/05/css3-width-max-contnet-min-content-fit-content/\" target=\"_blank\" rel=\"noopener\">理解CSS3 max/min-content</a></p>\n<p><strong>css动画</strong><br>  <a href=\"http://nec.netease.com/library/category/#animation\" target=\"_blank\" rel=\"noopener\">动画库</a><br>  <a href=\"https://segmentfault.com/a/1190000010640099\" target=\"_blank\" rel=\"noopener\">自己编写的动画库</a><br> <a href=\"https://segmentfault.com/a/1190000010427231\" target=\"_blank\" rel=\"noopener\">动画</a></p>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><p>  <a href=\"https://yoyoyohamapi.gitbooks.io/undersercore-analysis/content/base/%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81%E8%BF%AD%E4%BB%A3%EF%BC%81.html\" target=\"_blank\" rel=\"noopener\">underscore源码解析</a><br>  <a href=\"http://www.css88.com/doc/underscore/\" target=\"_blank\" rel=\"noopener\">undercode中文文档</a><br>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming\" target=\"_blank\" rel=\"noopener\">性能performance</a><br>   <a href=\"https://zhuanlan.zhihu.com/p/25467376\" target=\"_blank\" rel=\"noopener\">rxjs</a>  </p>\n<p>   <a href=\"http://www.redux.org.cn/docs/introduction/Examples.html\" target=\"_blank\" rel=\"noopener\">redux</a><br>   <a href=\"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html\" target=\"_blank\" rel=\"noopener\">redux阮一峰</a><br>   <strong>es6</strong><br>   <a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">阮一峰es6入门</a><br>   <a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener\">babel</a><br>   <a href=\"http://babeljs.cn/\" target=\"_blank\" rel=\"noopener\">babel中文</a><br>   <a href=\"http://react.yubolun.com/docs/state-and-lifecycle.html\" target=\"_blank\" rel=\"noopener\">react</a><br>   <a href=\"https://juejin.im/post/5958bac35188250d892f5c91\" target=\"_blank\" rel=\"noopener\">用过的算法记录</a><br>     <a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/es8-was-released-and-here-are-its-main-new-features.md\" target=\"_blank\" rel=\"noopener\">es8</a><br>     <a href=\"http://web.jobbole.com/84247/\" target=\"_blank\" rel=\"noopener\">es7装饰器</a><br>     <strong>图片上传预览</strong><br>        <a href=\"http://wangyong31893189.iteye.com/blog/1695472\" target=\"_blank\" rel=\"noopener\">上传</a><br> <a href=\"http://www.cnblogs.com/shinefon-2-2/p/5901330.html\" target=\"_blank\" rel=\"noopener\">图片上传</a><br>  <a href=\"https://github.com/xiangpaopao/blog/issues/7\" target=\"_blank\" rel=\"noopener\">图片上传旋转</a><br><a href=\"https://segmentfault.com/a/1190000000754560\" target=\"_blank\" rel=\"noopener\">图片本地剪裁上传</a></p>\n<p>  <strong>模块加载 cmd amd</strong><br>  <a href=\"https://www.zhihu.com/question/56820346/answer/150743994\" target=\"_blank\" rel=\"noopener\">require 与import区别</a><br>  <a href=\"http://blog.csdn.net/jackwen110200/article/details/52105493\" target=\"_blank\" rel=\"noopener\">链接</a><br>  <a href=\"http://blog.csdn.net/u014445339/article/details/55517770\" target=\"_blank\" rel=\"noopener\">link</a>  </p>\n<p>  <a href=\"https://juejin.im/entry/55c8dbb160b22a3ebdf34d57\" target=\"_blank\" rel=\"noopener\">项目用到的gulp</a><br>   <a href=\"http://blog.csdn.net/becoming_okami/article/details/52290967\" target=\"_blank\" rel=\"noopener\">chrome 调试</a><br>   <a href=\"http://fex.baidu.com/blog/2015/01/chrome-stalled-problem-resolving-process/\" target=\"_blank\" rel=\"noopener\">http挂起百度经验</a><br>   <a href=\"http://www.cnblogs.com/canfoo/p/6891868.html\" target=\"_blank\" rel=\"noopener\">vue双向绑定</a><br>    <a href=\"https://segmentfault.com/a/1190000006599500\" target=\"_blank\" rel=\"noopener\">vue双向绑定</a></p>\n<p>   <strong>webpack</strong><br>      <a href=\"https://www.jianshu.com/p/42e11515c10f\" target=\"_blank\" rel=\"noopener\">webpack</a><br>  <a href=\"https://segmentfault.com/a/1190000008644830\" target=\"_blank\" rel=\"noopener\">vue-cli webpack配置分享</a><br>  <a href=\"https://fakefish.github.io/react-webpack-cookbook/Automatic-browser-refresh.html\" target=\"_blank\" rel=\"noopener\">Wepack+React小书</a><br>  <a href=\"http://webpack.github.io/\" target=\"_blank\" rel=\"noopener\">Webpack官网</a><br>  <a href=\"http://segmentfault.com/a/1190000002552008#articleHeader7\" target=\"_blank\" rel=\"noopener\">Webpack怎么用</a><br>  <strong>react</strong><br>  <a href=\"http://reactjs.cn/\" target=\"_blank\" rel=\"noopener\">react.js中文文档</a><br><a href=\"https://hulufei.gitbooks.io/react-tutorial/content/introduction.html\" target=\"_blank\" rel=\"noopener\">react.js入门教程(gitbook)</a><br> <a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"noopener\">阮一峰</a><br><a href=\"http://react.nodejs-china.org/t/reactjs/584\" target=\"_blank\" rel=\"noopener\">react.js视频教程</a> </p>\n<p>  <strong>渲染domLoad</strong><br>     <a href=\"http://www.cnblogs.com/caizhenbo/p/6679478.html\" target=\"_blank\" rel=\"noopener\">DOMContentLoaded</a><br>   <a href=\"https://juejin.im/post/59c60691518825396f4f71a1\" target=\"_blank\" rel=\"noopener\">掘金</a><br>  <a href=\"https://segmentfault.com/a/1190000008550336\" target=\"_blank\" rel=\"noopener\">渲染树</a><br>  <a href=\"http://www.w3cplus.com/performance/chrome-timeline.html\" target=\"_blank\" rel=\"noopener\">timeline</a></p>\n<p><a href=\"https://www.cnblogs.com/PeunZhang/p/3510083.html\" target=\"_blank\" rel=\"noopener\">css硬件加速</a><br>  <a href=\"https://segmentfault.com/a/1190000011516068\" target=\"_blank\" rel=\"noopener\">chrome performance面板</a><br>   <a href=\"http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%E5%8A%A8%E7%94%BB%E7%AE%97%E6%B3%95/\" target=\"_blank\" rel=\"noopener\">requestAnimFrame绘制</a><br>   <a href=\"http://javascript.ruanyifeng.com/htmlapi/requestanimationframe.html\" target=\"_blank\" rel=\"noopener\">requestAnimFrame绘制1</a><br>    <a href=\"http://2014.jsconf.cn/slides/herman-taobaoweb/index.html#/95\" target=\"_blank\" rel=\"noopener\">淘宝前后端分离方案</a><br>    <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onbeforeunload\" target=\"_blank\" rel=\"noopener\">onbeforeunload</a><br>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight\" target=\"_blank\" rel=\"noopener\">clientHeight文档</a><br><a href=\"http://hentaicracker.github.io/2016/liqi.html\" target=\"_blank\" rel=\"noopener\">图片懒加载</a><br>  <a href=\"https://github.com/maxzhang/maxzhang.github.com/issues/2\" target=\"_blank\" rel=\"noopener\">移动深坑</a><br><a href=\"https://juejin.im/post/58f558efac502e006c3e5c97\" target=\"_blank\" rel=\"noopener\">面试不合格系列</a><br><a href=\"https://segmentfault.com/q/1010000009359167\" target=\"_blank\" rel=\"noopener\">前后端渲染</a><br><strong>断点续传（网盘）</strong><br><a href=\"https://github.com/23/resumable.js\" target=\"_blank\" rel=\"noopener\">最后使用这个resumable.js</a><br><a href=\"http://blog.csdn.net/zph1234/article/details/50577885\" target=\"_blank\" rel=\"noopener\">断点上传（拖拽效果）</a><br><a href=\"http://www.zhangxinxu.com/wordpress/2013/11/xmlhttprequest-ajax-localstorage-%E6%96%87%E4%BB%B6%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"https://www.centos.bz/2015/09/nginx-upload-module-multipart-form-data-resumable/\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"http://www.cnblogs.com/mywebnumber/p/5953398.html\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"https://github.com/moyuyc/moUploader\" target=\"_blank\" rel=\"noopener\">断点续传</a><br><a href=\"https://segmentfault.com/a/1190000006909562\" target=\"_blank\" rel=\"noopener\">断点续传</a></p>\n<h2 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h2><p>  <a href=\"http://blog.csdn.net/u011240877/article/details/76582670\" target=\"_blank\" rel=\"noopener\">npm用法</a><br>  <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">搜包</a><br> <a href=\"http://www.jianshu.com/p/28bca6529150\" target=\"_blank\" rel=\"noopener\">nvm node多版本控制</a><br> <a href=\"http://www.jianshu.com/p/6b816c609669\" target=\"_blank\" rel=\"noopener\">koa2起步到填坑</a><br>   <a href=\"http://www.cnblogs.com/jaxu/p/5193643.html\" target=\"_blank\" rel=\"noopener\">pm2</a><br>   <a href=\"https://github.com/nswbmw/N-blog/wiki/%E7%AC%AC1%E7%AB%A0--%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%9A%E5%AE%A2\" target=\"_blank\" rel=\"noopener\">node.js博客项目</a><br>      <a href=\"http://blog.csdn.net/fansongy/article/details/42156109\" target=\"_blank\" rel=\"noopener\">记得要看  async.js </a><br>  <strong>mogodb</strong><br>     <a href=\"http://www.cnblogs.com/aaronjs/p/4445543.html\" target=\"_blank\" rel=\"noopener\">最新看到的</a><br>     <a href=\"http://www.veryhuo.com/down/html/mongodb.html\" target=\"_blank\" rel=\"noopener\">link</a><br>     <a href=\"http://downloads.mongodb.org/win32/mongodb-win32-x86_64-2.6.6.zip\" target=\"_blank\" rel=\"noopener\">link</a><br>     <a href=\"http://jingyan.baidu.com/article/d5c4b52bef7268da560dc5f8.html\" target=\"_blank\" rel=\"noopener\">link</a><br>     <a href=\"http://www.cnblogs.com/flyoung2008/archive/2012/07/18/2597269.html\" target=\"_blank\" rel=\"noopener\">link</a></p>\n<h2 id=\"tools\"><a href=\"#tools\" class=\"headerlink\" title=\"tools\"></a>tools</h2><p> <a href=\"https://codepen.io/jorisvanr/pen/aLbwze\" target=\"_blank\" rel=\"noopener\">在线编辑</a></p>\n<p> <strong>vpn地址翻墙</strong><br> <a href=\"http://free-ss.tk/\" target=\"_blank\" rel=\"noopener\">翻墙</a><br> <a href=\"https://tuziss.top/user\" target=\"_blank\" rel=\"noopener\">翻墙注册</a><br> <a href=\"http://blog.sina.com.cn/s/blog_15f375ee90102xmu7.html\" target=\"_blank\" rel=\"noopener\">ps下载</a><br> <a href=\"https://www.yeshen.com/blog/reactnativeyeshen/\" target=\"_blank\" rel=\"noopener\">夜神虚拟器</a><br> <a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1445241432\" target=\"_blank\" rel=\"noopener\">微信公众号文档</a><br><a href=\"http://xclient.info/s/adobe-photoshop-cc.html?_=2750326cc66f92704763f6236df260bc#history_versions\" target=\"_blank\" rel=\"noopener\">mac网站photoshop</a><br><a href=\"https://activity.lagou.com/topic/javabj.html\" target=\"_blank\" rel=\"noopener\">程序员去哪儿</a><br><a href=\"http://jeffjade.com/2017/05/01/122-how-to-better-use-google_chrome/?from=juejin\" target=\"_blank\" rel=\"noopener\">更好运用chrome</a><br><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">图片压缩</a><br><a href=\"http://cv.heeroluo.net/\" target=\"_blank\" rel=\"noopener\">简历</a><br><a href=\"https://cli.im/\" target=\"_blank\" rel=\"noopener\">二维码生成</a><br><a href=\"http://pan.baidu.com/s/1jI9AqEy?errno=0&amp;errmsg=Auth%20Login%20Sucess&amp;&amp;bduss=&amp;ssnerror=0&amp;\" target=\"_blank\" rel=\"noopener\">css揭秘下载地址</a><br><a href=\"chrome://about/\" target=\"_blank\" rel=\"noopener\">chrome://about/</a><br><a href=\"http://www.cnblogs.com/tugenhua0707/p/4050072.html\" target=\"_blank\" rel=\"noopener\">git命令行操作</a><br><a href=\"http://www.linqing07.com/resume.html\" target=\"_blank\" rel=\"noopener\">网页简历</a><br><a href=\"http://www.jobui.com/mianshiti/it/web/5066/\" target=\"_blank\" rel=\"noopener\">前端面试</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjiliy7vj000080wgx91y5ybh","category_id":"cjiliy7vu000480wgpb2top4a","_id":"cjiliy7w9000e80wgjwh6pxva"}],"PostTag":[{"post_id":"cjiliy7vj000080wgx91y5ybh","tag_id":"cjiliy7vw000580wgr5e2blv2","_id":"cjiliy7w3000b80wg0o87p091"},{"post_id":"cjiliy7vq000280wgxctz7tr4","tag_id":"cjiliy7w2000a80wgy9h42m9n","_id":"cjiliy7wa000g80wgrx4joh1b"},{"post_id":"cjiliy7w0000880wggyv09pr6","tag_id":"cjiliy7w9000f80wgpwmd48g4","_id":"cjiliy7wc000i80wgvidvu8jr"},{"post_id":"cjiliy7w2000980wgg7dwacdw","tag_id":"cjiliy7w9000f80wgpwmd48g4","_id":"cjiliy7wd000k80wgokzlzwle"},{"post_id":"cjiliy7w7000d80wgfsm5x662","tag_id":"cjiliy7wd000j80wgr5l6xjnb","_id":"cjiliy7we000l80wg6siqanf2"}],"Tag":[{"name":"Hexo","_id":"cjiliy7vw000580wgr5e2blv2"},{"name":"browser","_id":"cjiliy7w2000a80wgy9h42m9n"},{"name":"css","_id":"cjiliy7w9000f80wgpwmd48g4"},{"name":"tools","_id":"cjiliy7wd000j80wgr5l6xjnb"}]}}